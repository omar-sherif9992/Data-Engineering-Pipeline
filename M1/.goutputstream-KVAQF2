{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "431ec02f"
   },
   "source": [
    "# Milestone 1\n",
    "\n",
    "## Objectives\n",
    "\n",
    "- Exploratory data analysis with visualization\n",
    "- extract additional data,\n",
    "- perform feature engineering\n",
    "- pre-process the data for downstream cases such as ML and data analysis.\n",
    "\n",
    "## Dataset\n",
    "\n",
    "- NYC green taxis dataset : It contains records\n",
    "  about trips conducted in NYC through green taxis. The dataset is available at [NYC green taxi](https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page)\n",
    "- There are multiple datasets for this case study(a dataset for each month) so I am assigned to 10/2016 dataset.\n",
    "\n",
    "## Guidelines\n",
    "\n",
    "- Load the dataset\n",
    "\n",
    "### EDA\n",
    "\n",
    "- Explore the dataset and ask at least 5 questions to give you a better\n",
    "  understanding of the data provided to you.\n",
    "- Visualize the answer to these 5 questions.\n",
    "\n",
    "### Cleaning the data\n",
    "\n",
    "- Tidy up the column names, make sure there is no spaces\n",
    "- Observe,comment on and handle inconsistent data.(i.e duplicates, irrelevant data,incorrect data,etc)\n",
    "- Observe missing data and comment on why you believe it is missing(MCAR,MAR or MNAR).\n",
    "- Handle missing data\n",
    "- Observe and comment on outliers\n",
    "- Handle outliers\n",
    "\n",
    "IMPORTANT NOTE : With every change you are making to the data you need to comment on why you used this technique and how has it affected the data(by both showing the change in the data i.e change in number of rows/columns,change in distribution, etc. and commenting on it).\n",
    "\n",
    "### Feature Engineering\n",
    "\n",
    "- Add 2 new columns named 'Week number' and 'Date range' and discretize\n",
    "  the data into weeks according to the dates.\n",
    "  - Tip: Change the datatype of the date feature to datetime type instead\n",
    "    of object.\n",
    "- Encode any categorical feature(s) and comment on why you used this\n",
    "  technique and how the data has changed.\n",
    "- If exists , Identify feature(s) which need normalization and show your\n",
    "  reasoning. Then choose a technique to normalize the feature(s) and\n",
    "  comment on why you chose this technique.\n",
    "- Add at least two more columns which adds more info to the dataset by\n",
    "  evaluating specific feature(s). I.E( Column indicating whether the trip was on\n",
    "  a weekend or not).\n",
    "\n",
    "### Additional data extraction\n",
    "\n",
    "- Add GPS coordinates for the cities/locations.\n",
    "- For this task you can extract the GPS coordinates from an API or web\n",
    "  scraping and integrate into your csv file as new features.\n",
    "- Tip 1 - you can find the web scraping and data integration notebooks under 'additional resources' on the CMS useful.\n",
    "- Tip 2 - If you are going to use an API make sure you do not make request for each existing row but rather group by the cities and get their respective coordinates. Making a request for each row is too inefficient and expensive.\n",
    "- Tip 3 - Rather than running the code for calling the API each time you load the notebook, the first time you call the API save the results in a csv file and then you could you check if a csv file exists for the GPS coordinates, if so, load directly and don't call APi. Same applies for web scraping.\n",
    "\n",
    "### Lookup table and load back into new csv file\n",
    "\n",
    "- Create a lookup table\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "%%html\n",
    "<style>\n",
    "/* Scroll to anchor smoothly */\n",
    "a[href^=\"#\"] {\n",
    "    transition: scroll-behavior 0.5s;\n",
    "}\n",
    "</style>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Table Of Content <a id='table-of-content'></a>\n",
    "\n",
    "- <a href=\"#constants\">Constants</a>\n",
    "\n",
    "  - <a href=\"#lookup\">Lookup Tables</a>\n",
    "\n",
    "- <a href=\"#helper-methods\">Helper Methods</a>\n",
    "\n",
    "  - <a href=\"#format\">Formatting and OS utils Methods</a>\n",
    "  - <a href='#plot'> Different Plotting Functions with outlier detection </a>\n",
    "  - <a href=\"#checks\"> Check and Drop based on criteria Methods</a>\n",
    "  - <a href=\"#imputation\"> Imputation and Outlier Handling Methods</a>\n",
    "  - <a href=\"#discretization\"> Discretization and Binning Methods</a>\n",
    "  - <a href=\"#encode\">Encode Methods</a>\n",
    "  - <a href=\"#decode\">Decode Methods</a>\n",
    "\n",
    "- <a href=\"#extraction\">Extraction , Formatting and Basic EDA - **Checkpoint 1**</a>\n",
    "\n",
    "  - <a href=\"#load\">loading the dataset</a>\n",
    "  - <a href=\"#format_column_names\">Format Column Names</a>\n",
    "  - <a href=\"#sort_column_names\"> Sort Column Names Monotonically</a>\n",
    "  - <a href='#missing_columns'> identifying the columns with missing values _(to takecare of them later)_</a>\n",
    "  - <a href=\"#eda\">Exploratory Data Analysis through Description and Initial Understanding - **EDA**</a>\n",
    "  - <a href=\"#shape\">Dataset Row Shape and Index </a>\n",
    "  - <a href=\"#numeric-attributes\">Q1. Understanding Numeric Attributes and Investigating - **Basic EDA**</a>\n",
    "  - <a href=\"#object-attributes\">Q2. Understanding Object Attributes and Investigating - **Basic EDA**</a>\n",
    "  - <a href=\"#ehail-fee\"> In the data description Quick fix Dropping Ehail Fee and Congestion Surcharge if it doesn't consist of 2019 records otherwise imputing (MNAR)</a>\n",
    "  - <a href=\"#drop-duplicates\"> We will Drop Duplicated Entries Intially (we might do it again at the end too) </a>\n",
    "  - <a href=\"#drop-empty\">We will Drop Empty Entries Intially (we might do it again at the end too) </a>\n",
    "\n",
    "- <a href=\"#vendor\"> vendors and store_fwd_flag investigation and encoding - **Checkpoint 2** </a>\n",
    "\n",
    "  - <a href=\"#vendor-operate\"> Q3. How vendors operate with taxi caps - **Basic EDA** </a>\n",
    "  - <a href='#encode-vendor'> Encoding Vendor </a>\n",
    "  - <a href=\"#store-operate\"> Q4. How Store and Forward Flag operate with taxi caps - **Basic EDA**</a>\n",
    "  - <a href=\"#encode-store\">Encoding Store and Forward Flag </a>\n",
    "\n",
    "- <a href=\"#datetime-attributes\">Understanding Datetime attributes and Investigating - **Checkpoint 3**</a>\n",
    "\n",
    "  - <a href=\"#pickup-dropoff-datetime-format-consistency\"> Pickup and Dropoff Datetime format and consistency - cleaning</a>\n",
    "  - <a href=\"#feature-engineered-from-datetime-attributes\">feature engineered from datetime attributes 4 new attributes </a>\n",
    "\n",
    "- <a href=\"#extract_gps_loc\"> Location(MCAR) and Extract GPS Coordinates Integration - **Checkpoint 4** </a>\n",
    "\n",
    "  - <a href=\"#pu_do_MCAR\"> Why pickup and dropoff locations are MCAR ? </a>\n",
    "  - <a href=\"#handle_pu_do_MCAR\"> How to handle locations MCAR ? </a>\n",
    "  - <a href=\"#extract_gps\"> Extract GPS Coordinates Integration </a>\n",
    "  - <a href=\"#extract_haversine_distance\"> Extract Haversine Distance from GPS Coordinates - Feature Engineering</a>\n",
    "  - <a href=\"#trips-neighborhoods-same-diff\">Q5. Are the Trips are mostly within neighborhoods or between neighborhoods? - **Complex EDA** </a>\n",
    "  - <a href=\"#pickup-dropoff-location-top10\">Q6. What is the Top 10 pickup and dropoff location within same or different neighborhoods? - **Complex EDA** </a>\n",
    "  - <a href=\"#queens-austria\"> Why Queens austria is the most same pickup and dropoff location? </a>\n",
    "  - <a href=\"#manhatten\">Why Manhattan East Harlem North is the most different pickup and dropoff location? </a>\n",
    "\n",
    "- <a href=\"#trip-distance-time-speed\">Investigating trip distance,time and speed attribute values and distribution (Multivariate Analysis) - Complex EDA - **Checkpoint 5**</a>\n",
    "  - <a href=\"#feature-engineered-from-datetime-attributes\">Feature Engineered mph</a>\n",
    "  - <a href=\"#trip-distance-outliers\"> Detecting and Handling Outliers for Trip Distance, Total Trip Time and Mph </a>\n",
    "  - <a href=\"#floor-ceiling-trip-distance-outliers\"> Floor and Ceiling Trip distance Outliers </a>\n",
    "  - <a href=\"#same-pu-do-datetime\">Q6. why we have trips that have same pickup and dropoff location and date time ? </a>\n",
    "  - <a href=\"#discretize-trip-distance\"> Discretize the Trip Distance Attribute </a>\n",
    "  - <a href=\"#encode-trip-distance-bins\"> Encode trip_distance_bins </a>\n",
    "  - <a href=\"#most-frequent-trip-distance\">Q7. What is the most frequent trip distance range? </a>\n",
    "  - <a href=\"#discretize-rush-hours\"> Discretize the records whether they are in rush hours or not </a>\n",
    "  - <a href=\"#trips-period\"> Q8. what is the most hour,day,weekend, and weekday that have the most average ,median trip distance and number of trips?  - **Complex EDA** </a>\n",
    "  - <a href=\"#encode-do-pu-location\"> Encode the do_location and pu_location </a>\n",
    "\n",
    "- <a href=\"#passenger-count\"> Passenger Count Relationship with other columns and Investigating (MCAR) - **Checkpoint 6**</a>\n",
    "  - <a href=\"#passenger-count-MCAR\"> Why passenger_count Missing Completely at Random <a href=\"#MCAR\">MCAR</a> : </a>\n",
    "\n",
    "- <a href=\"#rate_type\"> Rate Type Analysis- **Checkpoint 7**</a>\n",
    "  - <a href=\"#rate-type-MCAR\">Why rate_type <a href=\"#MCAR\">MCAR</a> ? </a>\n",
    "  - <a href=\"#rate-type-encode\"> Rate type Encoding </a>\n",
    "  - <a href=\"#rate-type-discretize\"> Discretize rate types into 3 trip categories</a>\n",
    "  - <a href=\"#trip-category-encoding\">Trip Category Encoding </a>\n",
    "\n",
    "- <a href=\"#trip-type\"> Trip Type - **Checkpoint 8** </a>\n",
    "  -  <a href=\"#trip-type-MCAR\"> Why trip_type <a href=\"MCAR\">(MCAR)</a> ? </a>\n",
    "  -  <a href=\"#trip-type-encode\"> Trip type Encoding </a>\n",
    "\n",
    "- <a href=\"#total-amount\">Total Amount Relationship with other numerical columns and Investigating - **Checkpoint 9**</a>\n",
    "  - <a href=\"#total-amount-outliers\"> Detecting and Handling Outliers for Total Amount </a>\n",
    "  - <a href=\"#total-amount-discretize\"> Discretize Total Amount </a>\n",
    "  - <a href=\"#total-amount-period\"> Q9. what is the most hour,day,weekend, and weekday that have the most average ,median of Total Amount Payed?</a>\n",
    "- <a href=\"#passenger-count-payment-type\"> Investigating Payment Type(MAR) Relationships, Imputations and Insights - **Checkpoint 10**</a>\n",
    "  - <a href=\"#payment-type-MAR\"> Why Payment type  <a href=\"#MAR\">MAR</a> ? </a>\n",
    "  - <a href=\"#payment-type-preference\">Q10. What is is the preference of different payment type generally and within the day or week ? </a>\n",
    "- <a href=\"#normalization-standardization\"> Normalization and Standardization - **Checkpoint 11**</a>\n",
    "- <a href=\"#class-imbalance\"> Class Imbalance Problem </a>\n",
    "- <a href=\"#featured-engineered-attributes\"> Featured Engineered Attributes </a>\n",
    "- <a href=\"#last-checks\"> Last Checks  </a>\n",
    "- <a href=\"#last-advices\"> Last Advices  </a>\n",
    "\n",
    "- <a href=\"#save-cleaned-data\"> Saving the Lookup Table and Cleaned Data to a new csv file </a>\n",
    "\n",
    "\n",
    "- <a href=\"#definitions\"> Definitions</a>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UWAcpzAHWmN-"
   },
   "source": [
    "##### Connecting with google drive\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# A flag indicating whether the code is running on Google Colab.\n",
    "isONGOOGLE = False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "if isONGOOGLE:\n",
    "    from google.colab import drive\n",
    "    # Mount google drive to load training and testing data\n",
    "    drive.mount('/content/drive', force_remount=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "oxRnxMdVYJNM"
   },
   "source": [
    "#### Downloading Necessary Packages\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "id": "xVDC9i9uYIpW"
   },
   "outputs": [],
   "source": [
    "if isONGOOGLE:\n",
    "    !pip install requests\n",
    "    !pip install seaborn\n",
    "    !pip install geopandas\n",
    "    !pip install geopy\n",
    "    !pip install jupyter_contrib_nbextensions\n",
    "    !pip install pyarrow\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "caWb6A6PWqzC"
   },
   "source": [
    "#### importing packages\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "id": "NH9CZl_25du5"
   },
   "outputs": [],
   "source": [
    "# Standard Library\n",
    "import os\n",
    "import random\n",
    "import string\n",
    "import time\n",
    "import math\n",
    "import requests\n",
    "\n",
    "# Web Requests\n",
    "import requests\n",
    "\n",
    "# Data Manipulation & Preprocessing\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler, MinMaxScaler,RobustScaler\n",
    "from tabulate import tabulate\n",
    "\n",
    "# Parquet\n",
    "import pyarrow as pa\n",
    "import pyarrow.parquet as pq\n",
    "\n",
    "\n",
    "# Data Visualization\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import matplotlib.image as mpimg\n",
    "\n",
    "# Machine Learning\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "\n",
    "# Date and Time\n",
    "import datetime\n",
    "\n",
    "# Warnings\n",
    "import warnings\n",
    "\n",
    "# Regular Expressions\n",
    "import re\n",
    "\n",
    "# Other\n",
    "import shutil\n",
    "from typing import List, Tuple, Dict, Any, Union\n",
    "from IPython.display import display\n",
    "\n",
    "\n",
    "# Set Random Seed\n",
    "RANDOM_SEED = 42\n",
    "RANDOM_STATE = 42\n",
    "\n",
    "\n",
    "def set_seed(seed=42):\n",
    "    global RANDOM_SEED, RANDOM_STATE\n",
    "    RANDOM_SEED = seed\n",
    "    RANDOM_STATE = seed\n",
    "    random.seed(seed)\n",
    "    np.random.seed(seed)\n",
    "\n",
    "\n",
    "# Set Matplotlib defaults\n",
    "plt.style.use('ggplot')\n",
    "plt.rc(\"figure\", autolayout=True)\n",
    "plt.rc(\n",
    "    \"axes\",\n",
    "    labelweight=\"bold\",\n",
    "    labelsize=\"large\",\n",
    "    titleweight=\"bold\",\n",
    "    titlesize=14,\n",
    "    titlepad=10,\n",
    ")\n",
    "# Set your Google Maps API key here\n",
    "api_key = \"AIzaSyBXV_Q4_CWvV7btH9drTwc3BYRoj2GwozQ\"\n",
    "\n",
    "warnings.filterwarnings('ignore')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vCdUhrzMYPPO"
   },
   "source": [
    "## Constants <a id='constants'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "id": "FyuJy9h5YR_3"
   },
   "outputs": [],
   "source": [
    "MYINFO = 'DEW23 Omar Sherif Ali 49-3324 MET'  # Information about a person.\n",
    "\n",
    "MILESTONE = 1  # The current milestone.\n",
    "\n",
    "if isONGOOGLE:\n",
    "    # Define the root directory path on Google Colab.\n",
    "    ROOT_DIR = f'/content/drive/My Drive/DataEngineering/{MYINFO}/Milestone {MILESTONE}'\n",
    "else:\n",
    "    ROOT_DIR = '.'  # Define the root directory path for other environments.\n",
    "\n",
    "# This where all the Packages are cached instead of reinstalling them every new runtime\n",
    "PACKAGES_DIR = f'{ROOT_DIR}/Packages'  # Directory for caching packages.\n",
    "\n",
    "DATASET_DIR = f'{ROOT_DIR}/Dataset'  # Directory for storing datasets.\n",
    "DATASET_NAME = 'green_tripdata_2016-10.csv'  # Name of the dataset file.\n",
    "\n",
    "# This is where the figures are saved\n",
    "FIGURES_DIR = f'{ROOT_DIR}/Figures'  # Directory for saving figures.\n",
    "\n",
    "FIGURE_COUNTS = 1  # Number of figures.\n",
    "SAVED_FIGURES = {}  # A dictionary for saving figures.\n",
    "\n",
    "FEATURED_ENGINEER_COLS = []  # A list of columns that are featured engineered.\n",
    "FIGURES = {}  # A dictionary for storing figures.\n",
    "\n",
    "RENAME_NAMES = [()]  # A list containing tuples for renaming names.\n",
    "\n",
    "EXPECTED_DATA_TYPES = {}  # A dictionary for expected data types.\n",
    "\n",
    "HISTORY_TRACK = []  # A list for tracking historical data.\n",
    "\n",
    "ENCODED_PREFIX = 'encoded_'  # Prefix for encoded data.\n",
    "CLEAN_PREFIX = 'cleaned_'  # Prefix for cleaned data.\n",
    "# Prefix for cleaned and imputed data.\n",
    "CLEAN_IMPUTED_PREFIX = CLEAN_PREFIX + 'imputed_'\n",
    "\n",
    "DAY_NAME_MAPPING = {\n",
    "    0: 'Monday',\n",
    "    1: 'Tuesday',\n",
    "    2: 'Wednesday',\n",
    "    3: 'Thursday',\n",
    "    4: 'Friday',\n",
    "    5: 'Saturday',\n",
    "    6: 'Sunday'\n",
    "}  # A dictionary mapping numerical day values to their names.\n",
    "\n",
    "# So that I can flag whether\n",
    "STEPS = {\n",
    "    'BEFORE': 0,\n",
    "    'AFTER': 1,\n",
    "}  # A dictionary representing various data processing steps and their corresponding numeric values.\n",
    "\n",
    "# Initialize the current step to the EDA (Exploratory Data Analysis) step.\n",
    "CURRENT_STEP = STEPS['BEFORE']\n",
    "\n",
    "CHECKPOINT_COUNTER = 0  # A counter for the number of checkpoints.\n",
    "CHECKPOINT_DIR = f'{ROOT_DIR}/Checkpoints'  # Directory for saving checkpoints.\n",
    "\n",
    "IMPUTE_TABLES_DIR = f'{ROOT_DIR}/impute'  # Directory for saving impute tables.\n",
    "ENCODE_TABLES_DIR = f'{ROOT_DIR}/encode'  # Directory for saving encode tables.\n",
    "LOOKUP_TABLES_DIR = f'{ROOT_DIR}/lookup'  # Directory for saving lookup tables.\n",
    "\n",
    "\n",
    "FIXED_COLUMNS_NAMES = []\n",
    "ORIGINAL_COLUMNS_NAMES = []\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Lookup tables dictionaries <a id=\"lookup\"></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "LOOKUP_TABLE = {}    # An empty list used as a general lookup table."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Helper Functions <a id=\"helper-methods\"></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "QFXzxRytgJZC"
   },
   "source": [
    "#### Formatting and OS utils functions <a id='format'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_dataframe(file_path: str, file_format='csv', **kwargs) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Load a DataFrame from a file in CSV or Parquet format.\n",
    "    \"\"\"\n",
    "    # Check if the specified format is valid\n",
    "    if file_format not in ['csv', 'parquet']:\n",
    "        raise ValueError(\"Invalid file format. Use 'csv' or 'parquet'.\")\n",
    "\n",
    "    # Load the DataFrame in the specified format\n",
    "    if file_format == 'csv':\n",
    "        df = pd.read_csv(file_path, **kwargs)\n",
    "    elif file_format == 'parquet':\n",
    "\n",
    "        table = pq.read_table(file_path)\n",
    "        df = table.to_pandas()\n",
    "\n",
    "    print(f\"DataFrame loaded from {file_format} file: {file_path}\")\n",
    "    return df\n",
    "\n",
    "\n",
    "def save_dataframe(df: pd.DataFrame, file_path: str, file_format='csv'):\n",
    "    \"\"\"\n",
    "    Save a DataFrame to a file in CSV or Parquet format, creating directories if they don't exist.\n",
    "    \"\"\"\n",
    "    # Check if the specified format is valid\n",
    "    if file_format not in ['csv', 'parquet']:\n",
    "        raise ValueError(\"Invalid file format. Use 'csv' or 'parquet'.\")\n",
    "\n",
    "    # Check if df is a DataFrame\n",
    "    if not isinstance(df, pd.DataFrame):\n",
    "        raise ValueError(\"df is not a DataFrame.\")\n",
    "    # Create the directory if it doesn't exist\n",
    "\n",
    "    directory = os.path.dirname(file_path)\n",
    "\n",
    "    if not os.path.exists(directory):\n",
    "        os.makedirs(directory)\n",
    "\n",
    "    # Save the DataFrame in the specified format\n",
    "    if file_format == 'csv':\n",
    "        if not file_path.endswith('.csv'):\n",
    "            file_path += '.csv'\n",
    "        df.to_csv(file_path, index=False)\n",
    "    elif file_format == 'parquet':\n",
    "        if not file_path.endswith('.parquet'):\n",
    "            file_path += '.parquet.gzip'\n",
    "        table = pa.Table.from_pandas(df)\n",
    "        pq.write_table(table, file_path, compression='gzip')\n",
    "\n",
    "    print(f\"DataFrame saved to {file_format} file: {file_path}\")\n",
    "    return file_path\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def insert_to_lookup_table(column_name: str, original_value: Any, imputed: Any, encoded: Any, message: str) -> None:\n",
    "    \"\"\"\n",
    "    Inserts a value to the lookup table.\n",
    "    \"\"\"\n",
    "    if column_name not in LOOKUP_TABLE:\n",
    "        LOOKUP_TABLE[column_name] = []\n",
    "    isExist = False\n",
    "    for item in LOOKUP_TABLE[column_name]:\n",
    "        if \"original\" in item and \"imputed\" in item and \"encoded\" in item:\n",
    "            if item[\"original\"] == original_value and (item[\"imputed\"] == imputed or item[\"encoded\"] == encoded):\n",
    "                isExist = True\n",
    "                break\n",
    "    if not isExist:\n",
    "        value = {\n",
    "            \"original\": original_value,\n",
    "            \"imputed\": imputed,\n",
    "            \"encoded\": encoded,\n",
    "            \"message\": message\n",
    "        }\n",
    "        LOOKUP_TABLE[column_name].append(value)\n",
    "\n",
    "\n",
    "def save_lookup_table(file_name: str):\n",
    "    \"\"\"\n",
    "    Saves all the lookup table to a single CSV file.\n",
    "    \"\"\"\n",
    "    # Create an empty list to store all dataframes\n",
    "    all_dfs = []\n",
    "\n",
    "    for key in LOOKUP_TABLE:\n",
    "        table = LOOKUP_TABLE[key]\n",
    "        df = pd.DataFrame(table)\n",
    "\n",
    "        if 'imputed' in df.columns and 'encoded' in df.columns:\n",
    "            if len(table) > 0:\n",
    "                df.drop_duplicates(inplace=True)\n",
    "                df['column_name'] = key\n",
    "                all_dfs.append(df)\n",
    "\n",
    "    # Concatenate all dataframes together\n",
    "    concatenated_df = pd.concat(all_dfs, ignore_index=True)\n",
    "    print(\"============== Lookup Table =================\")\n",
    "    \n",
    "    # Sort the DataFrame by the 'column_name' column\n",
    "    concatenated_df.sort_values(by='column_name', inplace=True)\n",
    "    \n",
    "    # Reset the index based on the sorted order\n",
    "    concatenated_df = concatenated_df.reset_index(drop=True)\n",
    "    \n",
    "    display(concatenated_df)\n",
    "    # Save the concatenated dataframe to a single CSV file\n",
    "    save_dataframe(concatenated_df, os.path.join(\n",
    "        LOOKUP_TABLES_DIR, file_name), 'csv')\n",
    "\n",
    "\n",
    "def save_encode_table():\n",
    "    \"\"\"\n",
    "    Saves each encode table to a CSV file.\n",
    "    \"\"\"\n",
    "    for key in LOOKUP_TABLE:\n",
    "        df = pd.DataFrame(LOOKUP_TABLE[key])\n",
    "\n",
    "        # Check if 'imputed' and 'encoded' columns exist\n",
    "        if 'imputed' in df.columns and 'encoded' in df.columns:\n",
    "            filtered_df = df[(df['imputed'].isna()) & (~df['encoded'].isna())]\n",
    "            \n",
    "            if not filtered_df.empty:\n",
    "                filtered_df.drop_duplicates(inplace=True)\n",
    "\n",
    "                display(filtered_df)\n",
    "                save_dataframe(filtered_df, os.path.join(\n",
    "                    ENCODE_TABLES_DIR, f'{key}.csv'))\n",
    "                print(\"=\" * 60)\n",
    "\n",
    "\n",
    "def save_impute_table():\n",
    "    \"\"\"\n",
    "    Saves each impute table to a CSV file.\n",
    "    \"\"\"\n",
    "    for key in LOOKUP_TABLE:\n",
    "        df = pd.DataFrame(LOOKUP_TABLE[key])\n",
    "        # Check if 'imputed' and 'encoded' columns exist\n",
    "        if 'imputed' in df.columns and 'encoded' in df.columns:\n",
    "            filtered_df = df[(~df['imputed'].isna()) & (df['encoded'].isna())]\n",
    "            if not filtered_df.empty:\n",
    "                filtered_df.drop_duplicates(inplace=True)\n",
    "                display(filtered_df)\n",
    "                save_dataframe(filtered_df, os.path.join(\n",
    "                    IMPUTE_TABLES_DIR, f'{key}.csv'))\n",
    "                print(\"=\"*60)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def save_checkpoint(df: pd.DataFrame, fixed_column_names: List[str]) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Saves a checkpoint of the given dataframe and returns a copy of it.\n",
    "    \"\"\"\n",
    "    global CHECKPOINT_COUNTER, CHECKPOINT_DIR\n",
    "    CHECKPOINT_COUNTER += 1\n",
    "    for col in fixed_column_names:\n",
    "        if col not in FIXED_COLUMNS_NAMES:\n",
    "            FIXED_COLUMNS_NAMES.append(col)\n",
    "    print(f'Checkpoint {CHECKPOINT_COUNTER} saved.')\n",
    "    print(f'{len(FIXED_COLUMNS_NAMES)} fixed columns saved out of {len(ORIGINAL_COLUMNS_NAMES)} total original columns.')\n",
    "    print(f'{len(FEATURED_ENGINEER_COLS)} featured engineered columns saved.')\n",
    "    print(\n",
    "        f\"Missing columns to investigate are : { [col for col in ORIGINAL_COLUMNS_NAMES if col not in FIXED_COLUMNS_NAMES]}\")\n",
    "\n",
    "    save_dataframe(df, os.path.join(\n",
    "        f'{CHECKPOINT_DIR}', f'checkpoint_{CHECKPOINT_COUNTER}'), 'csv')\n",
    "    return df.copy()\n",
    "\n",
    "\n",
    "def fix_types(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Fixes the data types of the given dataframe.\n",
    "    \"\"\"\n",
    "    global EXPECTED_DATA_TYPES\n",
    "    for col in df.columns:\n",
    "        try:\n",
    "            if col.endswith('datetime'):\n",
    "                df[col] = pd.to_datetime(df[col], infer_datetime_format=True)\n",
    "            elif col in EXPECTED_DATA_TYPES:\n",
    "                df[col] = df[col].astype(EXPECTED_DATA_TYPES[col])\n",
    "        except Exception as e:\n",
    "\n",
    "            print(f'Failed to convert {col} to {EXPECTED_DATA_TYPES[col]}')\n",
    "            print(e)\n",
    "    return df\n",
    "\n",
    "\n",
    "def load_checkpoint(checkpoint_number: int, reset=True) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Loads the checkpoint with the given number and returns it.\n",
    "    \"\"\"\n",
    "    global CHECKPOINT_DIR, CHECKPOINT_COUNTER, df\n",
    "    # Delete the Old DataFrame from memory\n",
    "    if 'df' in globals():\n",
    "        del df\n",
    "    if reset:\n",
    "        CHECKPOINT_COUNTER = checkpoint_number\n",
    "    print(f'Loading checkpoint {checkpoint_number}...')\n",
    "    return fix_types(pd.read_csv(f'{CHECKPOINT_DIR}/checkpoint_{checkpoint_number}.csv'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def feature_engineer(name: str, message: str, type: str):\n",
    "    \"\"\"\n",
    "    Append the feature engineer name and message to the list.\n",
    "    and update the EXPECTED_DATA_TYPES dictionary.\n",
    "    \"\"\"\n",
    "    if name not in FEATURED_ENGINEER_COLS:\n",
    "        EXPECTED_DATA_TYPES[name] = type\n",
    "        # Append the feature engineer name and message to the list if it is not already in the list.\n",
    "        FEATURED_ENGINEER_COLS.append(\n",
    "            {'name': name, 'message': message, 'type': type})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def format_large_number(large_number: float) -> str:\n",
    "    \"\"\"\n",
    "    Format a large number with comma separators.\n",
    "    \"\"\"\n",
    "    return \"{:,.2f}\".format(large_number)  # Comma separator for thousands, 2 decimal places\n",
    "\n",
    " # to avoid the scientific notation(to be more readable)\n",
    "pd.set_option('display.float_format', format_large_number)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def format_string(string: str) -> str:\n",
    "    \"\"\"\n",
    "    Format a string by removing leading and trailing whitespaces, converting it to lowercase,\n",
    "    and replacing any non-alphanumeric characters except comma with an empty space.\n",
    "    \"\"\"\n",
    "    string = string.strip().lower()\n",
    "    string = re.sub(r'[^a-z0-9,]', ' ', string).strip()\n",
    "    return string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Deleted file: ./Figures/Multivariate Analysis For Trip Distance, Total Trip Time Hr, Mph - After Handling Outliers , Fixing Mph-1.png\n",
      "Deleted file: ./Figures/Distribution Of Trip Distance Per Hour-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Total Amount Bins-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Trip Distance Bins-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Store And Fwd Flag-1.png\n",
      "Deleted file: ./Figures/Distribution Of Fare Amount, Trip Distance, Total Trip Time Sec-2.png\n",
      "Deleted file: ./Figures/Top 10 Pickup Locations from Different Neighborhoods-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount Per Hour-1.png\n",
      "Deleted file: ./Figures/Distribution Of Trip Distance Per Weekday-1.png\n",
      "Deleted file: ./Figures/Numeric Attributes Before-1.png\n",
      "Deleted file: ./Figures/Distribution Of Trip Distance, Trip Distance Haversine-1.png\n",
      "Deleted file: ./Figures/Preference by payment_type with vendor-1.png\n",
      "Deleted file: ./Figures/Multivariate Analysis For Trip Distance, Total Trip Time Hr, Mph - Before Handling Outliers-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount, Fare Amount, Trip Distance, Total Trip Time Hr-1.png\n",
      "Deleted file: ./Figures/Distribution Of Trip Distance Per Weekend-1.png\n",
      "Deleted file: ./Figures/Distribution Of Trip Distance Per Day-1.png\n",
      "Deleted file: ./Figures/Total Amount, Fare Amount, Trip Distance, Total Trip Time Hr Before-1.png\n",
      "Deleted file: ./Figures/Multivariate Analysis For Trip Distance, Total Trip Time Hr, Mph - After Handling Exceeding Outliers , Fixing Mph-1.png\n",
      "Deleted file: ./Figures/Distribution Of Fare Amount, Trip Distance, Total Trip Time Sec-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Trip Category-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Trip Type-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount Per Weekday-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Rate Type-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount Per Weekend-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount, Fare Amount, Trip Distance, Total Trip Time Hr-2.png\n",
      "Deleted file: ./Figures/total_time_histograms.png-2.png\n",
      "Deleted file: ./Figures/Value Counts Of Vendor-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Payment Type-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Rate Type-2.png\n",
      "Deleted file: ./Figures/total_time_histograms.png-1.png\n",
      "Deleted file: ./Figures/Correlation Heatmap - Correlation Matrix for TOTAL_AMOUNT Columns-1.png\n",
      "Deleted file: ./Figures/Distribution Of Total Amount Per Day-1.png\n",
      "Deleted file: ./Figures/Total Amount, Fare Amount, Trip Distance, Total Trip Time Hr After Resumming-1.png\n",
      "Deleted file: ./Figures/Preference by payment_type with day_type-1.png\n",
      "Deleted file: ./Figures/Value Counts Of Trip Type-2.png\n",
      "Deleted file: ./Figures/Top 10 Dropoff Locations from Different Neighborhoods-1.png\n",
      "Deleted file: ./Figures/Top 10 Pickup and Dropoff Locations within the Same Neighborhood-1.png\n",
      "Deleted file: ./Checkpoints/checkpoint_5.csv\n",
      "Deleted file: ./Checkpoints/checkpoint_10.csv\n",
      "Deleted file: ./Checkpoints/checkpoint_8.csv\n",
      "Deleted file: ./Checkpoints/checkpoint_6.csv\n",
      "Deleted file: ./Checkpoints/checkpoint_9.csv\n",
      "Deleted file: ./Checkpoints/checkpoint_7.csv\n",
      "Deleted file: ./encode/rate_type.csv\n",
      "Deleted file: ./encode/encoded_location.csv\n",
      "Deleted file: ./encode/total_amount_bins.csv\n",
      "Deleted file: ./encode/store_and_fwd_flag.csv\n",
      "Deleted file: ./encode/vendor.csv\n",
      "Deleted file: ./encode/trip_distance_bins.csv\n",
      "Deleted file: ./encode/trip_type.csv\n",
      "Deleted file: ./encode/trip_category.csv\n",
      "Deleted file: ./encode/payment_type.csv\n",
      "Deleted file: ./impute/total_amount_bins.csv\n",
      "Deleted file: ./impute/trip_distance_haversine.csv\n",
      "Deleted file: ./impute/is_rush_hour.csv\n",
      "Deleted file: ./impute/pu_location_latitude.csv\n",
      "Deleted file: ./impute/do_location_longitude.csv\n",
      "Deleted file: ./impute/trip_distance_bins.csv\n",
      "Deleted file: ./impute/pu_location_longitude.csv\n",
      "Deleted file: ./impute/do_location_latitude.csv\n",
      "Deleted file: ./impute/payment_type.csv\n",
      "Deleted file: ./lookup/lookup_table_green_taxis.csv\n"
     ]
    }
   ],
   "source": [
    "def empty_folders():\n",
    "    \"\"\"\n",
    "    Empties a folder by deleting all files and subdirectories.\n",
    "    \"\"\"\n",
    "    for folder_path in [FIGURES_DIR, CHECKPOINT_DIR, ENCODE_TABLES_DIR, IMPUTE_TABLES_DIR, LOOKUP_TABLES_DIR]:\n",
    "        if os.path.exists(folder_path):\n",
    "            if os.path.isdir(folder_path):\n",
    "                for root, dirs, files in os.walk(folder_path):\n",
    "                    for file in files:\n",
    "                        file_path = os.path.join(root, file)\n",
    "                        try:\n",
    "                            os.remove(file_path)\n",
    "                            print(f\"Deleted file: {file_path}\")\n",
    "                        except Exception as e:\n",
    "                            print(f\"Error deleting file: {file_path} - {e}\")\n",
    "\n",
    "                    for directory in dirs:\n",
    "                        dir_path = os.path.join(root, directory)\n",
    "                        try:\n",
    "                            shutil.rmtree(dir_path)\n",
    "                            print(f\"Deleted directory: {dir_path}\")\n",
    "                        except Exception as e:\n",
    "                            print(\n",
    "                                f\"Error deleting directory: {dir_path} - {e}\")\n",
    "            else:\n",
    "                print(f\"{folder_path} is not a directory.\")\n",
    "        else:\n",
    "            print(f\"The folder {folder_path} does not exist.\")\n",
    "\n",
    "\n",
    "empty_folders()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "id": "6S9jZXPfjt9W"
   },
   "outputs": [],
   "source": [
    "def save_figure(title: str, save_path=FIGURES_DIR) -> str:\n",
    "    \"\"\"\n",
    "    Saving Figures in the Figures Directory \n",
    "    returns the full path of the saved figure\n",
    "    \"\"\"\n",
    "    # Create the directory if it doesn't exist\n",
    "    os.makedirs(save_path, exist_ok=True)\n",
    "\n",
    "    figure_count = FIGURES.get(title, 0)+1\n",
    "    FIGURES[title] = figure_count\n",
    "\n",
    "    # Construct the filename with the title and figure count\n",
    "    filename = f'{title}-{figure_count}.png'\n",
    "\n",
    "    # Save the figure to the specified path\n",
    "    full_path = os.path.join(save_path, filename)\n",
    "    plt.savefig(full_path)\n",
    "    return full_path\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_and_display_figure(figure_path: str) -> bool:\n",
    "    \"\"\"\n",
    "    Load and display a saved figure.\n",
    "    \"\"\"\n",
    "    try:\n",
    "        # Load the image\n",
    "        image = mpimg.imread(figure_path)\n",
    "\n",
    "        # Display the image\n",
    "        plt.imshow(image)\n",
    "        print(f\"Figure loaded from path: {figure_path}\")\n",
    "        plt.axis('off')  # Optionally, turn off axis labels\n",
    "        plt.show()\n",
    "        return True\n",
    "\n",
    "    except FileNotFoundError:\n",
    "        print(f\"Figure not found at path: {figure_path}\")\n",
    "        return False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "id": "YNC_cuilgLws"
   },
   "outputs": [],
   "source": [
    "def history_to_dataframe(history_track):\n",
    "    \"\"\" to convert HISTORY_TRACK into a DataFrame  (here I flattend the column info)\"\"\"\n",
    "    flattened_data = []\n",
    "\n",
    "    for entry in history_track:\n",
    "        entry_data = {\n",
    "            'Message': entry['Message'],\n",
    "            'Number of Rows': entry['Number of Rows'],\n",
    "            'Number of Columns': entry['Number of Columns'],\n",
    "            'Count of Exist Null Entries': entry['Count of Exist Null Entries'],\n",
    "            'Count of All Null Entries': entry['Count of All Null Entries'],\n",
    "            'Percentage of All Null Entries': entry['Percentage of All Null Entries'],\n",
    "            'Percentage of Exist Null Entries': entry['Percentage of Exist Null Entries'],\n",
    "            'Step': entry['Step'],\n",
    "        }\n",
    "\n",
    "        # Flatten the \"Column Info\" dictionaries into separate columns\n",
    "        for col_info in entry[\"Column Info\"]:\n",
    "            col_name = col_info[\"Column Name\"]\n",
    "            entry_data[f\"{col_name}_Data Type\"] = col_info[\"Data Type\"]\n",
    "            entry_data[f\"{col_name}_Total Null Entries\"] = col_info[\"Total Null Entries\"]\n",
    "            entry_data[f\"{col_name}_Percentage of Null Entries\"] = col_info[\"Percentage of Null Entries\"]\n",
    "\n",
    "    flattened_data.append(entry_data)\n",
    "\n",
    "    return pd.DataFrame(flattened_data)\n",
    "\n",
    "\n",
    "def status(df: pd.DataFrame, message: str) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    print the status of the dataframe and track the history of the status of the dataframe and its attributes\n",
    "    \"\"\"\n",
    "    num_columns = len(df.columns)\n",
    "    num_rows = len(df)\n",
    "\n",
    "    column_info = []\n",
    "\n",
    "    unique_column_names = []\n",
    "\n",
    "    for column_name in df.columns:\n",
    "        perc_unique = (len(df[column_name].unique()) / len(df)) * 100\n",
    "\n",
    "        if perc_unique >= 90:\n",
    "            unique_column_names.append({column_name, perc_unique})\n",
    "        col_data = {\n",
    "            \"Column Name\": column_name,\n",
    "            \"Data Type\": df[column_name].dtype,\n",
    "            \"Total Null Entries\": df[column_name].isnull().sum(),\n",
    "            \"Percentage of Null Entries\": (df[column_name].isnull().mean()) * 100,\n",
    "            'Percentage of Unique Entries': perc_unique,\n",
    "        }\n",
    "        column_info.append(col_data)\n",
    "\n",
    "    # Count rows with at least one null value in any column\n",
    "    count_rows_with_nulls = (df.isnull().sum(axis=1) > 0).sum()\n",
    "    perc_exist_null = (count_rows_with_nulls / len(df)) * 100\n",
    "\n",
    "    # Count rows where all columns are null\n",
    "    count_rows_with_all_nulls = (df.isnull().sum(axis=1) == df.shape[1]).sum()\n",
    "    perc_all_null = (count_rows_with_all_nulls / len(df)) * 100\n",
    "\n",
    "    # Percentage of rows that are duplicates of other rows\n",
    "    perc_duplicate_rows = (df.duplicated().sum() / len(df)) * 100\n",
    "\n",
    "    print(f'Number of Rows: {num_rows}')\n",
    "    print(f'Number of Columns: {num_columns}')\n",
    "    print(f'Column Names: {df.columns}')\n",
    "    print(\n",
    "        f'Column Types: {[(column_name,df[column_name].dtype) for column_name in df.columns]}')\n",
    "    print(f'Percentage of All Null Entries {perc_all_null}%')\n",
    "    print(f'Percentage of Exist Null Entries {perc_exist_null}%')\n",
    "    print(f'Percentage of Duplicate Entries {perc_duplicate_rows}%')\n",
    "    print(f'Unique Column Names: {unique_column_names}')\n",
    "    HISTORY_TRACK.append({\n",
    "        'Message': message,\n",
    "        'Number of Rows': num_rows,\n",
    "        'Number of Columns': num_columns,\n",
    "        'Count of Exist Null Entries': count_rows_with_nulls,\n",
    "        'Count of All Null Entries': perc_all_null,\n",
    "        'Percentage of All Null Entries': perc_all_null,\n",
    "        'Percentage of Exist Null Entries': perc_exist_null,\n",
    "        'Percentage of Duplicate Entries': perc_duplicate_rows,\n",
    "        'Column Info': column_info,\n",
    "        'Step': CURRENT_STEP,\n",
    "    })\n",
    "    return history_to_dataframe(HISTORY_TRACK)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Different Plotting Functions with outlier detection <a id='plot'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_data(df:pd.DataFrame, columns_to_plot: List[str]):\n",
    "    \"\"\"\n",
    "    plot the data in the columns_to_plot list in a box plot, KDE plot, and histogram\n",
    "    \"\"\"\n",
    "    num_columns = len(columns_to_plot)\n",
    "    num_rows = num_columns\n",
    "    num_cols = 3  # One column for horizontal box plot, one for KDE, and one for histogram\n",
    "\n",
    "    # Set the size of the figure\n",
    "    fig, axes = plt.subplots(num_rows, num_cols, figsize=(15, 5 * num_rows))\n",
    "\n",
    "    for i, col in enumerate(columns_to_plot):\n",
    "        # Horizontal box plot\n",
    "        boxplot = sns.boxplot(data=df, x=col, ax=axes[i, 0], orient=\"h\")\n",
    "        axes[i, 0].set_title(f'Horizontal Box Plot of {col}')\n",
    "        \n",
    "        # KDE plot\n",
    "        sns.kdeplot(data=df[col], ax=axes[i, 1])\n",
    "        axes[i, 1].set_title(f'KDE Plot of {col}')\n",
    "        \n",
    "        # Histogram\n",
    "        sns.histplot(data=df, x=col, ax=axes[i, 2], element=\"step\", common_norm=False)\n",
    "        axes[i, 2].set_title(f'Histogram of {col}')\n",
    "        \n",
    "        # Adjust the y-axis limit for the box plot (customize this based on your data)\n",
    "        # For example, to set a specific range, you can use boxplot.set(ylim=(min_value, max_value))\n",
    "        # Replace min_value and max_value with your desired range.\n",
    "        # boxplot.set(ylim=(min_value, max_value))\n",
    "\n",
    "    # Remove any extra empty subplots\n",
    "    for i in range(num_columns, num_rows):\n",
    "        for j in range(num_cols):\n",
    "            fig.delaxes(axes[i, j])\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def plot_data(df, columns_to_plot):\n",
    "    num_columns = len(columns_to_plot)\n",
    "    num_rows = num_columns\n",
    "    num_cols = 3  # One column for horizontal box plot, one for KDE, and one for histogram\n",
    "\n",
    "    # Set the size of the figure and style\n",
    "    plt.figure(figsize=(30, 5 * num_rows))\n",
    "    sns.set(style=\"whitegrid\")\n",
    "    \n",
    "    for i, col in enumerate(columns_to_plot):\n",
    "        # Create a subplot grid\n",
    "        ax1 = plt.subplot(num_rows, num_cols, i * num_cols + 1)\n",
    "        ax2 = plt.subplot(num_rows, num_cols, i * num_cols + 2)\n",
    "        ax3 = plt.subplot(num_rows, num_cols, i * num_cols + 3)\n",
    "        \n",
    "        # Horizontal box plot\n",
    "        sns.boxplot(data=df, x=col, ax=ax1, color='lightblue')\n",
    "        ax1.set_title(f'Horizontal Box Plot of {col}')\n",
    "        \n",
    "        # KDE plot\n",
    "        sns.kdeplot(data=df[col], ax=ax2, color='lightgreen', shade=True)\n",
    "        ax2.set_title(f'KDE Plot of {col}')\n",
    "        \n",
    "        # Histogram\n",
    "        sns.histplot(data=df, x=col, ax=ax3, element=\"step\", common_norm=False, color='lightcoral')\n",
    "        ax3.set_title(f'Histogram of {col}')\n",
    "    \n",
    "    # Remove any extra empty subplots\n",
    "    for i in range(num_columns, num_rows):\n",
    "        for j in range(num_cols):\n",
    "            plt.delaxes(plt.gcf().get_axes()[i * num_cols + j])\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "id": "C3ldPJM6iUIj"
   },
   "outputs": [],
   "source": [
    "def plot_boxplot_with_outliers(df: pd.DataFrame, column_name: str, lower_multiplier=1.5, upper_multiplier=3) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Plot a boxplot for a specific column in a DataFrame, highlights and returns outliers.\n",
    "    \"\"\"\n",
    "    # Calculate quartiles and IQR\n",
    "    Q1 = df[column_name].quantile(0.25)\n",
    "    Q3 = df[column_name].quantile(0.75)\n",
    "    IQR = Q3 - Q1\n",
    "    lower_bound = Q1 - lower_multiplier * IQR\n",
    "    upper_bound = Q3 + upper_multiplier * IQR\n",
    "\n",
    "    # Filter outliers\n",
    "    outliers = df[(df[column_name] < lower_bound) |\n",
    "                  (df[column_name] > upper_bound)]\n",
    "\n",
    "    # Create a boxplot with outliers displayed\n",
    "    plt.figure(figsize=(18, 10))\n",
    "    plt.boxplot(df[column_name], vert=False,\n",
    "                showfliers=True, labels=[column_name])\n",
    "\n",
    "    if not outliers.empty:\n",
    "        plt.scatter(outliers[column_name], [1] * len(outliers),\n",
    "                    color='red', marker='x', label='Outliers')\n",
    "\n",
    "    title = f'Boxplot for {column_name} with Outliers Highlighted - IQR'.replace(\n",
    "        '_', ' ').title()\n",
    "\n",
    "    plt.xlabel(column_name)\n",
    "    plt.title(title)\n",
    "    plt.legend()\n",
    "    save_figure(title)\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_kdeplots(df: pd.DataFrame, columns: List[str]):\n",
    "    \"\"\"\n",
    "    Plot a distplot for each specified column and print skewness in a DataFrame.\n",
    "    \"\"\"\n",
    "    # Calculate the number of subplots based on the number of columns\n",
    "    num_columns = len(columns)\n",
    "    num_rows = 1  # Set the number of rows (you can adjust this as needed)\n",
    "\n",
    "    # Create a figure with subplots\n",
    "    title = f'Distribution of {\", \".join(columns)}'.replace('_', ' ').title()\n",
    "\n",
    "    fig, axes = plt.subplots(num_rows, num_columns,\n",
    "                             figsize=(num_columns * 10, 8))\n",
    "    # Ensure columns is a list\n",
    "    if not isinstance(columns, list):\n",
    "        columns = [columns]\n",
    "\n",
    "    # filter columns if they only exist in dataframe\n",
    "    columns = [column for column in columns if column in df.columns]\n",
    "\n",
    "    # Plot distplots for each specified column\n",
    "    for i, column in enumerate(columns):\n",
    "        # Use the current axis or the only axis\n",
    "        ax = axes[i] if num_columns > 1 else axes\n",
    "        sns.kdeplot(df[column], fill=True, ax=ax)\n",
    "        print(f'Column: {column} - Skewness: {df[column].skew()}')\n",
    "        ax.set_title(f'Distribution of {column}'.replace('_', ' ').title())\n",
    "\n",
    "    plt.suptitle(title)\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "\n",
    "    # Show the plots\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_categorical_scatter(df:pd.DataFrame, x_col:str, y_col:str):\n",
    "    \"\"\"\n",
    "    Create a multi-line plot between x_col and y_col.\n",
    "    \"\"\"\n",
    "    # Create the multi-line plot\n",
    "    plt.figure(figsize=(12, 6))\n",
    "    sns.stripplot(x=x_col, y=y_col, data=df, jitter=True, dodge=True)\n",
    "\n",
    "    # Set labels and title\n",
    "    plt.xlabel(x_col.capitalize())\n",
    "    plt.ylabel(y_col.capitalize())\n",
    "    plt.title(\n",
    "        f'Multi-Line Plot of {y_col.capitalize()} by {x_col.capitalize()}')\n",
    "\n",
    "    # Rotate x-axis labels for readability\n",
    "    plt.xticks(rotation=45, ha='right')\n",
    "\n",
    "    # Show the plot\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_columns_relationship(df: pd.DataFrame, target_column_name: str, column_names: List[Tuple[str, str]]):\n",
    "    \"\"\"\n",
    "    Plot the relationship between two columns.\n",
    "    \"\"\"\n",
    "    num_columns = len(column_names)\n",
    "\n",
    "    # Create a figure with subplots\n",
    "    fig, axes = plt.subplots(1, num_columns, figsize=(20, 8))\n",
    "\n",
    "    for i, (col_name, method) in enumerate(column_names):\n",
    "        if method == 'mean':\n",
    "            sns.barplot(x=col_name, y=target_column_name, data=df, ax=axes[i])\n",
    "            axes[i].set_title(\n",
    "                f'Mean of {target_column_name} by {col_name}'.replace('_', ' ').title())\n",
    "        elif method == 'count':\n",
    "            count_df = df.groupby([col_name, target_column_name]).size().reset_index(\n",
    "                name=\"count\").sort_values(by=['count'], ascending=False)\n",
    "            cmap = plt.get_cmap(\"coolwarm\")\n",
    "            normalize = plt.Normalize(\n",
    "                vmin=min(count_df['count']), vmax=max(count_df['count']))\n",
    "            scatter = axes[i].scatter(\n",
    "                count_df[col_name], count_df[target_column_name], c=count_df['count'], cmap=cmap, norm=normalize)\n",
    "            axes[i].set_title(\n",
    "                f'{col_name} & {target_column_name}'.replace('_', ' ').title())\n",
    "            fig.colorbar(scatter, ax=axes[i], orientation='vertical')\n",
    "\n",
    "            # Rotate x-axis labels for readability\n",
    "            x_labels = count_df[col_name].unique()\n",
    "            x_ticks = range(len(x_labels))\n",
    "            axes[i].set_xticks(x_ticks)\n",
    "            axes[i].set_xticklabels(x_labels, rotation=45, ha=\"right\")\n",
    "\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_value_counts(df: pd.DataFrame, col_name: str):\n",
    "    \"\"\"\n",
    "    Plot the value counts of a specified column in a DataFrame.\n",
    "    \"\"\"\n",
    "    if (df[col_name].dtype != \"object\") and (df[col_name].dtype != \"category\"):\n",
    "        print(f\"{col_name} must be categorical.\")\n",
    "        return\n",
    "\n",
    "    title = f\"Value Counts of {col_name}\".replace('_', ' ').title()\n",
    "    plt.figure(figsize=(12, 9))\n",
    "    counts = df[col_name].value_counts()\n",
    "\n",
    "    sns.barplot(x=counts.index, y=counts.values, palette=\"viridis\")\n",
    "    plt.title(title)\n",
    "    plt.xlabel(col_name)\n",
    "    plt.ylabel(\"Count\")\n",
    "    plt.xticks(rotation=45)\n",
    "    # Add counts on top of the bars\n",
    "    for i, count in enumerate(counts.values):\n",
    "        plt.text(i, count, str(count), ha='center', va='bottom',\n",
    "                 fontsize=10, color='black', rotation=0)\n",
    "\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "    plt.show()\n",
    "\n",
    "    return counts\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_stacked_bar(preference_df: pd.DataFrame, x: str, y: str, rotation=45,title=None):\n",
    "    \"\"\"\n",
    "    Plot a stacked bar chart to visualize preferences by a specific category.\n",
    "    \"\"\"\n",
    "    if (df[x].dtype != \"object\" and df[x].dtype != \"category\"):\n",
    "        print(f\"{x} must be categorical.\")\n",
    "        return\n",
    "\n",
    "    plt.figure(figsize=(12, 9))\n",
    "    if title is None:\n",
    "        title = f'Preference by {x} with {y}'\n",
    "    if title in SAVED_FIGURES:\n",
    "        load_and_display_figure(SAVED_FIGURES[title])\n",
    "        return\n",
    "\n",
    "    pivot_df = preference_df.pivot(index=x, columns=y, values='Count')\n",
    "    ax = pivot_df.plot(kind='bar', stacked=True, figsize=(10, 6))\n",
    "    ax.set_ylabel('Count')\n",
    "    ax.set_title(title)\n",
    "    # Rotate x-axis labels for better readability\n",
    "    plt.xticks(rotation=rotation)\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_multivariate_analysis(df: pd.DataFrame, selected_columns: List[str],title:str):\n",
    "    \"\"\"\n",
    "        Perform multivariate analysis and print rows where maximum values occur for selected columns. (heavy computation)\n",
    "    \"\"\"\n",
    "    title = title.replace('_', ' ').title()\n",
    "    # Print rows where maximum values occur for selected columns\n",
    "    for col in selected_columns:\n",
    "        print(f\" {col} skew : {df[col].skew()}\")\n",
    "    # Create a pairplot for selected columns\n",
    "    sns.pairplot(df[selected_columns], diag_kind='kde')\n",
    "    plt.suptitle(title)\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_correlation_Heatmap(df: pd.DataFrame, title: str):\n",
    "    \"\"\"\n",
    "    Draw a correlation heatmap for a DataFrame.\n",
    "    \"\"\"\n",
    "    title = f'Correlation Heatmap - {title}'\n",
    "    plt.figure(figsize=(15, 10))\n",
    "    if title in SAVED_FIGURES:\n",
    "        load_and_display_figure(SAVED_FIGURES[title])\n",
    "        return\n",
    "    correlation = df.corr()\n",
    "    display(correlation)\n",
    "    sns.heatmap(correlation, cmap='coolwarm', annot=True, fmt='.2f')\n",
    "    plt.title(title)\n",
    "    save_figure(title)\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_numeric_attributes(df: pd.DataFrame, title: str):\n",
    "    \"\"\"\n",
    "    Plot density plots for numeric attributes in a DataFrame.\n",
    "    \"\"\"\n",
    "    # Select only the numeric columns\n",
    "    numeric_df = df.select_dtypes(include='number')\n",
    "    display(numeric_df.describe())\n",
    "    # Define the number of rows and columns for subplots\n",
    "    num_cols = len(numeric_df.columns)\n",
    "    num_rows = (num_cols + 1) // 2  # Round up to the nearest integer\n",
    "    if title in SAVED_FIGURES:\n",
    "        plt.figure(figsize=(12, 6 * num_rows))\n",
    "        load_and_display_figure(SAVED_FIGURES[title])\n",
    "        return\n",
    "\n",
    "    # Create a figure and subplots\n",
    "    fig, axes = plt.subplots(num_rows, 2, figsize=(12, 6 * num_rows))\n",
    "    fig.subplots_adjust(hspace=0.5)\n",
    "\n",
    "    for i, col in enumerate(numeric_df.columns):\n",
    "        # Calculate the current row and column index\n",
    "        row, col_idx = divmod(i, 2)\n",
    "        ax = axes[row, col_idx]\n",
    "\n",
    "        # Attempt to create a density plot for the current numeric column\n",
    "        try:\n",
    "            sns.kdeplot(numeric_df[col], ax=ax, fill=True, warn_singular=False)\n",
    "            ax.set_xlabel(col)\n",
    "            ax.set_ylabel('Density')\n",
    "            ax.set_title(f'Density Plot of {col}')\n",
    "        except Exception as e:\n",
    "            print(f'Could not create density plot for {col}: {str(e)}')\n",
    "            fig.delaxes(ax)  # Remove the subplot if it can't be plotted\n",
    "\n",
    "    # Remove any empty subplots\n",
    "    for i in range(num_cols, num_rows * 2):\n",
    "        fig.delaxes(axes[divmod(i, 2)])\n",
    "\n",
    "    # Save the figure\n",
    "    plt.tight_layout()\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def plot_mean_median_count_by_period(df: pd.DataFrame, column_name: str, period_series: pd.Series, time_column: str, label: str, figsize=(9, 5)):\n",
    "    \"\"\"\n",
    "    Plot the mean, median, and count values of a numeric column by hour and print a tabulated summary.\n",
    "    \"\"\"\n",
    "    fig, (ax1, ax2) = plt.subplots(\n",
    "        1, 2, figsize=figsize)  # Create two subplots\n",
    "\n",
    "    # Check if the time_column is of datetime data type\n",
    "    if not pd.api.types.is_datetime64_any_dtype(df[time_column]) :\n",
    "        print(f'Convert first the {time_column} to datetime')\n",
    "        return\n",
    "\n",
    "    # Prepare a pivot table to aggregate the specified column by hour\n",
    "    table = df.pivot_table(index=period_series, values=column_name, aggfunc=(\n",
    "        'mean', 'median', 'count')).reset_index()\n",
    "\n",
    "    # Rename columns for clarity\n",
    "    table.columns = [label,  f'Count_{column_name}',\n",
    "                     f'Mean_{column_name}', f'Median_{column_name}']\n",
    "\n",
    "    # Plot the mean, median, and count values\n",
    "    table[[f'Mean_{column_name}', f'Median_{column_name}']].plot(ax=ax1)\n",
    "    ax1.set_ylabel(f'{column_name} (units)')\n",
    "    ax1.set_xlabel(label)\n",
    "    title = f'Distribution of {column_name} per {label}'.replace('_', ' ').title()\n",
    "    ax1.set_title(title)\n",
    "\n",
    "    # Plot count values in a separate plot\n",
    "    table[[f'Count_{column_name}']].plot(ax=ax2)\n",
    "    ax2.set_ylabel(f'Count of {column_name}')\n",
    "    ax2.set_xlabel(label)\n",
    "    ax2.set_title(f'Count of {column_name} per {label}'.replace('_', ' ').title())\n",
    "\n",
    "    # Print tabulated summary\n",
    "    print(f'-----{title} -----\\n')\n",
    "\n",
    "    # Maximum mean value at which period\n",
    "    max_mean = table[f\"Mean_{column_name}\"].max()\n",
    "    max_period_mean = table[table[f\"Mean_{column_name}\"]\n",
    "                            == max_mean].iloc[0][label]\n",
    "    print(f'Maximum mean value ({max_mean}) at {label}: {max_period_mean}\\n')\n",
    "\n",
    "    # Maximum median value at which period\n",
    "    max_median = table[f\"Median_{column_name}\"].max()\n",
    "    max_period_median = table[table[f\"Median_{column_name}\"]\n",
    "                              == max_median].iloc[0][label]\n",
    "    print(\n",
    "        f'Maximum median value ({max_median}) at {label}: {max_period_median}\\n')\n",
    "\n",
    "    # Maximum count value at which period\n",
    "    max_count = table[f\"Count_{column_name}\"].max()\n",
    "    max_period_count = table[table[f\"Count_{column_name}\"]\n",
    "                             == max_count].iloc[0][label]\n",
    "    print(\n",
    "        f'Maximum count value ({max_count}) at {label}: {max_period_count}\\n')\n",
    "\n",
    "    # extra validation of the above function values\n",
    "    display(df.groupby(period_series)[column_name].describe())\n",
    "\n",
    "    save_figure(title)\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Checks of validity and Drop Functions <a id=\"checks\"></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "def drop_column(df: pd.DataFrame, column_name: str):\n",
    "    \"\"\"\n",
    "    Drops a column from a Pandas DataFrame.\n",
    "    \"\"\"\n",
    "    df.drop(column_name, axis=1, inplace=True)\n",
    "    if (column_name in FIXED_COLUMNS_NAMES):\n",
    "        FIXED_COLUMNS_NAMES.remove(column_name)\n",
    "    if (column_name in ORIGINAL_COLUMNS_NAMES):\n",
    "        ORIGINAL_COLUMNS_NAMES.remove(column_name)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "def check_column_data_types(df: pd.DataFrame, expected_data_types=EXPECTED_DATA_TYPES):\n",
    "    \"\"\"\n",
    "    Check if columns in a DataFrame have the correct data types.\n",
    "    \"\"\"\n",
    "    for column_name in df.columns:\n",
    "        actual_type = df[column_name].dtype\n",
    "        expected_type = expected_data_types.get(column_name)\n",
    "        if expected_type is None:\n",
    "            print(\n",
    "                f'No expected data type specified for column \"{column_name}\"')\n",
    "        elif actual_type == expected_type:\n",
    "            print(\n",
    "                f'Column \"{column_name}\" has the correct type: {actual_type}')\n",
    "        else:\n",
    "            print(\n",
    "                f'Column \"{column_name}\" has an incorrect type: {actual_type}, expected type: {expected_type}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def remove_unwanted_values(df, feature, unwanted_value):\n",
    "    \"\"\"\n",
    "    Removes rows with unwanted values from the given feature column.\n",
    "    \"\"\"\n",
    "    return df[df[feature] != unwanted_value]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Imputation and Outlier Handling functions <a id='imputation'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "def impute_missing_values_linear_regression(df: pd.DataFrame, target_columns: List[str], predictors=None):\n",
    "    \"\"\"\n",
    "    Impute missing values in the specified target columns using linear regression.\n",
    "    predictors can be same as target columns or different\n",
    "    \"\"\"\n",
    "    if predictors == None:\n",
    "        predictors = target_columns\n",
    "    # Step 0: Split the dataset into two parts: data with missing values and data without missing values\n",
    "    data_without_missing = df.dropna(subset=target_columns)\n",
    "    for target_column in target_columns:\n",
    "\n",
    "        # Step 1: Data Preparation\n",
    "\n",
    "        new_predictors = [col for col in predictors if col != target_column]\n",
    "        data_with_missing = df[df[target_column].isnull()]\n",
    "\n",
    "        data_with_missing = data_with_missing.dropna(subset=new_predictors)\n",
    "\n",
    "        # Step 2: Linear Regression Model\n",
    "        model = LinearRegression()\n",
    "\n",
    "        # Check if there are data points for imputation after filtering\n",
    "        if data_with_missing.shape[0] == 0:\n",
    "            print(\n",
    "                f\"No data points to impute for {target_column} after filtering\")\n",
    "            continue\n",
    "\n",
    "        model.fit(data_without_missing[new_predictors],\n",
    "                  data_without_missing[target_column])\n",
    "\n",
    "        # Step 3: Imputation\n",
    "        imputed_values = model.predict(data_with_missing[new_predictors])\n",
    "        data_with_missing[target_column] = imputed_values\n",
    "        print(\n",
    "            f\"number of imputed values for {target_column} is {len(imputed_values)}\")\n",
    "\n",
    "        # Step 4: Update the Original Dataset\n",
    "        df.update(data_with_missing)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "def detect_and_fix_outliers_by_group(df: pd.DataFrame, outlier_column: str, group_columns: List[str], skew_threshold=1) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Detect and fix outliers in a DataFrame by grouping the data and getting its mean.\n",
    "    \"\"\"\n",
    "    # Step 1: Detect outliers in trip distance using a boxplot\n",
    "    Q1 = df[outlier_column].quantile(0.25)\n",
    "    Q3 = df[outlier_column].quantile(0.75)\n",
    "    IQR = Q3 - Q1\n",
    "        \n",
    "        \n",
    "    lower_bound = Q1 - 1.5 * IQR\n",
    "    upper_bound = Q3 + 1.5 * IQR\n",
    "\n",
    "    # Identify and flag outliers\n",
    "    is_outlier = (df[outlier_column] < lower_bound) | (\n",
    "        df[outlier_column] > upper_bound)\n",
    "\n",
    "    skewness = df[outlier_column].skew()\n",
    "\n",
    "    # Calculate the median of the target feature for each category in the categorical feature\n",
    "\n",
    "    if skewness >= skew_threshold:\n",
    "        medians = df.groupby(group_columns)[outlier_column].transform('median')\n",
    "        # Impute using the median if the column is highly skewed (right-skewed)\n",
    "        df[outlier_column].fillna(medians, inplace=True)\n",
    "    else:\n",
    "        # Impute using the mean if the column is not highly skewed\n",
    "        mean = df[outlier_column].mean()\n",
    "        df[outlier_column].fillna(mean, inplace=True)\n",
    "\n",
    "    # Step 2: Fix distance outliers by replacing them with the mean distance for the same hour of the day\n",
    "    mean_group = df.groupby(group_columns)[\n",
    "        outlier_column].transform('mean').round(1)\n",
    "\n",
    "    mean = df[outlier_column].mean()\n",
    "    mean_group.fillna(mean)\n",
    "\n",
    "    df[outlier_column] = df[outlier_column].where(~is_outlier, mean_group)\n",
    "\n",
    "    return df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quantile based flooring and capping\n",
    "def floor_cap_quantile(df: pd.DataFrame, col_name: str, floor_percentile: float, cap_percentile: float) -> tuple:\n",
    "    \"\"\"\n",
    "    Calculate specified percentiles of a specified column in a DataFrame.\n",
    "    \"\"\"\n",
    "    floor = df[col_name].quantile(floor_percentile)\n",
    "    cap = df[col_name].quantile(cap_percentile)\n",
    "    print(f\"Floor: {floor} , Cap: {cap}\")\n",
    "    return floor, cap\n",
    "\n",
    "\n",
    "def replace_outliers(df: pd.DataFrame, col_name: str, floor: float, cap: float):\n",
    "    \"\"\"\n",
    "    Replace outliers in a specific column by capping values below the floor and above the cap.\n",
    "    \"\"\"\n",
    "    df[col_name] = np.where(df[col_name] < floor, floor, df[col_name])\n",
    "    df[col_name] = np.where(df[col_name] > cap, cap, df[col_name])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "# impute na with constant value\n",
    "def impute_na_with_constant(df: pd.DataFrame, column_name: str, value: Any):\n",
    "    \"\"\"\n",
    "    Impute null values in a column with a constant value.\n",
    "    \"\"\"\n",
    "    df[column_name].fillna(value, inplace=True)\n",
    "    insert_to_lookup_table(column_name, None, value, None,\n",
    "                           f'Imputed null values in column \"{column_name}\" with constant value: {value}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "def impute_multi(df, col_name_impute, col_categorical, method: str, missing_pattern=\"^unknown$|^missing$|^na$|^uknown\"):\n",
    "    \"\"\"   \n",
    "    Impute missing or unknown values in a DataFrame based on the mode, mean, or median of a column\n",
    "    grouped by a categorical column.\n",
    "    \"\"\"\n",
    "    if (df[col_name_impute].dtype == \"object\" or df[col_name_impute].dtype.name == \"category\") and method != \"mode\":\n",
    "        print(f\"{col_name_impute} is categorical so method must be mode.\")\n",
    "        return\n",
    "\n",
    "    # Validate the imputation method\n",
    "    if method not in [\"mode\", \"mean\", \"median\", \"-1\"]:\n",
    "        raise ValueError(\n",
    "            \"Invalid imputation method. Use 'mode', 'mean', 'median' or '-1.\")\n",
    "\n",
    "    # Get the mode of the targeted feature in each value of the categorical feature\n",
    "    if method == \"mode\":\n",
    "        values = df.groupby(col_categorical)[col_name_impute].apply(\n",
    "            lambda x: x.mode().iloc[0] if not x.mode().empty else None)\n",
    "\n",
    "    elif method == \"mean\":\n",
    "        values = df.groupby(col_categorical)[\n",
    "            col_name_impute].apply(lambda x: x.mean())\n",
    "\n",
    "    elif method == \"median\":\n",
    "        values = df.groupby(col_categorical)[\n",
    "            col_name_impute].apply(lambda x: x.median())\n",
    "    elif method == \"-1\":\n",
    "        values = df.groupby(col_categorical)[\n",
    "            col_name_impute].apply(lambda x: -1)\n",
    "\n",
    "    # Store as key-value pairs (dictionary)\n",
    "    values_dict = values.to_dict()\n",
    "\n",
    "    # Replace missing values based on the value of col_categorical and the missing pattern\n",
    "\n",
    "    def replace_missing(row):\n",
    "        if pd.isna(row[col_name_impute]) or re.match(missing_pattern, str(row[col_name_impute])):\n",
    "            original_value = row[col_name_impute]\n",
    "            imputed_value = values_dict.get(\n",
    "                row[col_categorical], row[col_name_impute])\n",
    "            # here we insert the imputed value to the lookup table\n",
    "            insert_to_lookup_table(col_name_impute,  original_value,  imputed_value, None,\n",
    "                                   f\"Imputed {col_name_impute} from {original_value} to {imputed_value}\")\n",
    "            return imputed_value\n",
    "        return row[col_name_impute]\n",
    "\n",
    "    df[col_name_impute] = df.apply(replace_missing, axis=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "def impute_outliers_with_mean(df: pd.DataFrame, col_name: str, total_column=None, threshold=0.0):\n",
    "    \"\"\"\n",
    "    Impute outliers in a feature using the mean of values below a given threshold.\n",
    "    \"\"\"\n",
    "\n",
    "    # Handle the case when the total_column is not provided\n",
    "    if total_column and total_column not in df.columns:\n",
    "        raise ValueError(\n",
    "            f\"'{total_column}' not found in the DataFrame columns.\")\n",
    "\n",
    "    # Calculate the mean excluding outliers, negative and zero values\n",
    "    valid_data = df[(df[col_name] < threshold) & (df[col_name] > 0)][col_name]\n",
    "    if valid_data.empty:\n",
    "        # Handle the case when there are no valid data points\n",
    "        raise ValueError(\"No valid data points found for imputation.\")\n",
    "\n",
    "    mean_val = valid_data.mean()\n",
    "\n",
    "    # Create a mask for rows that are outliers\n",
    "    outliers_mask = df[(df[col_name] > threshold) | (df[col_name] < 0)]\n",
    "\n",
    "    if total_column:\n",
    "        # Handle the case when the total column contains missing values\n",
    "        if df[total_column].isnull().any():\n",
    "            raise ValueError(\n",
    "                f\"'{total_column}' contains missing values. Imputation cannot be performed.\")\n",
    "\n",
    "        # Adjust the total column based on the difference between the outlier and mean value\n",
    "        df.loc[outliers_mask, total_column] = df.loc[outliers_mask,\n",
    "                                                     total_column] - df.loc[outliers_mask, col_name] + mean_val\n",
    "\n",
    "    # Impute the outliers with the mean value\n",
    "    # df.loc[outliers_mask, col_name] = mean_val\n",
    "    # Impute the outliers with the mean value\n",
    "    for index, row in outliers_mask.iterrows():\n",
    "        original_value = row[col_name]\n",
    "        imputed_value = mean_val\n",
    "        insert_to_lookup_table(col_name, original_value, imputed_value, None,\n",
    "                               f\"Imputed {col_name} from {original_value} to {imputed_value}\")\n",
    "        df.at[index, col_name] = imputed_value\n",
    "\n",
    "    return df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "def contains_missing_values(df: pd.DataFrame, column_name: str, missing_pattern=r\"(?i)^unknown$|^missing$|^unknown,nv$|Unknown,Unknown|unknown|Unknownr|^unknown$|^missing$|^na$|^uknown$|^Unknown,Unknown$|^Uknown$|^unknown,unknown$|^Unknown,unknown$|^unknown,Unknown$|unknown,NV\") -> bool:\n",
    "    \"\"\"\n",
    "    Check if a column contains missing values indicated by a regular expression pattern.\n",
    "    it also replace the missing values or pattern that indicates missing with \"unknown\" and return the new dataframe\n",
    "    if it contains missing values return True else return False\n",
    "    \"\"\"\n",
    "\n",
    "    # Create a regular expression pattern object\n",
    "    pattern = re.compile(missing_pattern, flags=re.IGNORECASE)\n",
    "\n",
    "    # Check if any value in the column matches the pattern\n",
    "    flag = False\n",
    "    missing_values = None\n",
    "\n",
    "    if df[column_name].dtype == 'object':\n",
    "        missing_values = df[column_name].str.strip()\n",
    "        missing_values = df[column_name].str.contains(pattern)\n",
    "        if missing_values.any():\n",
    "            num_missing_values = missing_values.sum()  # Count the number of True values\n",
    "            print(\n",
    "                f'Column \"{column_name}\" contains {num_missing_values} missing values as a string which is {(num_missing_values/len(df))*100}%.')\n",
    "            flag = True\n",
    "            # Replace matched values with 'unknown' for object columns\n",
    "            df[column_name] = df[column_name].str.replace(pattern, 'unknown')\n",
    "\n",
    "        else:\n",
    "            print(\n",
    "                f'Column \"{column_name}\" does not contain missing values as a string.')\n",
    "\n",
    "    missing_values_nan = df[column_name].isna().sum()\n",
    "\n",
    "    if missing_values_nan > 0:\n",
    "        print(f'Column \"{column_name}\"  {missing_values_nan} contains missing values as NaN which is {((missing_values_nan)/len(df))*100}%.')\n",
    "        flag = True\n",
    "    else:\n",
    "        print(\n",
    "            f'Column \"{column_name}\" does not contain missing values as NaN.')\n",
    "\n",
    "    return flag, missing_values, missing_values_nan\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "def identify_columns_needing_imputation(df: pd.DataFrame, columns=None):\n",
    "    \"\"\"\n",
    "    Identify columns that contain missing values and display relevant information.\n",
    "    \"\"\"\n",
    "    columns_needing_imputation = []\n",
    "    if columns is None:\n",
    "        columns = df.columns\n",
    "\n",
    "    for column in columns:\n",
    "        flag, missing_values, missing_values_nan = contains_missing_values(\n",
    "            df, column)\n",
    "\n",
    "        if flag:\n",
    "            if missing_values is not None and missing_values.any():\n",
    "                total_missing_values = missing_values.sum()\n",
    "            else:\n",
    "                total_missing_values = 0\n",
    "\n",
    "            columns_needing_imputation.append({'column': column, 'missing_values_unknown': total_missing_values, 'missing_values_unknown_%': (\n",
    "                total_missing_values/len(df))*100, 'missing_values_nan': missing_values_nan, 'missing_values_nan_%': (missing_values_nan/len(df))*100})\n",
    "\n",
    "    if columns_needing_imputation:\n",
    "        result_df = pd.DataFrame(columns_needing_imputation).sort_values(\n",
    "            by=['missing_values_unknown', 'missing_values_nan'], ascending=False).reset_index(drop=True)\n",
    "        display(result_df)\n",
    "    else:\n",
    "        print(\"No columns need imputation.\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Discretization <a id=\"discretization\"> </a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_bins(df: pd.DataFrame, target_column: str, bin_column_name: str, labels: List[str]):\n",
    "    \"\"\"\n",
    "    Create bins for a numeric column and add a new column with the bin labels.\n",
    "    \"\"\"\n",
    "    # Calculate the minimum and maximum values of the target column\n",
    "    min_ = df[target_column].min()\n",
    "    max_ = df[target_column].max()\n",
    "    num_bins = len(labels)\n",
    "\n",
    "    # Calculate the width of each bin\n",
    "    width = (max_ - min_) / num_bins\n",
    "\n",
    "    # Create a list of bin boundaries\n",
    "    bins = [min_ + i * width for i in range(num_bins)] + [max_]\n",
    "\n",
    "    print(f'Bin boundaries: {bins}')\n",
    "    for i in range(num_bins):\n",
    "        bin_boundary = f'{bins[i]} - {bins[i + 1] if i < num_bins - 1 else max_}'\n",
    "        insert_to_lookup_table(bin_column_name, bin_boundary,\n",
    "                               labels[i], None, f\"Created bins for Bin {i}: {bin_boundary} with label: {labels[i]}\")\n",
    "    # Create a new column in the DataFrame with the specified bin name\n",
    "    df[bin_column_name] = pd.cut(\n",
    "        df[target_column], bins, labels=labels, include_lowest=True)\n",
    "    feature_engineer(\n",
    "        bin_column_name, f'bins for {target_column}', df[bin_column_name].dtype.name)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Encoding functions <a id='encode'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def label_encode_column(df: pd.DataFrame, column_name: str, prefix: str = ENCODED_PREFIX, map=None):\n",
    "    \"\"\"\n",
    "    Perform label encoding on a column in a DataFrame and update the lookup table with the mapping.\n",
    "    \"\"\"\n",
    "    global LOOKUP_TABLE\n",
    "    containsMissing = df[column_name].isnull().sum() > 0\n",
    "    if containsMissing:\n",
    "        print(f'You must impute first before encoding {column_name}')\n",
    "        \n",
    "        \n",
    "    if map is not None:\n",
    "        df[prefix + column_name] = df[column_name].map(map)\n",
    "        for original_value, mapping in map.items():\n",
    "            insert_to_lookup_table(column_name, original_value, None, mapping,\n",
    "                                   f\"Encoded {column_name} from {original_value} to {mapping} by Label Encoding\")\n",
    "        encoded_df = pd.DataFrame(LOOKUP_TABLE[column_name])\n",
    "        display(encoded_df[~encoded_df['encoded'].isna()])\n",
    "        return \n",
    "\n",
    "    label_encoder = LabelEncoder() if label_encoder is None else label_encoder\n",
    "\n",
    "    if LOOKUP_TABLE is not None and ((column_name) in LOOKUP_TABLE):\n",
    "        # If the column is already in the lookup table, retrieve the original and encoded values and initialize the label encoder\n",
    "        original_values = [item['original'] for item in LOOKUP_TABLE[(\n",
    "            column_name)] if 'encoded' in item and 'original' in item and item['encoded'] is not None and item['original'] is not None]\n",
    "        label_encoder.fit(original_values)\n",
    "        print(\n",
    "            f'{prefix + column_name} is not empty; taking care of new values, old values are preserved')\n",
    "\n",
    "    # Fit the label encoder on the column data\n",
    "    encoded_column = label_encoder.fit_transform(df[column_name])\n",
    "\n",
    "    # Create a mapping of labels to encoded values\n",
    "    label_mapping = dict(zip(df[column_name], encoded_column))\n",
    "\n",
    "    # Update the DataFrame with the encoded column\n",
    "    df[prefix + column_name] = encoded_column\n",
    "\n",
    "    # Update the lookup table with the label mapping\n",
    "    for original_value, mapping in label_mapping.items():\n",
    "        insert_to_lookup_table(column_name, original_value, None, mapping,\n",
    "                               f\"Encoded {column_name} from {original_value} to {mapping} by Label Encoding\")\n",
    "\n",
    "    encoded_df = pd.DataFrame(LOOKUP_TABLE[column_name])\n",
    "    display(encoded_df[~encoded_df['encoded'].isna()])\n",
    "\n",
    "\n",
    "def one_hot_encode_column(df: pd.DataFrame, column_name: str, prefix: str = ENCODED_PREFIX) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Perform one-hot encoding on a column in a DataFrame and return the mapping as a dictionary.\n",
    "    \"\"\"\n",
    "    containsMissing = df[column_name].isnull().sum() > 0\n",
    "    if containsMissing:\n",
    "        print(f'You must impute first before encoding {column_name}')\n",
    "\n",
    "    # Perform one-hot encoding using Pandas get_dummies\n",
    "    encoded_df = pd.get_dummies(df[column_name], prefix=prefix+column_name)\n",
    "\n",
    "    # Concatenate the one-hot encoded DataFrame with the original DataFrame\n",
    "    df = pd.concat([df, encoded_df], axis=1)\n",
    "    for encoded_column_name in encoded_df.columns:\n",
    "        insert_to_lookup_table(column_name, encoded_column_name, None, encoded_column_name,\n",
    "                               f\"One-Hot Encoded {column_name} from column {column_name} to {encoded_column_name} by One Hot Encoding\")\n",
    "    encoded_df = pd.DataFrame(LOOKUP_TABLE[column_name])\n",
    "\n",
    "    display(encoded_df[~encoded_df['encoded'].isna()])\n",
    "    return df\n",
    "\n",
    "\n",
    "def binarize_column(df: pd.DataFrame,column_name:str,map: Dict[str,int],prefix: str = ENCODED_PREFIX) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Binarize the column in a DataFrame and return the mapping as a dictionary.\n",
    "    \"\"\"\n",
    "    df[prefix + column_name] = df[column_name].map(map)\n",
    "    \n",
    "    for original_value, mapping in map.items():\n",
    "        insert_to_lookup_table(column_name, original_value, None, mapping,\n",
    "                               f\"Encoded {column_name} from {original_value} to {mapping} by Binarization into column {prefix + column_name}\")\n",
    "    encoded_df = pd.DataFrame(LOOKUP_TABLE[column_name])\n",
    "    display(encoded_df[~encoded_df['encoded'].isna()])\n",
    "    return df\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Decoding functions for lookup tables <a id='decode'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def label_decode_column(encoded_df: pd.DataFrame, column_name: str, lookup_table: List[dict] = LOOKUP_TABLE, prefix: str = ENCODED_PREFIX) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Perform label decoding on an encoded DataFrame and return the original values.\n",
    "    \"\"\"\n",
    "    if encoded_df.empty:\n",
    "        print(\"Input DataFrame is empty. Nothing to decode.\")\n",
    "        return encoded_df\n",
    "\n",
    "    if prefix + column_name not in lookup_table:\n",
    "        print(\n",
    "            f'{prefix + column_name} lookup table is empty. Encoding is required before decoding.')\n",
    "        return encoded_df\n",
    "\n",
    "    # Create a mapping of encoded values to original labels\n",
    "    label_mapping = {entry['encoded_value']: entry['original_value']\n",
    "                     for entry in lookup_table[prefix + column_name]}\n",
    "\n",
    "    # Reverse the encoding using the mapping\n",
    "    encoded_column_name = prefix + column_name\n",
    "    encoded_df[column_name] = encoded_df[encoded_column_name].map(\n",
    "        label_mapping)\n",
    "\n",
    "    return encoded_df\n",
    "\n",
    "\n",
    "def one_hot_decode_column(encoded_df: pd.DataFrame, column_name: str, prefix: str = ENCODED_PREFIX) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Perform one-hot decoding on an encoded DataFrame and return the original values.\n",
    "    \"\"\"\n",
    "    # Create a mapping of one-hot encoded columns to original values\n",
    "    label_mapping = {col: col.replace(prefix + column_name + '_', '')\n",
    "                     for col in encoded_df.columns if col.startswith(prefix + column_name)}\n",
    "\n",
    "    # Create a new DataFrame for the decoded values\n",
    "    decoded_df = pd.DataFrame()\n",
    "\n",
    "    # Decode the one-hot encoded values\n",
    "    decoded_df[column_name] = encoded_df.apply(\n",
    "        lambda row: label_mapping.get(row.idxmax(), None), axis=1)\n",
    "\n",
    "    # Add the one-hot encoded columns to the decoded DataFrame\n",
    "    for col in label_mapping:\n",
    "        decoded_df[col] = encoded_df[col]\n",
    "\n",
    "    return decoded_df\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1- Extraction,Dropping Identical Rows, and Formatting - **Checkpoint 1** <a id=\"extraction\"></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.1 loading the dataset <a id=\"load\"></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "id": "6g7Wca645iCl"
   },
   "outputs": [],
   "source": [
    "# loading the dataset\n",
    "df = pd.read_csv(os.path.join(DATASET_DIR, DATASET_NAME))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "78UN-Jr_6JuZ",
    "outputId": "2d7023d2-04e1-4cfb-fe87-965f2f4e6722"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Vendor</th>\n",
       "      <th>lpep pickup datetime</th>\n",
       "      <th>lpep dropoff datetime</th>\n",
       "      <th>store and fwd flag</th>\n",
       "      <th>Rate type</th>\n",
       "      <th>PU Location</th>\n",
       "      <th>DO Location</th>\n",
       "      <th>passenger count</th>\n",
       "      <th>trip distance</th>\n",
       "      <th>fare amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta tax</th>\n",
       "      <th>tip amount</th>\n",
       "      <th>tolls amount</th>\n",
       "      <th>ehail fee</th>\n",
       "      <th>improvement surcharge</th>\n",
       "      <th>total amount</th>\n",
       "      <th>payment type</th>\n",
       "      <th>trip type</th>\n",
       "      <th>congestion surcharge</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>2016-10-01 00:40:09</td>\n",
       "      <td>2016-10-01 01:13:05</td>\n",
       "      <td>N</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>Brooklyn,Boerum Hill</td>\n",
       "      <td>Queens,Rosedale</td>\n",
       "      <td>1.00</td>\n",
       "      <td>14.01</td>\n",
       "      <td>40.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.30</td>\n",
       "      <td>41.80</td>\n",
       "      <td>Cash</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>2016-10-01 00:57:37</td>\n",
       "      <td>2016-10-02 00:00:00</td>\n",
       "      <td>N</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>Brooklyn,East Williamsburg</td>\n",
       "      <td>Brooklyn,Bedford</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.87</td>\n",
       "      <td>8.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.30</td>\n",
       "      <td>9.80</td>\n",
       "      <td>Cash</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>2016-10-01 00:09:52</td>\n",
       "      <td>2016-10-01 00:17:27</td>\n",
       "      <td>N</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>Brooklyn,Williamsburg (South Side)</td>\n",
       "      <td>Brooklyn,Greenpoint</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1.29</td>\n",
       "      <td>7.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.30</td>\n",
       "      <td>9.96</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>2016-10-01 00:26:41</td>\n",
       "      <td>2016-10-01 00:53:09</td>\n",
       "      <td>N</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>Brooklyn,Williamsburg (North Side)</td>\n",
       "      <td>Manhattan,Meatpacking/West Village West</td>\n",
       "      <td>2.00</td>\n",
       "      <td>4.46</td>\n",
       "      <td>20.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.30</td>\n",
       "      <td>24.30</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>2016-10-01 00:57:48</td>\n",
       "      <td>2016-10-01 01:02:36</td>\n",
       "      <td>N</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>Brooklyn,Greenpoint</td>\n",
       "      <td>Brooklyn,Williamsburg (South Side)</td>\n",
       "      <td>5.00</td>\n",
       "      <td>1.04</td>\n",
       "      <td>5.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.30</td>\n",
       "      <td>6.80</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Vendor lpep pickup datetime lpep dropoff datetime  \\\n",
       "0  VeriFone Inc.  2016-10-01 00:40:09   2016-10-01 01:13:05   \n",
       "1  VeriFone Inc.  2016-10-01 00:57:37   2016-10-02 00:00:00   \n",
       "2  VeriFone Inc.  2016-10-01 00:09:52   2016-10-01 00:17:27   \n",
       "3  VeriFone Inc.  2016-10-01 00:26:41   2016-10-01 00:53:09   \n",
       "4  VeriFone Inc.  2016-10-01 00:57:48   2016-10-01 01:02:36   \n",
       "\n",
       "  store and fwd flag      Rate type                         PU Location  \\\n",
       "0                  N  Standard rate                Brooklyn,Boerum Hill   \n",
       "1                  N  Standard rate          Brooklyn,East Williamsburg   \n",
       "2                  N  Standard rate  Brooklyn,Williamsburg (South Side)   \n",
       "3                  N  Standard rate  Brooklyn,Williamsburg (North Side)   \n",
       "4                  N  Standard rate                 Brooklyn,Greenpoint   \n",
       "\n",
       "                               DO Location  passenger count  trip distance  \\\n",
       "0                          Queens,Rosedale             1.00          14.01   \n",
       "1                         Brooklyn,Bedford             1.00           1.87   \n",
       "2                      Brooklyn,Greenpoint             2.00           1.29   \n",
       "3  Manhattan,Meatpacking/West Village West             2.00           4.46   \n",
       "4       Brooklyn,Williamsburg (South Side)             5.00           1.04   \n",
       "\n",
       "   fare amount  extra  mta tax  tip amount  tolls amount  ehail fee  \\\n",
       "0        40.50   0.50     0.50        0.00          0.00        NaN   \n",
       "1         8.50   0.50     0.50        0.00          0.00        NaN   \n",
       "2         7.00   0.50     0.50        1.66          0.00        NaN   \n",
       "3        20.00   0.50     0.50        3.00          0.00        NaN   \n",
       "4         5.50   0.50     0.50        0.00          0.00        NaN   \n",
       "\n",
       "   improvement surcharge  total amount payment type    trip type  \\\n",
       "0                   0.30         41.80         Cash  Street-hail   \n",
       "1                   0.30          9.80         Cash  Street-hail   \n",
       "2                   0.30          9.96  Credit card  Street-hail   \n",
       "3                   0.30         24.30  Credit card  Street-hail   \n",
       "4                   0.30          6.80  Credit card  Street-hail   \n",
       "\n",
       "   congestion surcharge  \n",
       "0                   NaN  \n",
       "1                   NaN  \n",
       "2                   NaN  \n",
       "3                   NaN  \n",
       "4                   NaN  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.2 format the column names <a id='format_column_names'></a>\n",
    "\n",
    "- Before start we better reformat the column names\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "def format_column_names(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Format column names in a pandas DataFrame to follow best practices.\n",
    "    \"\"\"\n",
    "    def clean_column_name(column_name):\n",
    "        # Convert to lowercase\n",
    "        formatted_name = column_name.lower()\n",
    "        # Remove trailing spaces\n",
    "        formatted_name = formatted_name.strip()\n",
    "        # Replace spaces with underscores\n",
    "        formatted_name = formatted_name.replace(' ', '_')\n",
    "        # Remove special characters (replace with empty string)\n",
    "        formatted_name = ''.join(\n",
    "            e for e in formatted_name if e.isalnum() or e == '_')\n",
    "        return formatted_name\n",
    "\n",
    "    # Apply the clean_column_name function to each column name\n",
    "    df.columns = [clean_column_name(col) for col in df.columns]\n",
    "\n",
    "    return df\n",
    "\n",
    "\n",
    "df = format_column_names(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.3 Sort Column Names Monotonically <a id='sort_column_names'></a>\n",
    "\n",
    "- Before start I think it is better to order the columns based on number of missing values in ascending order\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_type</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>rate_type</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>extra</th>\n",
       "      <th>ehail_fee</th>\n",
       "      <th>congestion_surcharge</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>41.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>14.01</td>\n",
       "      <td>40.50</td>\n",
       "      <td>Queens,Rosedale</td>\n",
       "      <td>Brooklyn,Boerum Hill</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 01:13:05</td>\n",
       "      <td>2016-10-01 00:40:09</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>9.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>1.87</td>\n",
       "      <td>8.50</td>\n",
       "      <td>Brooklyn,Bedford</td>\n",
       "      <td>Brooklyn,East Williamsburg</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-02 00:00:00</td>\n",
       "      <td>2016-10-01 00:57:37</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>9.96</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>1.29</td>\n",
       "      <td>7.00</td>\n",
       "      <td>Brooklyn,Greenpoint</td>\n",
       "      <td>Brooklyn,Williamsburg (South Side)</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:17:27</td>\n",
       "      <td>2016-10-01 00:09:52</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>24.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>4.46</td>\n",
       "      <td>20.00</td>\n",
       "      <td>Manhattan,Meatpacking/West Village West</td>\n",
       "      <td>Brooklyn,Williamsburg (North Side)</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:53:09</td>\n",
       "      <td>2016-10-01 00:26:41</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>6.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>1.04</td>\n",
       "      <td>5.50</td>\n",
       "      <td>Brooklyn,Williamsburg (South Side)</td>\n",
       "      <td>Brooklyn,Greenpoint</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 01:02:36</td>\n",
       "      <td>2016-10-01 00:57:48</td>\n",
       "      <td>5.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          vendor  total_amount  improvement_surcharge  tolls_amount  \\\n",
       "0  VeriFone Inc.         41.80                   0.30          0.00   \n",
       "1  VeriFone Inc.          9.80                   0.30          0.00   \n",
       "2  VeriFone Inc.          9.96                   0.30          0.00   \n",
       "3  VeriFone Inc.         24.30                   0.30          0.00   \n",
       "4  VeriFone Inc.          6.80                   0.30          0.00   \n",
       "\n",
       "   tip_amount  mta_tax    trip_type  trip_distance  fare_amount  \\\n",
       "0        0.00     0.50  Street-hail          14.01        40.50   \n",
       "1        0.00     0.50  Street-hail           1.87         8.50   \n",
       "2        1.66     0.50  Street-hail           1.29         7.00   \n",
       "3        3.00     0.50  Street-hail           4.46        20.00   \n",
       "4        0.00     0.50  Street-hail           1.04         5.50   \n",
       "\n",
       "                               do_location  \\\n",
       "0                          Queens,Rosedale   \n",
       "1                         Brooklyn,Bedford   \n",
       "2                      Brooklyn,Greenpoint   \n",
       "3  Manhattan,Meatpacking/West Village West   \n",
       "4       Brooklyn,Williamsburg (South Side)   \n",
       "\n",
       "                          pu_location      rate_type store_and_fwd_flag  \\\n",
       "0                Brooklyn,Boerum Hill  Standard rate                  N   \n",
       "1          Brooklyn,East Williamsburg  Standard rate                  N   \n",
       "2  Brooklyn,Williamsburg (South Side)  Standard rate                  N   \n",
       "3  Brooklyn,Williamsburg (North Side)  Standard rate                  N   \n",
       "4                 Brooklyn,Greenpoint  Standard rate                  N   \n",
       "\n",
       "  lpep_dropoff_datetime lpep_pickup_datetime  passenger_count payment_type  \\\n",
       "0   2016-10-01 01:13:05  2016-10-01 00:40:09             1.00         Cash   \n",
       "1   2016-10-02 00:00:00  2016-10-01 00:57:37             1.00         Cash   \n",
       "2   2016-10-01 00:17:27  2016-10-01 00:09:52             2.00  Credit card   \n",
       "3   2016-10-01 00:53:09  2016-10-01 00:26:41             2.00  Credit card   \n",
       "4   2016-10-01 01:02:36  2016-10-01 00:57:48             5.00  Credit card   \n",
       "\n",
       "   extra  ehail_fee  congestion_surcharge  \n",
       "0   0.50        NaN                   NaN  \n",
       "1   0.50        NaN                   NaN  \n",
       "2   0.50        NaN                   NaN  \n",
       "3   0.50        NaN                   NaN  \n",
       "4   0.50        NaN                   NaN  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def sort_columns_by_missing_values(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "     Reorder the columns of the DataFrame based on the number of missing values in ascending order monotonically.\n",
    "     \"\"\"\n",
    "    # Calculate the number of missing values (NaNs) in each column\n",
    "    missing_values_count = df.isnull().sum()\n",
    "\n",
    "    # Sort the columns based on the count of missing values in ascending order\n",
    "    sorted_columns = missing_values_count.sort_values(ascending=True)\n",
    "\n",
    "    # Reorder the DataFrame based on the sorted columns\n",
    "    sorted_df = df[sorted_columns.index]\n",
    "    return sorted_df\n",
    "\n",
    "\n",
    "df = sort_columns_by_missing_values(df)\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1.4 identifying the columns with missing values _(to takecare of them later)_ <a id='missing_columns'></a>\n",
    "\n",
    "<p align=\"right\"><a href='#table-of-content'>Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"vendor\" does not contain missing values as a string.\n",
      "Column \"vendor\" does not contain missing values as NaN.\n",
      "Column \"total_amount\" does not contain missing values as NaN.\n",
      "Column \"improvement_surcharge\" does not contain missing values as NaN.\n",
      "Column \"tolls_amount\" does not contain missing values as NaN.\n",
      "Column \"tip_amount\" does not contain missing values as NaN.\n",
      "Column \"mta_tax\" does not contain missing values as NaN.\n",
      "Column \"trip_type\" contains 3 missing values as a string which is 0.0002395045130633745%.\n",
      "Column \"trip_type\" does not contain missing values as NaN.\n",
      "Column \"trip_distance\" does not contain missing values as NaN.\n",
      "Column \"fare_amount\" does not contain missing values as NaN.\n",
      "Column \"do_location\" contains 4457 missing values as a string which is 0.3558238715744867%.\n",
      "Column \"do_location\" does not contain missing values as NaN.\n",
      "Column \"pu_location\" contains 2140 missing values as a string which is 0.17084655265187382%.\n",
      "Column \"pu_location\" does not contain missing values as NaN.\n",
      "Column \"rate_type\" contains 3 missing values as a string which is 0.0002395045130633745%.\n",
      "Column \"rate_type\" does not contain missing values as NaN.\n",
      "Column \"store_and_fwd_flag\" does not contain missing values as a string.\n",
      "Column \"store_and_fwd_flag\" does not contain missing values as NaN.\n",
      "Column \"lpep_dropoff_datetime\" does not contain missing values as a string.\n",
      "Column \"lpep_dropoff_datetime\" does not contain missing values as NaN.\n",
      "Column \"lpep_pickup_datetime\" does not contain missing values as a string.\n",
      "Column \"lpep_pickup_datetime\" does not contain missing values as NaN.\n",
      "Column \"passenger_count\"  207 contains missing values as NaN which is 0.01652581140137284%.\n",
      "Column \"payment_type\" contains 40 missing values as a string which is 0.00319339350751166%.\n",
      "Column \"payment_type\"  43089 contains missing values as NaN which is 3.440003321129248%.\n",
      "Column \"extra\"  590670 contains missing values as NaN which is 47.156043577047804%.\n",
      "Column \"ehail_fee\"  1252586 contains missing values as NaN which is 100.0%.\n",
      "Column \"congestion_surcharge\"  1252586 contains missing values as NaN which is 100.0%.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column</th>\n",
       "      <th>missing_values_unknown</th>\n",
       "      <th>missing_values_unknown_%</th>\n",
       "      <th>missing_values_nan</th>\n",
       "      <th>missing_values_nan_%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>do_location</td>\n",
       "      <td>4457</td>\n",
       "      <td>0.36</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pu_location</td>\n",
       "      <td>2140</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>payment_type</td>\n",
       "      <td>40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>43089</td>\n",
       "      <td>3.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>trip_type</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>rate_type</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ehail_fee</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1252586</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>congestion_surcharge</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1252586</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>extra</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>590670</td>\n",
       "      <td>47.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>passenger_count</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>207</td>\n",
       "      <td>0.02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 column  missing_values_unknown  missing_values_unknown_%  \\\n",
       "0           do_location                    4457                      0.36   \n",
       "1           pu_location                    2140                      0.17   \n",
       "2          payment_type                      40                      0.00   \n",
       "3             trip_type                       3                      0.00   \n",
       "4             rate_type                       3                      0.00   \n",
       "5             ehail_fee                       0                      0.00   \n",
       "6  congestion_surcharge                       0                      0.00   \n",
       "7                 extra                       0                      0.00   \n",
       "8       passenger_count                       0                      0.00   \n",
       "\n",
       "   missing_values_nan  missing_values_nan_%  \n",
       "0                   0                  0.00  \n",
       "1                   0                  0.00  \n",
       "2               43089                  3.44  \n",
       "3                   0                  0.00  \n",
       "4                   0                  0.00  \n",
       "5             1252586                100.00  \n",
       "6             1252586                100.00  \n",
       "7              590670                 47.16  \n",
       "8                 207                  0.02  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "74X0VDLlYSvs"
   },
   "source": [
    "### 1.5 Exploratory Data Analysis through Description and Initial Understanding - EDA <a id=\"eda\"><a>\n",
    "\n",
    "  <p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n",
    "\n",
    "#### NYC Green Dataset understanding from dataset description , research and basic assumptions\n",
    "\n",
    "##### 1) Administrative data:\n",
    "\n",
    "- Vendor (object): provider of the record\n",
    "- Store and fwd flag(Categorical): This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka “store and forward,” because the vehicle did not have a connection to the server.\n",
    "\n",
    "##### 2) Trip Data:\n",
    "\n",
    "- lpep pickup datetime (datetime64): when meter was engaged\n",
    "- lpep dropoff datetime (datetime64): when meter was disengaged.\n",
    "- Passenger count(int64): # of passengers in the vehicle **BY DRIVER (POTENIAL SOURCE OF ERROR SINCE NOT AUTOMATIC)**\n",
    "- Trip distance (float64): trip distance in miles reported **by taximeter**.\n",
    "- PU Location (object): Location in which the taximeter was engaged.\n",
    "- DO Location (object): in which the taximeter was disengaged. Location shown as borough, zone.\n",
    "\n",
    "- RateCode(int64): final rate in effect at the end of the trip.\n",
    "\n",
    "##### 3)Payment data:\n",
    "\n",
    "- Payment type(Categorical): How the passenger paid for the trip.\n",
    "\n",
    "- Fare amount(float64): The time-and-distance fare calculated by the meter.\n",
    "\n",
    "- Extra (float64): Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges.\n",
    "\n",
    "- MTA tax (float64): $0.50 MTA tax that is automatically triggered based on the metered rate in use.\n",
    "- Improvement surcharge(float64): $0.30 improvement surcharge assessed on hailed trips at the flag drop. The improvement surcharge began being levied in 2015.\n",
    "\n",
    "- ehail fee (float64): An e-hail fee, also known as an electronic hail fee, is a charge that is added to the cost of a ride when using a ride-sharing or transportation network company (TNC) service like Uber or Lyft. This fee is typically a small additional cost that passengers pay when they request a ride through the TNC's mobile app or website.\n",
    "\n",
    "- Tip amount(float64): is automatically populated for credit card tips. Cash tips are not included.\n",
    "\n",
    "- Tolls amount(float64): Total amount of all tolls paid in the trip.\n",
    "\n",
    "- Total amount(float64): charged to passengers. Does not include cash tips.\n",
    "\n",
    "- Trip type(Categorical): Whether the trip was a street-hail or a dispatch that is automatically assigned based on the metered rate in use but can be altered by the driver. Street hail means the passenger stopped the cab on the street. Dispatch means the cab was ordered through phone/application.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "EXPECTED_DATA_TYPES = {\n",
    "    'vendor': 'object',\n",
    "    'pickup_datetime': 'datetime64[ns]',\n",
    "    'dropoff_datetime': 'datetime64[ns]',\n",
    "    'passenger_count': 'int64',\n",
    "    'trip_distance': 'float64',\n",
    "    'rate_type': 'object',\n",
    "    'store_and_fwd_flag': 'object',\n",
    "    'pu_location': 'object',\n",
    "    'do_location': 'object',\n",
    "    'payment_type': 'object',\n",
    "    'fare_amount': 'float64',\n",
    "    'extra': 'float64',\n",
    "    'mta_tax': 'float64',\n",
    "    'tip_amount': 'float64',\n",
    "    'tolls_amount': 'float64',\n",
    "    'improvement_surcharge': 'float64',\n",
    "    'total_amount': 'float64',\n",
    "    'congestion_surcharge': 'float64',\n",
    "}\n",
    "ORIGINAL_COLUMNS_NAMES = list(df.columns)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_type</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>rate_type</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>extra</th>\n",
       "      <th>ehail_fee</th>\n",
       "      <th>congestion_surcharge</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1216371</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>4.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>0.25</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Manhattan,East Harlem North</td>\n",
       "      <td>Manhattan,Central Harlem</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-30 23:04:12</td>\n",
       "      <td>2016-10-30 23:03:24</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                vendor  total_amount  improvement_surcharge  tolls_amount  \\\n",
       "1216371  VeriFone Inc.          4.30                   0.30          0.00   \n",
       "\n",
       "         tip_amount  mta_tax    trip_type  trip_distance  fare_amount  \\\n",
       "1216371        0.00     0.50  Street-hail           0.25         3.00   \n",
       "\n",
       "                         do_location               pu_location      rate_type  \\\n",
       "1216371  Manhattan,East Harlem North  Manhattan,Central Harlem  Standard rate   \n",
       "\n",
       "        store_and_fwd_flag lpep_dropoff_datetime lpep_pickup_datetime  \\\n",
       "1216371                  N   2016-10-30 23:04:12  2016-10-30 23:03:24   \n",
       "\n",
       "         passenger_count payment_type  extra  ehail_fee  congestion_surcharge  \n",
       "1216371             2.00         Cash   0.50        NaN                   NaN  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we cross checked the data schema with actual data for missing/changed attributes :\n",
    "  - only rate code was changed to rate_type as a column name "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Rows: 1252586\n",
      "Number of Columns: 20\n",
      "Column Names: Index(['vendor', 'total_amount', 'improvement_surcharge', 'tolls_amount',\n",
      "       'tip_amount', 'mta_tax', 'trip_type', 'trip_distance', 'fare_amount',\n",
      "       'do_location', 'pu_location', 'rate_type', 'store_and_fwd_flag',\n",
      "       'lpep_dropoff_datetime', 'lpep_pickup_datetime', 'passenger_count',\n",
      "       'payment_type', 'extra', 'ehail_fee', 'congestion_surcharge'],\n",
      "      dtype='object')\n",
      "Column Types: [('vendor', dtype('O')), ('total_amount', dtype('float64')), ('improvement_surcharge', dtype('float64')), ('tolls_amount', dtype('float64')), ('tip_amount', dtype('float64')), ('mta_tax', dtype('float64')), ('trip_type', dtype('O')), ('trip_distance', dtype('float64')), ('fare_amount', dtype('float64')), ('do_location', dtype('O')), ('pu_location', dtype('O')), ('rate_type', dtype('O')), ('store_and_fwd_flag', dtype('O')), ('lpep_dropoff_datetime', dtype('O')), ('lpep_pickup_datetime', dtype('O')), ('passenger_count', dtype('float64')), ('payment_type', dtype('O')), ('extra', dtype('float64')), ('ehail_fee', dtype('float64')), ('congestion_surcharge', dtype('float64'))]\n",
      "Percentage of All Null Entries 0.0%\n",
      "Percentage of Exist Null Entries 100.0%\n",
      "Percentage of Duplicate Entries 0.0007185135391901235%\n",
      "Unique Column Names: []\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Message</th>\n",
       "      <th>Number of Rows</th>\n",
       "      <th>Number of Columns</th>\n",
       "      <th>Count of Exist Null Entries</th>\n",
       "      <th>Count of All Null Entries</th>\n",
       "      <th>Percentage of All Null Entries</th>\n",
       "      <th>Percentage of Exist Null Entries</th>\n",
       "      <th>Step</th>\n",
       "      <th>vendor_Data Type</th>\n",
       "      <th>vendor_Total Null Entries</th>\n",
       "      <th>...</th>\n",
       "      <th>payment_type_Percentage of Null Entries</th>\n",
       "      <th>extra_Data Type</th>\n",
       "      <th>extra_Total Null Entries</th>\n",
       "      <th>extra_Percentage of Null Entries</th>\n",
       "      <th>ehail_fee_Data Type</th>\n",
       "      <th>ehail_fee_Total Null Entries</th>\n",
       "      <th>ehail_fee_Percentage of Null Entries</th>\n",
       "      <th>congestion_surcharge_Data Type</th>\n",
       "      <th>congestion_surcharge_Total Null Entries</th>\n",
       "      <th>congestion_surcharge_Percentage of Null Entries</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Initial Status</td>\n",
       "      <td>1252586</td>\n",
       "      <td>20</td>\n",
       "      <td>1252586</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>0</td>\n",
       "      <td>object</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.44</td>\n",
       "      <td>float64</td>\n",
       "      <td>590670</td>\n",
       "      <td>47.16</td>\n",
       "      <td>float64</td>\n",
       "      <td>1252586</td>\n",
       "      <td>100.00</td>\n",
       "      <td>float64</td>\n",
       "      <td>1252586</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 68 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Message  Number of Rows  Number of Columns  \\\n",
       "0  Initial Status         1252586                 20   \n",
       "\n",
       "   Count of Exist Null Entries  Count of All Null Entries  \\\n",
       "0                      1252586                       0.00   \n",
       "\n",
       "   Percentage of All Null Entries  Percentage of Exist Null Entries  Step  \\\n",
       "0                            0.00                            100.00     0   \n",
       "\n",
       "  vendor_Data Type  vendor_Total Null Entries  ...  \\\n",
       "0           object                          0  ...   \n",
       "\n",
       "   payment_type_Percentage of Null Entries extra_Data Type  \\\n",
       "0                                     3.44         float64   \n",
       "\n",
       "   extra_Total Null Entries  extra_Percentage of Null Entries  \\\n",
       "0                    590670                             47.16   \n",
       "\n",
       "  ehail_fee_Data Type  ehail_fee_Total Null Entries  \\\n",
       "0             float64                       1252586   \n",
       "\n",
       "   ehail_fee_Percentage of Null Entries congestion_surcharge_Data Type  \\\n",
       "0                                100.00                        float64   \n",
       "\n",
       "   congestion_surcharge_Total Null Entries  \\\n",
       "0                                  1252586   \n",
       "\n",
       "   congestion_surcharge_Percentage of Null Entries  \n",
       "0                                           100.00  \n",
       "\n",
       "[1 rows x 68 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CURRENT_STEP = STEPS['BEFORE']\n",
    "status(df, 'Initial Status')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.6- Dataset Row Shape and Index <a id=\"shape\"></a>\n",
    "\n",
    "- each row represents a trip\n",
    "- we have 1,252,586 rows and 20 columns\n",
    "- in each row there exists an entry that have atleast one attribute with missing observations\n",
    "- No Suitable index:\n",
    "  - there is no attribute can be used as a unique identifier for each row\n",
    "  - there is no attribute can resemble each trip\n",
    "  - so we will go for the default index\n",
    "  <p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1252586 entries, 0 to 1252585\n",
      "Data columns (total 20 columns):\n",
      " #   Column                 Non-Null Count    Dtype  \n",
      "---  ------                 --------------    -----  \n",
      " 0   vendor                 1252586 non-null  object \n",
      " 1   total_amount           1252586 non-null  float64\n",
      " 2   improvement_surcharge  1252586 non-null  float64\n",
      " 3   tolls_amount           1252586 non-null  float64\n",
      " 4   tip_amount             1252586 non-null  float64\n",
      " 5   mta_tax                1252586 non-null  float64\n",
      " 6   trip_type              1252586 non-null  object \n",
      " 7   trip_distance          1252586 non-null  float64\n",
      " 8   fare_amount            1252586 non-null  float64\n",
      " 9   do_location            1252586 non-null  object \n",
      " 10  pu_location            1252586 non-null  object \n",
      " 11  rate_type              1252586 non-null  object \n",
      " 12  store_and_fwd_flag     1252586 non-null  object \n",
      " 13  lpep_dropoff_datetime  1252586 non-null  object \n",
      " 14  lpep_pickup_datetime   1252586 non-null  object \n",
      " 15  passenger_count        1252379 non-null  float64\n",
      " 16  payment_type           1209497 non-null  object \n",
      " 17  extra                  661916 non-null   float64\n",
      " 18  ehail_fee              0 non-null        float64\n",
      " 19  congestion_surcharge   0 non-null        float64\n",
      "dtypes: float64(11), object(9)\n",
      "memory usage: 191.1+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 355
    },
    "id": "P0JHYuj4msED",
    "outputId": "c4d8d839-49f2-4425-891c-c74010db45a9"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>extra</th>\n",
       "      <th>ehail_fee</th>\n",
       "      <th>congestion_surcharge</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,586.00</td>\n",
       "      <td>1,252,379.00</td>\n",
       "      <td>661,916.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>14.61</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.11</td>\n",
       "      <td>1.22</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2.77</td>\n",
       "      <td>12.11</td>\n",
       "      <td>1.36</td>\n",
       "      <td>0.65</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>11.97</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.98</td>\n",
       "      <td>2.29</td>\n",
       "      <td>0.08</td>\n",
       "      <td>2.95</td>\n",
       "      <td>10.65</td>\n",
       "      <td>1.22</td>\n",
       "      <td>0.26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-315.00</td>\n",
       "      <td>-0.30</td>\n",
       "      <td>-12.50</td>\n",
       "      <td>-15.15</td>\n",
       "      <td>-0.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-315.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-4.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>7.88</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.03</td>\n",
       "      <td>6.50</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>11.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.82</td>\n",
       "      <td>9.50</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>17.34</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>3.46</td>\n",
       "      <td>15.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5,006.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>556.62</td>\n",
       "      <td>395.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>698.56</td>\n",
       "      <td>5,005.50</td>\n",
       "      <td>333.00</td>\n",
       "      <td>4.50</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       total_amount  improvement_surcharge  tolls_amount   tip_amount  \\\n",
       "count  1,252,586.00           1,252,586.00  1,252,586.00 1,252,586.00   \n",
       "mean          14.61                   0.29          0.11         1.22   \n",
       "std           11.97                   0.05          0.98         2.29   \n",
       "min         -315.00                  -0.30        -12.50       -15.15   \n",
       "25%            7.88                   0.30          0.00         0.00   \n",
       "50%           11.30                   0.30          0.00         0.00   \n",
       "75%           17.34                   0.30          0.00         2.00   \n",
       "max        5,006.30                   0.30        556.62       395.00   \n",
       "\n",
       "           mta_tax  trip_distance  fare_amount  passenger_count      extra  \\\n",
       "count 1,252,586.00   1,252,586.00 1,252,586.00     1,252,379.00 661,916.00   \n",
       "mean          0.49           2.77        12.11             1.36       0.65   \n",
       "std           0.08           2.95        10.65             1.22       0.26   \n",
       "min          -0.50           0.00      -315.00             1.00      -4.50   \n",
       "25%           0.50           1.03         6.50             1.00       0.50   \n",
       "50%           0.50           1.82         9.50             1.00       0.50   \n",
       "75%           0.50           3.46        15.00             1.00       1.00   \n",
       "max           0.50         698.56     5,005.50           333.00       4.50   \n",
       "\n",
       "       ehail_fee  congestion_surcharge  \n",
       "count       0.00                  0.00  \n",
       "mean         NaN                   NaN  \n",
       "std          NaN                   NaN  \n",
       "min          NaN                   NaN  \n",
       "25%          NaN                   NaN  \n",
       "50%          NaN                   NaN  \n",
       "75%          NaN                   NaN  \n",
       "max          NaN                   NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x2592 with 11 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_numeric_attributes(df, 'Numeric Attributes Before')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Num of Unique Values</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>total_amount</th>\n",
       "      <td>5794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tolls_amount</th>\n",
       "      <td>115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tip_amount</th>\n",
       "      <td>1827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mta_tax</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trip_distance</th>\n",
       "      <td>3086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fare_amount</th>\n",
       "      <td>835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>passenger_count</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>extra</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ehail_fee</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>congestion_surcharge</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Num of Unique Values\n",
       "total_amount                           5794\n",
       "improvement_surcharge                     3\n",
       "tolls_amount                            115\n",
       "tip_amount                             1827\n",
       "mta_tax                                   3\n",
       "trip_distance                          3086\n",
       "fare_amount                             835\n",
       "passenger_count                          10\n",
       "extra                                     9\n",
       "ehail_fee                                 0\n",
       "congestion_surcharge                      0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Unique Values on numeric attributes because we don't have it\n",
    "\n",
    "def numric_unique_vals(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Calculate the number of unique values in each numeric column.\n",
    "    \"\"\"\n",
    "    display(pd.DataFrame(df.select_dtypes(include='number').nunique(),\n",
    "            columns=['Num of Unique Values']))\n",
    "\n",
    "\n",
    "numric_unique_vals(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.7 Q1. Understanding Numeric Attributes and Investigating - Basic EDA <a id=\"numeric-attributes\"></a>\n",
    "\n",
    "- Passenger Count:\n",
    "  - The passenger count ranges from 1 to 333, with an average of approximately 1.36 passengers,which sounds weird for taxi holding more than 10 let's assume worst case say :\n",
    "    - the behind seat can take up to 4\n",
    "    - say each passenger have a kid on his lap\n",
    "    - maximum of 5\\*2 = 10 passenger count and obviously we won't count the driver as a passenger this scenario if in egypt.\n",
    "    - According to [Taxi in NYC](https://www.takewalks.com/blog/nyc-taxis#:~:text=The%20maximum%20amount%20of%20passengers,taxicab%20by%20law%20is%20four.) , taxi cap allows only 4 passengers\n",
    "    - we have 10 unique values for the passenger count including wrong values\n",
    "  - Most trips have one passenger (25th, 50th, and 75th percentiles all equal to 1).\n",
    "  - There are a few trips with exceptionally high passenger counts (up to 333). These might be outliers or data entry errors.\n",
    "- Trip Distance:\n",
    "  - Trip distances vary from 0 to 698.56 miles, with an average of approximately 2.77 miles.\n",
    "  - The distribution of trip distances is positively skewed, with the 75th percentile at 3.46 miles.\n",
    "  - This suggests that most trips are relatively short.\n",
    "- Pickup time and dropoff time\n",
    "  - can be the same (we need to investigate it too)\n",
    "- Fare Amount:\n",
    "  - The fare amount ranges from -315.00 to 5005.50, **including negative values.**\n",
    "    - Negative fare amounts and exceptionally high values may need further investigation.\n",
    "  - The average fare amount is approximately $12.11.\n",
    "  - There are significant variations in fare amounts, with a standard deviation of $10.65.\n",
    "- Total amount :\n",
    "  - have **negative values** that we need to investigate\n",
    "- Extra, MTA Tax, Tip Amount, Tolls Amount, Improvement Surcharge, and Total Amount:\n",
    "\n",
    "  - These columns have similar statistics in terms of mean, standard deviation, min, and max.\n",
    "  - The distributions of these columns should be examined to understand their impact on the total amount.\n",
    "  - Some columns, like tip amount, have a high standard deviation, indicating variability in tips given.\n",
    "\n",
    "  - Ehail Fee and Congestion Surcharge:\n",
    "    - contains only NaN value\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>trip_type</th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>rate_type</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>payment_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1252586</td>\n",
       "      <td>1209497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>256</td>\n",
       "      <td>238</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>950982</td>\n",
       "      <td>952774</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>Manhattan,Central Harlem North</td>\n",
       "      <td>Manhattan,Central Harlem</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-09 00:00:00</td>\n",
       "      <td>2016-10-21 19:44:48</td>\n",
       "      <td>Credit card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>994502</td>\n",
       "      <td>1226990</td>\n",
       "      <td>39919</td>\n",
       "      <td>70084</td>\n",
       "      <td>1222185</td>\n",
       "      <td>1249446</td>\n",
       "      <td>166</td>\n",
       "      <td>9</td>\n",
       "      <td>601169</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               vendor    trip_type                     do_location  \\\n",
       "count         1252586      1252586                         1252586   \n",
       "unique              2            3                             256   \n",
       "top     VeriFone Inc.  Street-hail  Manhattan,Central Harlem North   \n",
       "freq           994502      1226990                           39919   \n",
       "\n",
       "                     pu_location      rate_type store_and_fwd_flag  \\\n",
       "count                    1252586        1252586            1252586   \n",
       "unique                       238              7                  2   \n",
       "top     Manhattan,Central Harlem  Standard rate                  N   \n",
       "freq                       70084        1222185            1249446   \n",
       "\n",
       "       lpep_dropoff_datetime lpep_pickup_datetime payment_type  \n",
       "count                1252586              1252586      1209497  \n",
       "unique                950982               952774            5  \n",
       "top      2016-10-09 00:00:00  2016-10-21 19:44:48  Credit card  \n",
       "freq                     166                    9       601169  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def obj_attr(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    describe the object attributes\n",
    "    \"\"\"\n",
    "    object_cols_df = df.select_dtypes(include='object')\n",
    "    display(object_cols_df.describe())\n",
    "    return object_cols_df\n",
    "\n",
    "\n",
    "object_cols_df = obj_attr(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "VeriFone Inc.                        994502\n",
       "Creative Mobile Technologies, LLC    258084\n",
       "Name: vendor, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Street-hail    1226990\n",
       "Dispatch         25593\n",
       "unknown              3\n",
       "Name: trip_type, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n",
      "do_location have over 10 unique values\n",
      "============================================================\n",
      "pu_location have over 10 unique values\n",
      "============================================================\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Standard rate            1222185\n",
       "Negotiated fare            25576\n",
       "JFK                         3089\n",
       "Newark                       951\n",
       "Nassau or Westchester        760\n",
       "Group ride                    22\n",
       "unknown                        3\n",
       "Name: rate_type, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "N    1249446\n",
       "Y       3140\n",
       "Name: store_and_fwd_flag, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n",
      "lpep_dropoff_datetime have over 10 unique values\n",
      "============================================================\n",
      "lpep_pickup_datetime have over 10 unique values\n",
      "============================================================\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Credit card    601169\n",
       "Cash           600744\n",
       "No charge        4887\n",
       "Dispute          2657\n",
       "unknown            40\n",
       "Name: payment_type, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n"
     ]
    }
   ],
   "source": [
    "def object_value_counts(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    show the value counts of objects that have  unique values <=10\n",
    "    \"\"\"\n",
    "    for col_name in df.columns:\n",
    "        if (df[col_name].dtype == 'object' and df[col_name].nunique() <= 10):\n",
    "            display(df[col_name].value_counts())\n",
    "            print('='*60)\n",
    "\n",
    "        elif (df[col_name].dtype == 'object' and df[col_name].nunique() > 10):\n",
    "            print(f'{col_name} have over 10 unique values')\n",
    "            print('='*60)\n",
    "\n",
    "\n",
    "object_value_counts(object_cols_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.8 Q2. Understanding Object attributes nature and investigating - Basic EDA <a id=\"object-attributes\"></a>\n",
    "\n",
    "Based on the provided data and the information you've given about the columns, it appears that you are working with a dataset related to taxi or ride-hailing services. The dataset includes information about vendors, pickup and drop-off times, store and forward flags, rate types, locations, payment types, and trip types. Here's a brief exploratory data analysis (EDA) of the data:\n",
    "\n",
    "1. **Vendor Distribution:**\n",
    "\n",
    "   - VeriFone Inc. has significantly more records (994,502) compared to Creative Mobile Technologies, LLC (258,084).\n",
    "   - The \"vendor\" column seems to represent different taxi service providers.\n",
    "\n",
    "2. **Unique Values in Date-Time Columns:**\n",
    "\n",
    "   - The columns \"lpep_pickup_datetime\" and \"lpep_dropoff_datetime\" each have over 10 unique values, indicating a variety of date and time values.\n",
    "\n",
    "3. **Store and Forward Flag:**\n",
    "\n",
    "   - Most records (1,249,446) have a \"N\" value for the \"store_and_fwd_flag\" column, while only 3,140 have a \"Y\" value.\n",
    "   - This column seems to indicate whether data was stored and forwarded in cases of connectivity issues.\n",
    "\n",
    "4. **Rate Type:**\n",
    "\n",
    "   - The \"rate_type\" column has several categories, including :\n",
    "   - \"Standard rate\"(Common): refers to the regular, standard pricing\n",
    "   - \"Negotiated fare\":indicates that the fare or price for the service has been negotiated or agreed upon between the passenger and the service provider\n",
    "   - \"JFK\":from John F. Kennedy International Airport (JFK Airport)\n",
    "   - \"Newark\": trips to or from Newark Liberty International\n",
    "   - \"Nassau or Westchester\": to or from Nassau County, New York, or Westchester County\n",
    "   - \"Group ride\": to or from Nassau County, New York, or Westchester County\n",
    "   - \"Unknown\"\n",
    "\n",
    "5. **Location Information:**\n",
    "\n",
    "   - Both \"pu_location\" and \"do_location\" columns have over 10 unique values.\n",
    "   - This suggests that there are many different pickup and drop-off locations in the dataset.\n",
    "\n",
    "6. **Payment Types:**\n",
    "\n",
    "   - The \"payment_type\" column includes categories like\n",
    "   - \"Credit card\"\n",
    "   - \"Cash\"\n",
    "   - \"No charge\": due to a promotion, a complementary service, or any other reason\n",
    "   - \"Dispute\" : indicate that there is a disagreement or issue related to the payment for the service\n",
    "   - \"Unknown.\"\n",
    "   - \"Credit card\" and \"Cash\" are the most common payment types.\n",
    "\n",
    "7. **Trip Type:**\n",
    "   - The \"trip_type\" column has three categories:\n",
    "   - \"Street-hail \"(most common): refers to the traditional method of hailing a taxi directly from the street or curbside\n",
    "   - \"Dispatch\": Passengers may call a taxi dispatch service or use a mobile app to request a taxi, and the dispatch system assigns a nearby taxi to pick them up.\n",
    "   - \"Unknown\"\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.9 In the data description Quick fix (Dropping Ehail Fee and Congestion Surcharge if it doesn't consist of 2019 records otherwise imputing <a href=\"MNAR\">(MNAR)</a>) <a id=\"ehail-fee\"></a>\n",
    "\n",
    "- ehail fee was introduced in January 1st 2019 so we will drop it since it is all NaN but if we are going to use the data of 2019 we will keep it\n",
    "- we have 2 vendors that provided the records\n",
    "\n",
    "  - VeriFone Inc.:\n",
    "    - in 2016 it supported only taximeter\n",
    "    - didn't had an application service in 2016 , the application was developed in 2018 [Verifone Taxi Media App](https://play.google.com/store/apps/details?id=verifone.com.vfco&hl=en&gl=US)\n",
    "  - Creative Mobile Technologies, LLC:\n",
    "  - unable to find an app service for passengers\n",
    "\n",
    "- which means none of the vendors transportation network company (TNC) service was supported in green taxi in 2016.\n",
    "- so we can drop it since both of these vendors or even no transportation network company (TNC) service column was provided in the data set so I think we could safely drop it\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dropping \"ehail_fee\" column\n"
     ]
    }
   ],
   "source": [
    "def process_new_introduced_numeric_column(df: pd.DataFrame, new_column_name: str, date_column_name: str):\n",
    "    \"\"\"\n",
    "    Process the 'new_column_name' column: drop if no data in or after 2019, replace missing values with 0.\n",
    "    \"\"\"\n",
    "    # Assuming the date column is 'pickup_date', make sure it's in datetime format\n",
    "    df[date_column_name] = pd.to_datetime(df[date_column_name])\n",
    "\n",
    "    # Check if the 'ehail_fee' column exists in the DataFrame\n",
    "    if new_column_name in df.columns:\n",
    "        has_data_after_2019 = (df[date_column_name] >= '2019-01-01').any()\n",
    "\n",
    "        if not has_data_after_2019:\n",
    "            # Drop 'ehail_fee' column if no data after 2019\n",
    "            print(f'Dropping \"{new_column_name}\" column')\n",
    "            drop_column(df, new_column_name)\n",
    "        else:\n",
    "            print(\n",
    "                f'Replacing missing values in \"{new_column_name}\" column with 0')\n",
    "            # Replace missing values in 'new_column_name' with 0\n",
    "            df[new_column_name].fillna(0, inplace=True)\n",
    "            # Add a lookup table entry for the imputed values\n",
    "            insert_to_lookup_table(new_column_name, np.nan, 0, None,\n",
    "                                   f\"Imputed {new_column_name} from {np.nan} to {0} means it was empty\")\n",
    "\n",
    "    else:\n",
    "        print(f'\"{new_column_name}\" column does not exist in the DataFrame.')\n",
    "\n",
    "\n",
    "process_new_introduced_numeric_column(df, 'ehail_fee', 'lpep_pickup_datetime')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dropping \"congestion_surcharge\" column\n"
     ]
    }
   ],
   "source": [
    "process_new_introduced_numeric_column(\n",
    "    df, 'congestion_surcharge', 'lpep_pickup_datetime')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1.10 We will Drop Duplicated Entries Intially (we might do it again at the end too) <a id=\"drop-duplicates\"></a>\n",
    "\n",
    "- we will drop duplicated rows becasue it is not useful for our analysis because :\n",
    "  - it is not useful for our analysis because it is with too low possiblity to have the same trip with the same attributes and same dropoff and pickup time , route distance and fare amount and many other attributes\n",
    "  <p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 18 duplicated rows\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>vendor</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22808</th>\n",
       "      <td>2016-10-01 14:08:40</td>\n",
       "      <td>2016-10-01 14:14:32</td>\n",
       "      <td>Brooklyn,Clinton Hill</td>\n",
       "      <td>Brooklyn,Clinton Hill</td>\n",
       "      <td>7.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252582</th>\n",
       "      <td>2016-10-01 14:08:40</td>\n",
       "      <td>2016-10-01 14:14:32</td>\n",
       "      <td>Brooklyn,Clinton Hill</td>\n",
       "      <td>Brooklyn,Clinton Hill</td>\n",
       "      <td>7.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62017</th>\n",
       "      <td>2016-10-02 04:22:12</td>\n",
       "      <td>2016-10-02 04:33:14</td>\n",
       "      <td>Manhattan,Midtown East</td>\n",
       "      <td>Queens,Astoria</td>\n",
       "      <td>14.30</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252584</th>\n",
       "      <td>2016-10-02 04:22:12</td>\n",
       "      <td>2016-10-02 04:33:14</td>\n",
       "      <td>Manhattan,Midtown East</td>\n",
       "      <td>Queens,Astoria</td>\n",
       "      <td>14.30</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132597</th>\n",
       "      <td>2016-10-04 11:34:54</td>\n",
       "      <td>2016-10-04 11:52:32</td>\n",
       "      <td>Brooklyn,Williamsburg (North Side)</td>\n",
       "      <td>Brooklyn,Boerum Hill</td>\n",
       "      <td>15.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252585</th>\n",
       "      <td>2016-10-04 11:34:54</td>\n",
       "      <td>2016-10-04 11:52:32</td>\n",
       "      <td>Brooklyn,Williamsburg (North Side)</td>\n",
       "      <td>Brooklyn,Boerum Hill</td>\n",
       "      <td>15.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>513308</th>\n",
       "      <td>2016-10-14 10:03:36</td>\n",
       "      <td>2016-10-14 10:23:11</td>\n",
       "      <td>Queens,Maspeth</td>\n",
       "      <td>Queens,North Corona</td>\n",
       "      <td>16.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252576</th>\n",
       "      <td>2016-10-14 10:03:36</td>\n",
       "      <td>2016-10-14 10:23:11</td>\n",
       "      <td>Queens,Maspeth</td>\n",
       "      <td>Queens,North Corona</td>\n",
       "      <td>16.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>628729</th>\n",
       "      <td>2016-10-16 17:27:30</td>\n",
       "      <td>2016-10-16 17:35:51</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>Queens,Jackson Heights</td>\n",
       "      <td>7.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252581</th>\n",
       "      <td>2016-10-16 17:27:30</td>\n",
       "      <td>2016-10-16 17:35:51</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>Queens,Jackson Heights</td>\n",
       "      <td>7.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843570</th>\n",
       "      <td>2016-10-22 10:41:31</td>\n",
       "      <td>2016-10-22 10:54:35</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>Queens,Sunnyside</td>\n",
       "      <td>12.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252577</th>\n",
       "      <td>2016-10-22 10:41:31</td>\n",
       "      <td>2016-10-22 10:54:35</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>Queens,Sunnyside</td>\n",
       "      <td>12.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>905763</th>\n",
       "      <td>2016-10-23 16:38:28</td>\n",
       "      <td>2016-10-23 16:42:56</td>\n",
       "      <td>Manhattan,Central Harlem North</td>\n",
       "      <td>Manhattan,East Harlem North</td>\n",
       "      <td>6.30</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252578</th>\n",
       "      <td>2016-10-23 16:38:28</td>\n",
       "      <td>2016-10-23 16:42:56</td>\n",
       "      <td>Manhattan,Central Harlem North</td>\n",
       "      <td>Manhattan,East Harlem North</td>\n",
       "      <td>6.30</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>964725</th>\n",
       "      <td>2016-10-25 11:18:14</td>\n",
       "      <td>2016-10-25 11:56:16</td>\n",
       "      <td>Brooklyn,Canarsie</td>\n",
       "      <td>Brooklyn,Fort Greene</td>\n",
       "      <td>27.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252580</th>\n",
       "      <td>2016-10-25 11:18:14</td>\n",
       "      <td>2016-10-25 11:56:16</td>\n",
       "      <td>Brooklyn,Canarsie</td>\n",
       "      <td>Brooklyn,Fort Greene</td>\n",
       "      <td>27.80</td>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1173421</th>\n",
       "      <td>2016-10-30 01:04:24</td>\n",
       "      <td>2016-10-30 01:20:54</td>\n",
       "      <td>Queens,North Corona</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>12.80</td>\n",
       "      <td>Creative Mobile Technologies, LLC</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252579</th>\n",
       "      <td>2016-10-30 01:04:24</td>\n",
       "      <td>2016-10-30 01:20:54</td>\n",
       "      <td>Queens,North Corona</td>\n",
       "      <td>Queens,Elmhurst</td>\n",
       "      <td>12.80</td>\n",
       "      <td>Creative Mobile Technologies, LLC</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        lpep_pickup_datetime lpep_dropoff_datetime  \\\n",
       "22808    2016-10-01 14:08:40   2016-10-01 14:14:32   \n",
       "1252582  2016-10-01 14:08:40   2016-10-01 14:14:32   \n",
       "62017    2016-10-02 04:22:12   2016-10-02 04:33:14   \n",
       "1252584  2016-10-02 04:22:12   2016-10-02 04:33:14   \n",
       "132597   2016-10-04 11:34:54   2016-10-04 11:52:32   \n",
       "1252585  2016-10-04 11:34:54   2016-10-04 11:52:32   \n",
       "513308   2016-10-14 10:03:36   2016-10-14 10:23:11   \n",
       "1252576  2016-10-14 10:03:36   2016-10-14 10:23:11   \n",
       "628729   2016-10-16 17:27:30   2016-10-16 17:35:51   \n",
       "1252581  2016-10-16 17:27:30   2016-10-16 17:35:51   \n",
       "843570   2016-10-22 10:41:31   2016-10-22 10:54:35   \n",
       "1252577  2016-10-22 10:41:31   2016-10-22 10:54:35   \n",
       "905763   2016-10-23 16:38:28   2016-10-23 16:42:56   \n",
       "1252578  2016-10-23 16:38:28   2016-10-23 16:42:56   \n",
       "964725   2016-10-25 11:18:14   2016-10-25 11:56:16   \n",
       "1252580  2016-10-25 11:18:14   2016-10-25 11:56:16   \n",
       "1173421  2016-10-30 01:04:24   2016-10-30 01:20:54   \n",
       "1252579  2016-10-30 01:04:24   2016-10-30 01:20:54   \n",
       "\n",
       "                                do_location                  pu_location  \\\n",
       "22808                 Brooklyn,Clinton Hill        Brooklyn,Clinton Hill   \n",
       "1252582               Brooklyn,Clinton Hill        Brooklyn,Clinton Hill   \n",
       "62017                Manhattan,Midtown East               Queens,Astoria   \n",
       "1252584              Manhattan,Midtown East               Queens,Astoria   \n",
       "132597   Brooklyn,Williamsburg (North Side)         Brooklyn,Boerum Hill   \n",
       "1252585  Brooklyn,Williamsburg (North Side)         Brooklyn,Boerum Hill   \n",
       "513308                       Queens,Maspeth          Queens,North Corona   \n",
       "1252576                      Queens,Maspeth          Queens,North Corona   \n",
       "628729                      Queens,Elmhurst       Queens,Jackson Heights   \n",
       "1252581                     Queens,Elmhurst       Queens,Jackson Heights   \n",
       "843570                      Queens,Elmhurst             Queens,Sunnyside   \n",
       "1252577                     Queens,Elmhurst             Queens,Sunnyside   \n",
       "905763       Manhattan,Central Harlem North  Manhattan,East Harlem North   \n",
       "1252578      Manhattan,Central Harlem North  Manhattan,East Harlem North   \n",
       "964725                    Brooklyn,Canarsie         Brooklyn,Fort Greene   \n",
       "1252580                   Brooklyn,Canarsie         Brooklyn,Fort Greene   \n",
       "1173421                 Queens,North Corona              Queens,Elmhurst   \n",
       "1252579                 Queens,North Corona              Queens,Elmhurst   \n",
       "\n",
       "         total_amount                             vendor store_and_fwd_flag  \n",
       "22808            7.80                      VeriFone Inc.                  N  \n",
       "1252582          7.80                      VeriFone Inc.                  N  \n",
       "62017           14.30                      VeriFone Inc.                  N  \n",
       "1252584         14.30                      VeriFone Inc.                  N  \n",
       "132597          15.80                      VeriFone Inc.                  N  \n",
       "1252585         15.80                      VeriFone Inc.                  N  \n",
       "513308          16.80                      VeriFone Inc.                  N  \n",
       "1252576         16.80                      VeriFone Inc.                  N  \n",
       "628729           7.80                      VeriFone Inc.                  N  \n",
       "1252581          7.80                      VeriFone Inc.                  N  \n",
       "843570          12.80                      VeriFone Inc.                  N  \n",
       "1252577         12.80                      VeriFone Inc.                  N  \n",
       "905763           6.30                      VeriFone Inc.                  N  \n",
       "1252578          6.30                      VeriFone Inc.                  N  \n",
       "964725          27.80                      VeriFone Inc.                  N  \n",
       "1252580         27.80                      VeriFone Inc.                  N  \n",
       "1173421         12.80  Creative Mobile Technologies, LLC                  N  \n",
       "1252579         12.80  Creative Mobile Technologies, LLC                  N  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dups_rows = df[df.duplicated(keep=False)][['lpep_pickup_datetime', 'lpep_dropoff_datetime', 'do_location', 'pu_location',\n",
    "                                           'total_amount', 'vendor', 'store_and_fwd_flag']].sort_values(by=['lpep_pickup_datetime', 'lpep_dropoff_datetime'])\n",
    "print(f'There are {len(dups_rows)} duplicated rows')\n",
    "display(dups_rows)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- this indicates that there was a problem in the data collection process\n",
    "  - specifically a glitch in the taximeter that caused it to record duplicate values for the same trip which occurred more with VeriFone Inc. vendor.\n",
    "  - maybe the taximeter was not responding and the driver was trying to fix it by resubmitting the same trip again and again in the system\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop rows where all attributes are duplicated\n",
    "df = df.drop_duplicates(keep=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1.11 We will Drop Empty Entries Intially (we might do it again at the end too) <a id=\"drop-empty\"></a>\n",
    "\n",
    "- because it is not useful for our analysis\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping the rows that have all of the values missing because they are useless for us\n",
    "df.dropna(how='all', inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 1 saved.\n",
      "0 fixed columns saved out of 18 total original columns.\n",
      "0 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['vendor', 'total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'trip_distance', 'fare_amount', 'do_location', 'pu_location', 'rate_type', 'store_and_fwd_flag', 'lpep_dropoff_datetime', 'lpep_pickup_datetime', 'passenger_count', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_1.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, [])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. vendors and store_fwd_flag investigation and encoding - **Checkpoint 2** <a id=\"vendor\"></a>\n",
    "\n",
    "- VeriFone Inc.developed before 2012 [Verifone Media Taxi Demo](https://www.youtube.com/watch?v=8_N2tto88oc&ab_channel=Verifone):\n",
    "  - have a taximeter\n",
    "  - when passenger gets in the vehicle the driver activates taximter :\n",
    "  - specifies the number of passengers **(Rate varies according to that number)**\n",
    "  - each city have different rate rules and taximeter adapts to it\n",
    "  - supports GPS\n",
    "  - accepts credit card payments\n",
    "- [Creative Mobile Technologies, LLC](https://www.cmtgroup.com/#:~:text=with%20a%20mission%20to%20provide,integrated%20technology%20in%20the%20world.):\n",
    "\n",
    "  - didn't provide correlation insights from their website\n",
    "\n",
    "- we can deduce the correlation between the vendor and store_fwd_flag and other attributes from the table without encoding it first so let's encode all values to get a better understanding of the data and the correlation between the vendor and other attributes\n",
    "\n",
    "_Remark: I have pulled this cell up to show that it didnt had any relationship with other numerical attributs as early as possible_\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 1...\n",
      "Failed to convert passenger_count to int64\n",
      "Cannot convert non-finite values (NA or inf) to integer\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.1 Q3. How vendors operate with taxi caps - Basic EDA <a id=\"vendor-operate\"></a>\n",
    "\n",
    "- VeriFone Inc.developed before 2012 [Verifone Media Taxi Demo](https://www.youtube.com/watch?v=8_N2tto88oc&ab_channel=Verifone):\n",
    "  - have a taximeter\n",
    "  - when passenger gets in the vehicle the driver activates taximter :\n",
    "  - specifies the number of passengers **(Rate varies according to that number)**\n",
    "  - each city have different rate rules and taximeter adapts to it\n",
    "  - supports GPS\n",
    "  - accepts credit card payments\n",
    "- [Creative Mobile Technologies, LLC](https://www.cmtgroup.com/#:~:text=with%20a%20mission%20to%20provide,integrated%20technology%20in%20the%20world.):\n",
    "\n",
    "  - didn't provide correlation insights from their website\n",
    "\n",
    "- we can deduce the correlation between the vendor and store_fwd_flag and other attributes from the table without encoding it first so let's encode all values to get a better understanding of the data and the correlation between the vendor and other attributes\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"vendor\" does not contain missing values as a string.\n",
      "Column \"vendor\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df, ['vendor'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- vendor don't have empty values the reason why we dont have any empty values is because the name of the respective vendor is hardcoded to the entry so we can't have any empty values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "VeriFone Inc.                        994486\n",
       "Creative Mobile Technologies, LLC    258082\n",
       "Name: vendor, dtype: int64"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'vendor')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- VeriFone Inc. have more trips than Creative Mobile Technologies, LLC\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x576 with 8 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_columns_relationship(df, 'vendor', [('trip_type', 'count'), (\n",
    "    'store_and_fwd_flag', 'count'), ('rate_type', 'count'), ('payment_type', 'count')])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- VeriFone Inc. have no internet connection issues (store_fwd_flag = N) while Creative Mobile Technologies, LLC have internet is the only vendor that has connection issues (store_fwd_flag = Y) and not\n",
    "- most VeriFone Inc. trips come from Street-hail\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.2 Encoding Vendor <a id='encode-vendor'> </a>\n",
    "\n",
    "- the most appropriate encoding method will be one hot encoding :\n",
    "  - because the vendor is a categorical attribute\n",
    "  - the vendor is not ordinal\n",
    "  - it wont cause large memory space because it will result with 2 columns\n",
    "  - not binarized because it is not a binary attribute and it might be more than 2 vendors in the future\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>encoded_vendor_Creative Mobile Technologies, LLC</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_vendor_Creative Mobile Technologies, LLC</td>\n",
       "      <td>One-Hot Encoded vendor from column vendor to e...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>encoded_vendor_VeriFone Inc.</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_vendor_VeriFone Inc.</td>\n",
       "      <td>One-Hot Encoded vendor from column vendor to e...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           original imputed  \\\n",
       "0  encoded_vendor_Creative Mobile Technologies, LLC    None   \n",
       "1                      encoded_vendor_VeriFone Inc.    None   \n",
       "\n",
       "                                            encoded  \\\n",
       "0  encoded_vendor_Creative Mobile Technologies, LLC   \n",
       "1                      encoded_vendor_VeriFone Inc.   \n",
       "\n",
       "                                             message  \n",
       "0  One-Hot Encoded vendor from column vendor to e...  \n",
       "1  One-Hot Encoded vendor from column vendor to e...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = one_hot_encode_column(df, 'vendor')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.3 Q4. How Store and Forward Flag operate with taxi caps - Basic EDA <a id=\"store-operate\"></a>\n",
    "\n",
    "- Store and Forward Flag:\n",
    "  - Most records (1,249,446) have a \"N\" value for the \"store_and_fwd_flag\" column, while only 3,140 have a \"Y\" value.\n",
    "  - This column seems to indicate whether data was stored and forwarded in cases of connectivity issues.\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"store_and_fwd_flag\" does not contain missing values as a string.\n",
      "Column \"store_and_fwd_flag\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df, ['store_and_fwd_flag'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "N    1249428\n",
       "Y       3140\n",
       "Name: store_and_fwd_flag, dtype: int64"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'store_and_fwd_flag')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- it will be useless to make plots and find relationships between store_fwd_flag and other attributes because the yes values are too low and the no values are too high so insights drawn will be biased to the No values always\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.4 Encoding Store and Forward Flag <a id=\"encode-store\"></a>\n",
    "\n",
    "- we will use binarize encoding for this attribute because :\n",
    "  - it is a categorical attribute\n",
    "  - it is not ordinal\n",
    "  - it is a binary attribute (Y/N) so it will result with one column\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>Encoded store_and_fwd_flag from N to 0 by Bina...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Y</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>Encoded store_and_fwd_flag from Y to 1 by Bina...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  original imputed  encoded                                            message\n",
       "0        N    None        0  Encoded store_and_fwd_flag from N to 0 by Bina...\n",
       "1        Y    None        1  Encoded store_and_fwd_flag from Y to 1 by Bina..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = binarize_column(df, 'store_and_fwd_flag',{\n",
    "    'N':0,\n",
    "    'Y':1\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 2 saved.\n",
      "2 fixed columns saved out of 18 total original columns.\n",
      "0 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'trip_distance', 'fare_amount', 'do_location', 'pu_location', 'rate_type', 'lpep_dropoff_datetime', 'lpep_pickup_datetime', 'passenger_count', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_2.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, ['vendor', 'store_and_fwd_flag'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Understanding Datetime attributes and Investigating - **Checkpoint 3** <a id=\"datetime-attributes\"></a>\n",
    "\n",
    "- lpep pickup datetime (datetime64): when meter was engaged\n",
    "- lpep dropoff datetime (datetime64): when meter was disengaged.\n",
    "- as we can see from the above table the pickup and dropoff datetime are not in the correct type so we can't use them as datetime objects and infer from them so we need to correct it first.\n",
    "- they are in 24 hour time format\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 2...\n",
      "Failed to convert passenger_count to int64\n",
      "Cannot convert non-finite values (NA or inf) to integer\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x1080 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_data(df, ['trip_distance', 'fare_amount', 'tip_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 3.1 Pickup and Dropoff Datetime format,type and consistency <a id=\"pickup-dropoff-datetime-format-consistency\"></a>\n",
    "\n",
    "- we will check the datetime format and consistency of the pickup and dropoff datetime and whether the vendors have same timestamp format\n",
    "- we will convert the pickup and dropoff datetime to datetime objects\n",
    "- we will check if the pickup datetime is before the dropoff if not we will swap them\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "%Y-%m-%d %H:%M:%S\n",
      "%Y-%m-%d %H:%M:%S\n"
     ]
    }
   ],
   "source": [
    "def detect_datetime_format(date_series: pd.Series):\n",
    "    \"\"\"\n",
    "    Detect the format of a datetime series.\n",
    "    \"\"\"\n",
    "    consistent_format = None  # Initialize the detected format to None\n",
    "\n",
    "    # List of potential datetime formats\n",
    "    potential_formats = [\"%Y-%m-%d %H:%M:%S\",\n",
    "                         \"%m/%d/%y %I:%M %p\", \"%b %d, %Y %H:%M:%S\"]\n",
    "\n",
    "    for date_string in date_series:\n",
    "        for format_code in potential_formats:\n",
    "            try:\n",
    "                datetime.datetime.strptime(str(date_string), format_code)\n",
    "                if consistent_format is None:\n",
    "                    consistent_format = format_code\n",
    "                elif consistent_format != format_code:\n",
    "                    consistent_format = None\n",
    "                    continue  # Inconsistent format\n",
    "            except ValueError:\n",
    "                pass\n",
    "    if consistent_format is not None:\n",
    "        return consistent_format  # Return the detected consistent format\n",
    "    else:\n",
    "        return \"Format is not consistent\"  # No valid format detected\n",
    "\n",
    "\n",
    "# Too Expensive computationally\n",
    "print(detect_datetime_format(df['lpep_dropoff_datetime']))\n",
    "print(detect_datetime_format(df['lpep_pickup_datetime']))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "datetime64[ns]\n",
      "datetime64[ns]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1252568</td>\n",
       "      <td>1252568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>950977</td>\n",
       "      <td>952769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>2016-10-09 00:00:00</td>\n",
       "      <td>2016-10-21 19:44:48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>166</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>first</th>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>last</th>\n",
       "      <td>2016-11-01 23:27:38</td>\n",
       "      <td>2016-11-01 00:36:33</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       lpep_dropoff_datetime lpep_pickup_datetime\n",
       "count                1252568              1252568\n",
       "unique                950977               952769\n",
       "top      2016-10-09 00:00:00  2016-10-21 19:44:48\n",
       "freq                     166                    9\n",
       "first    2016-10-01 00:00:00  2016-10-01 00:00:00\n",
       "last     2016-11-01 23:27:38  2016-11-01 00:36:33"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def convert_to_datetime_col(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Convert lpep_pickup_datetime  and  lpep_dropoff_datetime of the DataFrame from a string to datetime type.\n",
    "    \"\"\"\n",
    "    def timeconvert(str1):\n",
    "        \"\"\"\n",
    "        used in case if it is in 12 hour format\n",
    "        \"\"\"\n",
    "        date = str1.split(' ')[0].replace('/', '-')\n",
    "        time = ' '.join(str1.split(' ')[1:])\n",
    "        if time[-2:] == \"AM\" and time[:2] == \"12\":\n",
    "            return str(date + ' ' + \"00\" + time[2:-2])\n",
    "        elif time[-2:] == \"AM\":\n",
    "            return str(date + ' ' + time[:-2])\n",
    "        elif time[-2:] == \"PM\" and time[:2] == \"12\":\n",
    "            return str(date + ' ' + time[:-2])\n",
    "        else:\n",
    "            return str(date + ' '+str(int(time[:2]) + 12)) + time[2:8]\n",
    "\n",
    "    # Convert to datetime\n",
    "    df['lpep_pickup_datetime'] = pd.to_datetime(\n",
    "        df['lpep_pickup_datetime'], infer_datetime_format=True)\n",
    "    df['lpep_dropoff_datetime'] = pd.to_datetime(\n",
    "        df['lpep_dropoff_datetime'], infer_datetime_format=True)\n",
    "\n",
    "\n",
    "convert_to_datetime_col(df)\n",
    "# let us make sure it is fixed\n",
    "print(df['lpep_pickup_datetime'].dtype)\n",
    "print(df['lpep_dropoff_datetime'].dtype)\n",
    "display(df.select_dtypes(include='datetime').describe())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All lpep_pickup_datetime are <= lpep_dropoff_datetime are valid and no missing timestamps.\n"
     ]
    }
   ],
   "source": [
    "def fix_invalid_timestamps(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Check for invalid rows where 'lpep_dropoff_datetime' is before 'lpep_pickup_datetime' or either is missing.\n",
    "    If it exists, swap them together.\n",
    "    \"\"\"\n",
    "    # Check for invalid rows where 'lpep_dropoff_datetime' is before 'lpep_pickup_datetime'\n",
    "    # or either 'lpep_dropoff_datetime' or 'lpep_pickup_datetime' is missing (null or NaN)\n",
    "    invalid_rows = df[\n",
    "        (df['lpep_dropoff_datetime'] < df['lpep_pickup_datetime']) |\n",
    "        df['lpep_dropoff_datetime'].isnull() |\n",
    "        df['lpep_pickup_datetime'].isnull()\n",
    "    ]\n",
    "\n",
    "    # Count the number of invalid rows\n",
    "    num_invalid_rows = len(invalid_rows)\n",
    "\n",
    "    if num_invalid_rows > 0:\n",
    "        print(\n",
    "            f'There are {num_invalid_rows} rows with \"lpep_dropoff_datetime\" before \"lpep_pickup_datetime\" or missing timestamps.')\n",
    "        print('Here are the details of the invalid rows:')\n",
    "        print(invalid_rows)\n",
    "\n",
    "        # Swap the values for 'lpep_pickup_datetime' and 'lpep_dropoff_datetime' in the invalid rows\n",
    "        df.loc[invalid_rows.index, ['lpep_pickup_datetime', 'lpep_dropoff_datetime']\n",
    "               ] = df.loc[invalid_rows.index, ['lpep_dropoff_datetime', 'lpep_pickup_datetime']]\n",
    "\n",
    "    else:\n",
    "        print('All lpep_pickup_datetime are <= lpep_dropoff_datetime are valid and no missing timestamps.')\n",
    "\n",
    "\n",
    "fix_invalid_timestamps(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"lpep_pickup_datetime\" does not contain missing values as NaN.\n",
      "Column \"lpep_dropoff_datetime\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "DATETIME_COLS = ['lpep_pickup_datetime', 'lpep_dropoff_datetime', ]\n",
    "TIME_COLS = ['total_trip_time_sec',\n",
    "             'total_trip_time_hr', 'total_trip_deltatime']\n",
    "identify_columns_needing_imputation(df, DATETIME_COLS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- it seems appropriate to sort the values by pickup and dropoff datetime because it seems appropriate and we can in the future see the trips in a time series manner"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_type</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>do_location</th>\n",
       "      <th>...</th>\n",
       "      <th>rate_type</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>extra</th>\n",
       "      <th>encoded_vendor_Creative Mobile Technologies, LLC</th>\n",
       "      <th>encoded_vendor_VeriFone Inc.</th>\n",
       "      <th>encoded_store_and_fwd_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>6.51</td>\n",
       "      <td>15.00</td>\n",
       "      <td>Bronx,Melrose South</td>\n",
       "      <td>...</td>\n",
       "      <td>Negotiated fare</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>69.13</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.54</td>\n",
       "      <td>3.29</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>22.33</td>\n",
       "      <td>59.50</td>\n",
       "      <td>Queens,Rosedale</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "      <td>2016-10-01 00:00:00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>9.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>1.85</td>\n",
       "      <td>8.50</td>\n",
       "      <td>Manhattan,Morningside Heights</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:08:40</td>\n",
       "      <td>2016-10-01 00:00:01</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>10.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>2.47</td>\n",
       "      <td>9.50</td>\n",
       "      <td>Manhattan,Central Park</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:10:40</td>\n",
       "      <td>2016-10-01 00:00:03</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>17.25</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.45</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>3.49</td>\n",
       "      <td>12.50</td>\n",
       "      <td>Brooklyn,Crown Heights North</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-10-01 00:12:22</td>\n",
       "      <td>2016-10-01 00:00:05</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252563</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>10.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>2.21</td>\n",
       "      <td>9.00</td>\n",
       "      <td>Queens,Jackson Heights</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-11-01 00:06:46</td>\n",
       "      <td>2016-10-31 23:59:59</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252564</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>9.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>2.13</td>\n",
       "      <td>8.50</td>\n",
       "      <td>Queens,Sunnyside</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-11-01 00:10:15</td>\n",
       "      <td>2016-11-01 00:03:14</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252565</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>19.75</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.95</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>4.41</td>\n",
       "      <td>14.50</td>\n",
       "      <td>Manhattan,East Village</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-11-01 00:14:10</td>\n",
       "      <td>2016-11-01 00:04:23</td>\n",
       "      <td>5.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252566</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>100.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>23.29</td>\n",
       "      <td>99.50</td>\n",
       "      <td>unknown</td>\n",
       "      <td>...</td>\n",
       "      <td>Nassau or Westchester</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-11-01 00:56:55</td>\n",
       "      <td>2016-11-01 00:25:24</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Cash</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1252567</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>7.56</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.26</td>\n",
       "      <td>0.50</td>\n",
       "      <td>Street-hail</td>\n",
       "      <td>0.95</td>\n",
       "      <td>5.00</td>\n",
       "      <td>Queens,Old Astoria</td>\n",
       "      <td>...</td>\n",
       "      <td>Standard rate</td>\n",
       "      <td>N</td>\n",
       "      <td>2016-11-01 00:40:05</td>\n",
       "      <td>2016-11-01 00:36:33</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1252568 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                vendor  total_amount  improvement_surcharge  tolls_amount  \\\n",
       "0        VeriFone Inc.         15.30                   0.30          0.00   \n",
       "1        VeriFone Inc.         69.13                   0.30          5.54   \n",
       "2        VeriFone Inc.          9.80                   0.30          0.00   \n",
       "3        VeriFone Inc.         10.80                   0.30          0.00   \n",
       "4        VeriFone Inc.         17.25                   0.30          0.00   \n",
       "...                ...           ...                    ...           ...   \n",
       "1252563  VeriFone Inc.         10.30                   0.30          0.00   \n",
       "1252564  VeriFone Inc.          9.80                   0.30          0.00   \n",
       "1252565  VeriFone Inc.         19.75                   0.30          0.00   \n",
       "1252566  VeriFone Inc.        100.80                   0.30          0.00   \n",
       "1252567  VeriFone Inc.          7.56                   0.30          0.00   \n",
       "\n",
       "         tip_amount  mta_tax    trip_type  trip_distance  fare_amount  \\\n",
       "0              0.00     0.00  Street-hail           6.51        15.00   \n",
       "1              3.29     0.50  Street-hail          22.33        59.50   \n",
       "2              0.00     0.50  Street-hail           1.85         8.50   \n",
       "3              0.00     0.50  Street-hail           2.47         9.50   \n",
       "4              3.45     0.50  Street-hail           3.49        12.50   \n",
       "...             ...      ...          ...            ...          ...   \n",
       "1252563        0.00     0.50  Street-hail           2.21         9.00   \n",
       "1252564        0.00     0.50  Street-hail           2.13         8.50   \n",
       "1252565        3.95     0.50  Street-hail           4.41        14.50   \n",
       "1252566        0.00     0.50  Street-hail          23.29        99.50   \n",
       "1252567        1.26     0.50  Street-hail           0.95         5.00   \n",
       "\n",
       "                           do_location  ...              rate_type  \\\n",
       "0                  Bronx,Melrose South  ...        Negotiated fare   \n",
       "1                      Queens,Rosedale  ...          Standard rate   \n",
       "2        Manhattan,Morningside Heights  ...          Standard rate   \n",
       "3               Manhattan,Central Park  ...          Standard rate   \n",
       "4         Brooklyn,Crown Heights North  ...          Standard rate   \n",
       "...                                ...  ...                    ...   \n",
       "1252563         Queens,Jackson Heights  ...          Standard rate   \n",
       "1252564               Queens,Sunnyside  ...          Standard rate   \n",
       "1252565         Manhattan,East Village  ...          Standard rate   \n",
       "1252566                        unknown  ...  Nassau or Westchester   \n",
       "1252567             Queens,Old Astoria  ...          Standard rate   \n",
       "\n",
       "        store_and_fwd_flag lpep_dropoff_datetime lpep_pickup_datetime  \\\n",
       "0                        N   2016-10-01 00:00:00  2016-10-01 00:00:00   \n",
       "1                        N   2016-10-01 00:00:00  2016-10-01 00:00:00   \n",
       "2                        N   2016-10-01 00:08:40  2016-10-01 00:00:01   \n",
       "3                        N   2016-10-01 00:10:40  2016-10-01 00:00:03   \n",
       "4                        N   2016-10-01 00:12:22  2016-10-01 00:00:05   \n",
       "...                    ...                   ...                  ...   \n",
       "1252563                  N   2016-11-01 00:06:46  2016-10-31 23:59:59   \n",
       "1252564                  N   2016-11-01 00:10:15  2016-11-01 00:03:14   \n",
       "1252565                  N   2016-11-01 00:14:10  2016-11-01 00:04:23   \n",
       "1252566                  N   2016-11-01 00:56:55  2016-11-01 00:25:24   \n",
       "1252567                  N   2016-11-01 00:40:05  2016-11-01 00:36:33   \n",
       "\n",
       "        passenger_count  payment_type extra  \\\n",
       "0                  5.00          Cash   NaN   \n",
       "1                  1.00   Credit card   NaN   \n",
       "2                  1.00          Cash  0.50   \n",
       "3                  1.00          Cash  0.50   \n",
       "4                  1.00   Credit card  0.50   \n",
       "...                 ...           ...   ...   \n",
       "1252563            1.00          Cash  0.50   \n",
       "1252564            2.00          Cash  0.50   \n",
       "1252565            5.00   Credit card  0.50   \n",
       "1252566            1.00          Cash  0.50   \n",
       "1252567            2.00   Credit card  0.50   \n",
       "\n",
       "         encoded_vendor_Creative Mobile Technologies, LLC  \\\n",
       "0                                                       0   \n",
       "1                                                       0   \n",
       "2                                                       0   \n",
       "3                                                       0   \n",
       "4                                                       0   \n",
       "...                                                   ...   \n",
       "1252563                                                 0   \n",
       "1252564                                                 0   \n",
       "1252565                                                 0   \n",
       "1252566                                                 0   \n",
       "1252567                                                 0   \n",
       "\n",
       "         encoded_vendor_VeriFone Inc.  encoded_store_and_fwd_flag  \n",
       "0                                   1                           0  \n",
       "1                                   1                           0  \n",
       "2                                   1                           0  \n",
       "3                                   1                           0  \n",
       "4                                   1                           0  \n",
       "...                               ...                         ...  \n",
       "1252563                             1                           0  \n",
       "1252564                             1                           0  \n",
       "1252565                             1                           0  \n",
       "1252566                             1                           0  \n",
       "1252567                             1                           0  \n",
       "\n",
       "[1252568 rows x 21 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def sort_values(df:pd.DataFrame,cols: List[str]):\n",
    "    \"\"\"\n",
    "    sort the dataframe by the given columns\n",
    "    \"\"\"\n",
    "    df.sort_values(by=cols, inplace=True)\n",
    "    df = df.reset_index(drop=True)\n",
    "    return df  \n",
    "\n",
    "\n",
    "sort_values(df, DATETIME_COLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 3.2 feature engineered from datetime attributes <a id=\"feature-engineered-from-datetime-attributes\"></a>\n",
    "\n",
    "- total_trip_deltatime :\n",
    "  - delta time = lpep_dropoff_datetime - lpep_pickup_datetime\n",
    "  - we will use it to draw insights from a readable format in datetime and correlations\n",
    "- total_trip_time_sec :\n",
    "- converted to seconds as float type to be able to check for correlations with float attributes\n",
    "- delta time = lpep_dropoff_datetime - lpep_pickup_datetime\n",
    "- total_trip_time_hr :\n",
    "- delta time = lpep_dropoff_datetime - lpep_pickup_datetime\n",
    "- converted to hours as float type for easier interpretation\n",
    "- week_number_monthly:\n",
    "  - it indicates in which week in the month the trip was\n",
    "- week_number_yearly :\n",
    "\n",
    "  - it indicates in which week in the year the trip was\n",
    "\n",
    "- date_range (string):\n",
    "  - it indicates the week start and end range date\n",
    "  - we won't encode it because we could conside its encode form is week_number_monthly (label-encoded)\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total_trip_deltatime type: timedelta64[ns]\n",
      "total_trip_time_sec type: float64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_trip_time_hr</th>\n",
       "      <th>total_trip_deltatime</th>\n",
       "      <th>week_number_yearly</th>\n",
       "      <th>week_number_monthly</th>\n",
       "      <th>date_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1756</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0 days</td>\n",
       "      <td>39</td>\n",
       "      <td>3</td>\n",
       "      <td>2016-10-02 to 2016-10-07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      total_trip_time_sec  total_trip_time_hr total_trip_deltatime  \\\n",
       "1756                 0.00                0.00               0 days   \n",
       "\n",
       "      week_number_yearly  week_number_monthly                date_range  \n",
       "1756                  39                    3  2016-10-02 to 2016-10-07  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1728x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def calculate_total_time(df: pd.DataFrame, start_date_column: str, end_date_column: str):\n",
    "    \"\"\"\n",
    "    Calculate the total time duration between two date columns and add a new column 'total time'.\n",
    "    in this method also we feature engineer other attributes\n",
    "    \"\"\"\n",
    "    # Calculate the time duration and create a new column 'total time' in seconds\n",
    "    df['total_trip_deltatime'] = df[end_date_column] - df[start_date_column]\n",
    "    feature_engineer('total_trip_deltatime', 'the total trip time in seconds',\n",
    "                     df['total_trip_deltatime'].dtype.name)\n",
    "    df['total_trip_time_sec'] = df['total_trip_deltatime'].dt.total_seconds()\n",
    "    feature_engineer('total_trip_time_sec', 'the total trip time in seconds',\n",
    "                     df['total_trip_time_sec'].dtype.name)\n",
    "    df['total_trip_time_hr'] = df['total_trip_time_sec'] / 3600\n",
    "    feature_engineer('total_trip_time_hr', 'the total trip time in hours',\n",
    "                     df['total_trip_time_hr'].dtype.name)\n",
    "    # Create the 'Week number' column\n",
    "    df['week_number_yearly'] = df[start_date_column].dt.week\n",
    "    feature_engineer('week_number_yearly', 'the week number of the year',\n",
    "                     df['week_number_yearly'].dtype.name)\n",
    "\n",
    "    df['week_number_monthly'] = df[start_date_column].dt.week % 4\n",
    "    feature_engineer('week_number_monthly', 'the week number of the month',\n",
    "                     df['week_number_monthly'].dtype.name)\n",
    "\n",
    "    # Create the 'Date range' column with the start and end dates of each week\n",
    "    df['date_range'] = df[start_date_column].dt.to_period('W').dt.strftime(\n",
    "        '%Y-%m-%d') + ' to ' + (df[end_date_column] + pd.DateOffset(6)).dt.strftime('%Y-%m-%d')\n",
    "\n",
    "    feature_engineer('date_range', 'the date range of the week',\n",
    "                     df['date_range'].dtype.name)\n",
    "\n",
    "    print(f'total_trip_deltatime type: {df[\"total_trip_deltatime\"].dtypes}')\n",
    "    print(f'total_trip_time_sec type: {df[\"total_trip_time_sec\"].dtypes}')\n",
    "\n",
    "    # Display feature engineered columns\n",
    "    display(df[TIME_COLS+['week_number_yearly',\n",
    "            'week_number_monthly', 'date_range']].head(1))\n",
    "\n",
    "    # Create subplots for histograms\n",
    "    fig, axes = plt.subplots(1, 2, figsize=(24, 6))\n",
    "\n",
    "    # Plot histogram of the total time in seconds\n",
    "    axes[0].hist(df['total_trip_time_sec'], bins=100, edgecolor='black')\n",
    "    axes[0].set_xlabel('Total Time (seconds)')\n",
    "    axes[0].set_ylabel('Frequency')\n",
    "    axes[0].set_title('Histogram of Total Time (seconds)')\n",
    "\n",
    "    # Plot histogram of the total time in hours\n",
    "    axes[1].hist(df['total_trip_time_hr'], bins=100, edgecolor='black')\n",
    "    axes[1].set_xlabel('Total Time (hours)')\n",
    "    axes[1].set_ylabel('Frequency')\n",
    "    axes[1].set_title('Histogram of Total Time (hours)')\n",
    "\n",
    "    # Save the figure\n",
    "    save_figure('total_time_histograms.png')\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "# Call the function to calculate total time\n",
    "calculate_total_time(df, 'lpep_pickup_datetime', 'lpep_dropoff_datetime')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- It appears that the earliest pickup datetime is 2016-10-01 and the latest dropoff datetime is 2016-11-01 which matches our data description that says that the data is from 2016-10-01 to 2016-11-01\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 3 saved.\n",
      "4 fixed columns saved out of 18 total original columns.\n",
      "6 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'trip_distance', 'fare_amount', 'do_location', 'pu_location', 'rate_type', 'passenger_count', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_3.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, DATETIME_COLS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Location(MCAR) and Extract GPS Coordinates Integration - **Checkpoint 4**<a id=\"extract_gps_loc\"></a>\n",
    "\n",
    "- the location might be unknown because the driver didn't turn on the GPS or the GPS was not working or the driver didn't want to share his location so the system record as unknown\n",
    "- the location might be unknown because the location wasn't identified by the system\n",
    "- the location might be unknown because the location was outside the city\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 3...\n",
      "Failed to convert passenger_count to int64\n",
      "Cannot convert non-finite values (NA or inf) to integer\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we imputed with unknown and unified to unknown by regex incase of missing values because it is MCAR\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"pu_location\" contains 2140 missing values as a string which is 0.170849007798379%.\n",
      "Column \"pu_location\" does not contain missing values as NaN.\n",
      "Column \"do_location\" contains 4457 missing values as a string which is 0.3558289849333529%.\n",
      "Column \"do_location\" does not contain missing values as NaN.\n",
      "There are 294 rows with different unknown locations.\n",
      "Here are the details of the rows:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19335</th>\n",
       "      <td>Bronx,Bedford Park</td>\n",
       "      <td>unknown</td>\n",
       "      <td>4.71</td>\n",
       "      <td>781.00</td>\n",
       "      <td>16.30</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2137</th>\n",
       "      <td>Bronx,Belmont</td>\n",
       "      <td>unknown</td>\n",
       "      <td>35.10</td>\n",
       "      <td>2,728.00</td>\n",
       "      <td>97.84</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>624531</th>\n",
       "      <td>Bronx,Bronx Park</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.30</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121123</th>\n",
       "      <td>Bronx,Bronxdale</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197305</th>\n",
       "      <td>Bronx,Claremont/Bathgate</td>\n",
       "      <td>unknown</td>\n",
       "      <td>17.45</td>\n",
       "      <td>2,001.00</td>\n",
       "      <td>62.91</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12428</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Sunnyside</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>50.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>572074</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Whitestone</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>386844</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Woodside</td>\n",
       "      <td>1.30</td>\n",
       "      <td>446.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339890</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Staten Island,Stapleton</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>60.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>700</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>294 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     pu_location              do_location  trip_distance  \\\n",
       "19335         Bronx,Bedford Park                  unknown           4.71   \n",
       "2137               Bronx,Belmont                  unknown          35.10   \n",
       "624531          Bronx,Bronx Park                  unknown           0.00   \n",
       "121123           Bronx,Bronxdale                  unknown           0.00   \n",
       "197305  Bronx,Claremont/Bathgate                  unknown          17.45   \n",
       "...                          ...                      ...            ...   \n",
       "12428                    unknown         Queens,Sunnyside           0.00   \n",
       "572074                   unknown        Queens,Whitestone           0.00   \n",
       "386844                   unknown          Queens,Woodside           1.30   \n",
       "339890                   unknown  Staten Island,Stapleton           0.00   \n",
       "700                      unknown                  unknown           0.00   \n",
       "\n",
       "        total_trip_time_sec  total_amount store_and_fwd_flag  \n",
       "19335                781.00         16.30                  N  \n",
       "2137               2,728.00         97.84                  Y  \n",
       "624531                 0.00          3.30                  Y  \n",
       "121123                 0.00         18.00                  N  \n",
       "197305             2,001.00         62.91                  N  \n",
       "...                     ...           ...                ...  \n",
       "12428                  2.00         50.00                  N  \n",
       "572074                 2.00         17.00                  N  \n",
       "386844               446.00          8.80                  N  \n",
       "339890                 2.00         60.00                  N  \n",
       "700                    3.00         17.00                  N  \n",
       "\n",
       "[294 rows x 6 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "store_and_fwd_flag\n",
       "N    286\n",
       "Y      8\n",
       "dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n",
      "There are 827 rows with same locations.\n",
      "Here are the details of the rows:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4650</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>35.10</td>\n",
       "      <td>20.00</td>\n",
       "      <td>72.00</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4764</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>35.10</td>\n",
       "      <td>33.00</td>\n",
       "      <td>42.50</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5295</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5.70</td>\n",
       "      <td>623.00</td>\n",
       "      <td>18.30</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5529</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.00</td>\n",
       "      <td>20.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6612</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>20.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1239248</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1.55</td>\n",
       "      <td>385.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1239754</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1241727</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1242017</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1249941</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>24.92</td>\n",
       "      <td>4,700.00</td>\n",
       "      <td>83.30</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>827 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pu_location do_location  trip_distance  total_trip_time_sec  \\\n",
       "4650        unknown     unknown          35.10                20.00   \n",
       "4764        unknown     unknown          35.10                33.00   \n",
       "5295        unknown     unknown           5.70               623.00   \n",
       "5529        unknown     unknown           0.00                18.00   \n",
       "6612        unknown     unknown           0.00                 3.00   \n",
       "...             ...         ...            ...                  ...   \n",
       "1239248     unknown     unknown           1.55               385.00   \n",
       "1239754     unknown     unknown           0.00                75.00   \n",
       "1241727     unknown     unknown           0.00                 0.00   \n",
       "1242017     unknown     unknown           0.00                 0.00   \n",
       "1249941     unknown     unknown          24.92             4,700.00   \n",
       "\n",
       "         total_amount store_and_fwd_flag  \n",
       "4650            72.00                  Y  \n",
       "4764            42.50                  Y  \n",
       "5295            18.30                  Y  \n",
       "5529            20.00                  N  \n",
       "6612            20.00                  N  \n",
       "...               ...                ...  \n",
       "1239248          8.80                  N  \n",
       "1239754          0.00                  N  \n",
       "1241727          0.00                  N  \n",
       "1242017          1.00                  N  \n",
       "1249941         83.30                  N  \n",
       "\n",
       "[827 rows x 6 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "store_and_fwd_flag\n",
       "N    816\n",
       "Y     11\n",
       "dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "============================================================\n"
     ]
    }
   ],
   "source": [
    "LOCATION_COLUMNS = ['pu_location', 'do_location']\n",
    "\n",
    "\n",
    "def process_location_columns(df: pd.DataFrame, location_columns: List[str]):\n",
    "    \"\"\"\n",
    "    Process the specified location columns: replace missing values with 'Unknown'.\n",
    "    \"\"\"\n",
    "    for col_name in location_columns:\n",
    "        # Check if the location column exists in the DataFrame\n",
    "        if (contains_missing_values(df, col_name)):\n",
    "            continue\n",
    "        elif col_name in df.columns and df[col_name].dtype == 'object' and df[col_name].isnull().any():\n",
    "            print(\n",
    "                f'Replacing missing values in \"{col_name}\" column with \"unknown\"')\n",
    "            # Replace missing values in location column with 'Unknown' temporarily\n",
    "            impute_na_with_constant(df, col_name, 'unknown')\n",
    "        elif col_name not in df.columns:\n",
    "            print(f'\"{col_name}\" column does not exist in the DataFrame.')\n",
    "        else:\n",
    "            print(f'\"{col_name}\" column does not contain missing values.')\n",
    "            \n",
    "    # check if both are unknown or one of them is unknown\n",
    "    different_locations_dups = df[df.duplicated(subset=LOCATION_COLUMNS, keep=False) & (~df[LOCATION_COLUMNS].duplicated()) & ((df[LOCATION_COLUMNS[0]] == 'unknown') | (\n",
    "        (df[LOCATION_COLUMNS[1]] == 'unknown')))][LOCATION_COLUMNS+['trip_distance', 'total_trip_time_sec', 'total_amount', 'store_and_fwd_flag']].sort_values(by=LOCATION_COLUMNS)\n",
    "    same_location_dups = df[df.duplicated(subset=LOCATION_COLUMNS, keep=False) & (df[LOCATION_COLUMNS].duplicated()) & ((df[LOCATION_COLUMNS[0]] == 'unknown') & (\n",
    "        (df[LOCATION_COLUMNS[1]] == 'unknown')))][LOCATION_COLUMNS+['trip_distance', 'total_trip_time_sec', 'total_amount', 'store_and_fwd_flag']].sort_values(by=LOCATION_COLUMNS)\n",
    "\n",
    "    if len(different_locations_dups) > 0:\n",
    "        print(\n",
    "            f'There are {len(different_locations_dups)} rows with different unknown locations.')\n",
    "        print('Here are the details of the rows:')\n",
    "\n",
    "        display(different_locations_dups)\n",
    "        display(different_locations_dups.groupby('store_and_fwd_flag').size())\n",
    "        print('='*60)\n",
    "    else:\n",
    "        print(f'There are no rows with different unknown locations.')\n",
    "        print('='*60)\n",
    "    if len(same_location_dups) > 0:\n",
    "        print(f'There are {len(same_location_dups)} rows with same locations.')\n",
    "        print('Here are the details of the rows:')\n",
    "        display(same_location_dups)\n",
    "        display(same_location_dups.groupby('store_and_fwd_flag').size())\n",
    "\n",
    "        print('='*60)\n",
    "    else:\n",
    "        print(f'There are no rows with same locations.')\n",
    "        print('='*60)\n",
    "        \n",
    "       \n",
    "\n",
    "\n",
    "process_location_columns(df, LOCATION_COLUMNS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.1 Why pickup and dropoff locations are <a href=\"#MCAR\">MCAR</a> ? <a id=\"pu_do_MCAR\"></a>\n",
    "\n",
    "- MCAR : the data is missing completely at random\n",
    "- we consolidated unknown resemblers with unknown through Regex pattern matching\n",
    "- as we can see from the above table either the pickup or dropoff or both locations are unknown the reason behind it :\n",
    "  - store and forward flag is N which means that the trip was not stored in the vehicle memory before sending to the vendor so the location should be known but it is not , so this is a problem in the data collection process and we can't do anything about it\n",
    "  - the GPS device might be broken\n",
    "  - the GPS location is not available for the location name so we can't do anything about it\n",
    "  - the data might be corrupted\n",
    "\n",
    "### 4.2 How to handle locations MCAR ? <a id=\"handle_pu_do_MCAR\"></a>\n",
    "\n",
    "- we can't do anything about it because it is MCAR so we will leave it as it is unkown\n",
    "- it is not a good idea to impute it with the most frequent value because it will be biased to the most frequent value and it will be a wrong representation of the data and it will affect the analysis and the model\n",
    "- they are around 1000 records with unknown locations so it is not a big deal to drop them because they are not a big portion of the data\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.3 Extract and Save GPS Coordinates Integration <a id=\"extract_gps\"></a>\n",
    "\n",
    "- its better to integrate the the location names with their respective GPS coordinates now to get more insights about the data and to be able to use it in the future\n",
    "- geopy.geocoders is a python library that can be used to get the GPS coordinates of a location name using Nominatim API\n",
    "- we also used an alternative way to get the GPS coordinates using web scraping from [latlong.net](https://www.latlong.net/convert-address-to-lat-long.html)\n",
    "- we also used a lookup table to avoid making a request for each existing row but rather group by the cities and get their respective coordinates. Making a request for each row is too inefficient and expensive.\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(40.6575584, -73.7330753)"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def get_gps_coordinates(address: str):\n",
    "    \"\"\"\n",
    "    Get the GPS coordinates (latitude, longitude) of a given address using the Google Maps Geocoding API.\n",
    "    \"\"\"\n",
    "    base_url = \"https://maps.googleapis.com/maps/api/geocode/json\"\n",
    "    params = {\n",
    "        \"address\": address,\n",
    "        \"key\": api_key\n",
    "    }\n",
    "\n",
    "    try:\n",
    "        response = requests.get(base_url, params=params)\n",
    "        if response.status_code == 200:\n",
    "            data = response.json()\n",
    "            if data[\"status\"] == \"OK\":\n",
    "                location = data[\"results\"][0][\"geometry\"][\"location\"]\n",
    "                latitude = location[\"lat\"]\n",
    "                longitude = location[\"lng\"]\n",
    "                return latitude, longitude\n",
    "    except:\n",
    "        return None, None\n",
    "\n",
    "    return None, None\n",
    "\n",
    "\n",
    "# Example usage\n",
    "get_gps_coordinates(\"Queens,Rosedale\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset 'locations.csv' already exists. Not recomputing.\n"
     ]
    }
   ],
   "source": [
    "from geopy.geocoders import Nominatim\n",
    "\n",
    "ALTERNATIVE_DATASET = \"nyc-zip-code-latitude-and-longitude.csv\"\n",
    "LOCATION_DATASET = 'locations.csv'\n",
    "\n",
    "\n",
    "def geocode_and_save_combined_locations(df, location_col_names, output_csv=LOCATION_DATASET):\n",
    "    \"\"\"\n",
    "    Geocode unique locations from specified columns and save the results to a CSV file.\n",
    "    If coordinates are missing, an alternative dataset can be used.\n",
    "    If coordinates are still missing, google maps is being used.\n",
    "    \"\"\"\n",
    "    # Check if the dataset file already exists\n",
    "    dataset_path = os.path.join(DATASET_DIR, output_csv)\n",
    "    if os.path.exists(dataset_path):\n",
    "        print(f\"Dataset '{output_csv}' already exists. Not recomputing.\")\n",
    "        return\n",
    "\n",
    "    # Initialize the geocoder\n",
    "    geolocator = Nominatim(user_agent=\"geocoder\")\n",
    "\n",
    "    # Create a combined list of unique locations from both columns\n",
    "    unique_locations = set()\n",
    "    for location_col_name in location_col_names:\n",
    "        unique_locations.update(df[location_col_name].dropna().unique())\n",
    "\n",
    "    # Create a DataFrame to store the results\n",
    "    location_data = pd.DataFrame(columns=['location', 'latitude', 'longitude'])\n",
    "    # Alternative Dataset for missing coordinates\n",
    "    alternative_df = pd.read_csv(\n",
    "        os.path.join(DATASET_DIR, ALTERNATIVE_DATASET))\n",
    "\n",
    "    for location in unique_locations:\n",
    "        location_info = geolocator.geocode(location)\n",
    "        if location_info is not None:\n",
    "            location_data = location_data.append({'location': location, 'latitude': float(\n",
    "                location_info.latitude), 'longitude': float(location_info.longitude)}, ignore_index=True)\n",
    "        else:\n",
    "            # If coordinates are missing, try to get them from the alternative dataset\n",
    "            alternative_location_info = alternative_df[alternative_df['location'] == location]\n",
    "            if not alternative_location_info.empty:\n",
    "                location_data = location_data.append({'location': location, 'latitude': float(\n",
    "                    alternative_location_info.iloc[0]['latitude']), 'longitude': float(alternative_location_info.iloc[0]['longitude'])}, ignore_index=True)\n",
    "            else:\n",
    "                # If coordinates are still missing, use the Google Maps API\n",
    "                latitude, longitude = get_gps_coordinates(location)\n",
    "                location_data = location_data.append({'location': location, 'latitude': float(\n",
    "                    latitude), 'longitude': float(longitude)}, ignore_index=True)\n",
    "\n",
    "    # Save the location data to a CSV file\n",
    "    display(location_data[['latitude', 'longitude']].head())\n",
    "    save_dataframe(location_data, dataset_path)\n",
    "\n",
    "\n",
    "geocode_and_save_combined_locations(df, LOCATION_COLUMNS)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"pu_location_latitude\"  2140 contains missing values as NaN which is 0.170849007798379%.\n",
      "Column \"pu_location_longitude\"  2140 contains missing values as NaN which is 0.170849007798379%.\n",
      "Column \"do_location_latitude\"  4457 contains missing values as NaN which is 0.3558289849333529%.\n",
      "Column \"do_location_longitude\"  4457 contains missing values as NaN which is 0.3558289849333529%.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location_latitude</th>\n",
       "      <th>pu_location_longitude</th>\n",
       "      <th>do_location_latitude</th>\n",
       "      <th>do_location_longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>408263</th>\n",
       "      <td>Manhattan,East Harlem South</td>\n",
       "      <td>Manhattan,East Harlem South</td>\n",
       "      <td>40.80</td>\n",
       "      <td>-73.94</td>\n",
       "      <td>40.80</td>\n",
       "      <td>-73.94</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        pu_location                  do_location  \\\n",
       "408263  Manhattan,East Harlem South  Manhattan,East Harlem South   \n",
       "\n",
       "        pu_location_latitude  pu_location_longitude  do_location_latitude  \\\n",
       "408263                 40.80                 -73.94                 40.80   \n",
       "\n",
       "        do_location_longitude  \n",
       "408263                 -73.94  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location_latitude</th>\n",
       "      <th>pu_location_longitude</th>\n",
       "      <th>do_location_latitude</th>\n",
       "      <th>do_location_longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1,250,428.00</td>\n",
       "      <td>1,250,428.00</td>\n",
       "      <td>1,248,111.00</td>\n",
       "      <td>1,248,111.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>40.75</td>\n",
       "      <td>-73.94</td>\n",
       "      <td>40.75</td>\n",
       "      <td>-73.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.06</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>40.54</td>\n",
       "      <td>-74.21</td>\n",
       "      <td>40.51</td>\n",
       "      <td>-74.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>40.70</td>\n",
       "      <td>-73.96</td>\n",
       "      <td>40.70</td>\n",
       "      <td>-73.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>40.74</td>\n",
       "      <td>-73.95</td>\n",
       "      <td>40.75</td>\n",
       "      <td>-73.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>40.80</td>\n",
       "      <td>-73.93</td>\n",
       "      <td>40.79</td>\n",
       "      <td>-73.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>40.91</td>\n",
       "      <td>-73.71</td>\n",
       "      <td>40.91</td>\n",
       "      <td>-73.71</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       pu_location_latitude  pu_location_longitude  do_location_latitude  \\\n",
       "count          1,250,428.00           1,250,428.00          1,248,111.00   \n",
       "mean                  40.75                 -73.94                 40.75   \n",
       "std                    0.06                   0.04                  0.06   \n",
       "min                   40.54                 -74.21                 40.51   \n",
       "25%                   40.70                 -73.96                 40.70   \n",
       "50%                   40.74                 -73.95                 40.75   \n",
       "75%                   40.80                 -73.93                 40.79   \n",
       "max                   40.91                 -73.71                 40.91   \n",
       "\n",
       "       do_location_longitude  \n",
       "count           1,248,111.00  \n",
       "mean                  -73.94  \n",
       "std                     0.05  \n",
       "min                   -74.24  \n",
       "25%                   -73.97  \n",
       "50%                   -73.95  \n",
       "75%                   -73.92  \n",
       "max                   -73.71  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "COORDINATE_COLUMNS = []\n",
    "\n",
    "\n",
    "def integrate_gps_coordinates(df: pd.DataFrame, location_col_names: List[str]):\n",
    "    \"\"\"\n",
    "    Integrate the city names into GPS coordinates using geocoding.\n",
    "    \"\"\"\n",
    "    lat_col_name = 'latitude'\n",
    "    lon_col_name = 'longitude'\n",
    "    # Load the geocoded location data from the CSV file\n",
    "    location_data = pd.read_csv(os.path.join(DATASET_DIR, LOCATION_DATASET))\n",
    "\n",
    "    loc_names = location_col_names.copy()\n",
    "\n",
    "    # Merge the location data back into the original DataFrame for each specified location column\n",
    "    for location_column in location_col_names:\n",
    "        df = df.merge(location_data, left_on=location_column,\n",
    "                      right_on='location', how='left')\n",
    "        COORDINATE_COLUMNS.append(location_column)\n",
    "        # Remove the 'Location' column from the merged DataFrame\n",
    "        df = df.drop(columns=['location'])\n",
    "        # Rename the latitude and longitude columns\n",
    "        df = df.rename(columns={lat_col_name: f'{location_column}_{lat_col_name}',\n",
    "                       lon_col_name: f'{location_column}_{lon_col_name}'})\n",
    "        if '{location_column}_{lat_col_name}' not in loc_names:\n",
    "            loc_names.append(f'{location_column}_{lat_col_name}')\n",
    "        if '{location_column}_{lon_col_name}' not in loc_names:\n",
    "            loc_names.append(f'{location_column}_{lon_col_name}')\n",
    "        contains_missing_values(df, f'{location_column}_{lat_col_name}')\n",
    "        contains_missing_values(df, f'{location_column}_{lon_col_name}')\n",
    "        feature_engineer(f'{location_column}_{lat_col_name}', 'the latitude of {location_column}',\n",
    "                         df[f'{location_column}_{lat_col_name}'].dtype.name)\n",
    "        feature_engineer(f'{location_column}_{lon_col_name}', 'the longitude of {location_column}',\n",
    "                         df[f'{location_column}_{lon_col_name}'].dtype.name)\n",
    "    display(df[loc_names].sample())\n",
    "    display(df[loc_names].describe())\n",
    "    return df\n",
    "\n",
    "\n",
    "df = integrate_gps_coordinates(df, LOCATION_COLUMNS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we have empty values in the pu_location and do_location so we need to investigate more about them and try to fill them with an estimated value later in this section we need the help for other attributes to be able to fill them well\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- recommedation (for future): an extra check we could make is that we check if pu_location and do_location are with NYC boundaries\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "# to be done\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4.4 Extract Haversine Distance from GPS Coordinates <a id=\"extract_haversine_distance\"></a>\n",
    "\n",
    "- we will use the [haversine formula](https://www.igismap.com/haversine-formula-calculate-geographic-distance-earth/) to calculate the distance between two points given their GPS coordinates\n",
    "- we will use the google map to calculate the distance between two points given their GPS coordinates\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.593584782226179"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def haversine_distance(lat1: float, lon1: float, lat2: float, lon2: float, trip_distance: float):\n",
    "    \"\"\"\n",
    "    Calculate the Haversine distance between two GPS coordinates.\n",
    "    \"\"\"\n",
    "    if lat1 is None or lon1 is None or lat2 is None or lon2 is None:\n",
    "        return trip_distance\n",
    "\n",
    "    # Radius of the Earth in miles\n",
    "    R = 3959.0\n",
    "\n",
    "    # Convert latitude and longitude from degrees to radians\n",
    "    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])\n",
    "\n",
    "    # Haversine formula\n",
    "    dlon = lon2 - lon1\n",
    "    dlat = lat2 - lat1\n",
    "    a = math.sin(dlat / 2)**2 + math.cos(lat1) * \\\n",
    "        math.cos(lat2) * math.sin(dlon / 2)**2\n",
    "    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n",
    "    distance = R * c\n",
    "\n",
    "    return distance\n",
    "\n",
    "\n",
    "haversine_distance(40.6892, -74.0445, 40.7128, -74.0060, 0.0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_distance_from_google_api(lat1: float, lon1: float, lat2: float, lon2: float):\n",
    "    \"\"\"\n",
    "    Calculate the distance between two GPS coordinates using the Google Maps API.\n",
    "    \"\"\"\n",
    "\n",
    "    url = f\"https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins={lat1},{lon1}&destinations={lat2},{lon2}&key={api_key}\"\n",
    "    r = requests.get(url)\n",
    "    data = r.json()\n",
    "    try:\n",
    "        distance_in_miles = float(\n",
    "            data['rows'][0]['elements'][0]['distance']['text'].replace(' mi', ''))\n",
    "        return distance_in_miles\n",
    "    except:\n",
    "        return None\n",
    "\n",
    "\n",
    "# Example usage:\n",
    "calculate_distance_from_google_api(40.6892, -74.0445, 40.7128, -74.0060)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Google API is not working\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>trip_distance_haversine</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1125716</th>\n",
       "      <td>2.91</td>\n",
       "      <td>2.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>436569</th>\n",
       "      <td>1.30</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613665</th>\n",
       "      <td>5.56</td>\n",
       "      <td>3.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148646</th>\n",
       "      <td>1.22</td>\n",
       "      <td>1.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>955265</th>\n",
       "      <td>2.42</td>\n",
       "      <td>2.59</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         trip_distance  trip_distance_haversine\n",
       "1125716           2.91                     2.70\n",
       "436569            1.30                     0.60\n",
       "613665            5.56                     3.95\n",
       "148646            1.22                     1.03\n",
       "955265            2.42                     2.59"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def calculate_distance(df: pd.DataFrame):\n",
    "    # Calculate trip distance for each row\n",
    "    if 'trip_distance_haversine' in df.columns:\n",
    "        print('trip_distance_haversine already exists')\n",
    "    else:\n",
    "        df['trip_distance_haversine'] = df.apply(lambda row: haversine_distance(\n",
    "            row['pu_location_latitude'], row['pu_location_longitude'],\n",
    "            row['do_location_latitude'], row['do_location_longitude'],\n",
    "            None\n",
    "        ), axis=1)\n",
    "        feature_engineer('trip_distance_haversine', 'the distance of the trip through haversine formula',\n",
    "                         df['trip_distance_haversine'].dtype.name)\n",
    "\n",
    "    doesItWork = calculate_distance_from_google_api(\n",
    "        40.6892, -74.0445, 40.7128, -74.0060)\n",
    "\n",
    "    if (doesItWork != None):\n",
    "        # Calculate trip distance using Google Maps API\n",
    "        if 'trip_distance_google_map' in df.columns:\n",
    "            print('trip_distance_google_map already exists')\n",
    "        else:\n",
    "            feature_engineer('trip_distance_google_map', 'the distance of the trip through google maps api',\n",
    "                             df['trip_distance_google_map'].dtype.name)\n",
    "        df['trip_distance_google_map'] = df.apply(lambda row: calculate_distance_from_google_api(\n",
    "            row['pu_location_latitude'], row['pu_location_longitude'],\n",
    "            row['do_location_latitude'], row['do_location_longitude']\n",
    "        ), axis=1)\n",
    "        display(df[['trip_distance', 'trip_distance_haversine',\n",
    "                'trip_distance_google_map']].sample(5))\n",
    "    else:\n",
    "        print('Google API is not working')\n",
    "        display(df[['trip_distance', 'trip_distance_haversine']].sample(5))\n",
    "\n",
    "\n",
    "calculate_distance(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column: trip_distance - Skewness: 14.076895000828959\n",
      "Column: trip_distance_haversine - Skewness: 2.096987840383968\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x576 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_kdeplots(df, ['trip_distance', 'trip_distance_haversine'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we can see from trip_distance_haversine and trip_distance Density Plot that there is a huge difference between the two distributions\n",
    "- this might be due to the fact that the haversine formula calculates the distance between two points on a sphere (shortest route even through buildings) while trip distance is calculated by the taximeter which is the drived distance based on the Route.\n",
    "- we need to investigate the trip distance and handle outliers most probably\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 4.5 Q5. Are the Trips are mostly within neighborhoods or between neighborhoods? - Complex EDA <a id=\"trips-neighborhoods-same-diff\"></a>\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 98.49596987947959% duplicated trips from-to (are same) in the dataset.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>trip_distance_haversine</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>49991</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>18.20</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105330</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>13.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162682</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>1.10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>344.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295690</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.00</td>\n",
       "      <td>8.40</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474458</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>30.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1239248</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1.55</td>\n",
       "      <td>NaN</td>\n",
       "      <td>385.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1239754</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1241727</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1242017</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1249941</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>24.92</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4,700.00</td>\n",
       "      <td>83.30</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1233729 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           pu_location                    do_location  \\\n",
       "49991    Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "105330   Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "162682   Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "295690   Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "474458   Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "...                                ...                            ...   \n",
       "1239248                        unknown                        unknown   \n",
       "1239754                        unknown                        unknown   \n",
       "1241727                        unknown                        unknown   \n",
       "1242017                        unknown                        unknown   \n",
       "1249941                        unknown                        unknown   \n",
       "\n",
       "         trip_distance  trip_distance_haversine  total_trip_time_sec  \\\n",
       "49991             0.00                     0.00                 2.00   \n",
       "105330            0.00                     0.00                13.00   \n",
       "162682            1.10                     0.00               344.00   \n",
       "295690            0.00                     0.00                29.00   \n",
       "474458            0.00                     0.00                30.00   \n",
       "...                ...                      ...                  ...   \n",
       "1239248           1.55                      NaN               385.00   \n",
       "1239754           0.00                      NaN                75.00   \n",
       "1241727           0.00                      NaN                 0.00   \n",
       "1242017           0.00                      NaN                 0.00   \n",
       "1249941          24.92                      NaN             4,700.00   \n",
       "\n",
       "         total_amount  tolls_amount  \n",
       "49991           18.20          0.00  \n",
       "105330          12.00          0.00  \n",
       "162682           8.80          0.00  \n",
       "295690           8.40          0.00  \n",
       "474458           8.80          0.00  \n",
       "...               ...           ...  \n",
       "1239248          8.80          0.00  \n",
       "1239754          0.00          0.00  \n",
       "1241727          0.00          0.00  \n",
       "1242017          1.00          0.00  \n",
       "1249941         83.30          0.00  \n",
       "\n",
       "[1233729 rows x 7 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 1.1138716620574691% duplicated trips from-to are different in the dataset.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>trip_distance_haversine</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>29759</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1,226.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169771</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Bedford Park</td>\n",
       "      <td>3.24</td>\n",
       "      <td>2.06</td>\n",
       "      <td>1,324.00</td>\n",
       "      <td>16.30</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89522</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Bronxdale</td>\n",
       "      <td>7.56</td>\n",
       "      <td>1.44</td>\n",
       "      <td>428.00</td>\n",
       "      <td>20.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11335</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Co-Op City</td>\n",
       "      <td>1.28</td>\n",
       "      <td>1.08</td>\n",
       "      <td>303.00</td>\n",
       "      <td>6.80</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380466</th>\n",
       "      <td>Bronx,Allerton/Pelham Gardens</td>\n",
       "      <td>Bronx,Eastchester</td>\n",
       "      <td>0.84</td>\n",
       "      <td>1.87</td>\n",
       "      <td>342.00</td>\n",
       "      <td>6.30</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12428</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Sunnyside</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.00</td>\n",
       "      <td>50.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>572074</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Whitestone</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>386844</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Queens,Woodside</td>\n",
       "      <td>1.30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>446.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339890</th>\n",
       "      <td>unknown</td>\n",
       "      <td>Staten Island,Stapleton</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.00</td>\n",
       "      <td>60.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>700</th>\n",
       "      <td>unknown</td>\n",
       "      <td>unknown</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13952 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          pu_location                    do_location  \\\n",
       "29759   Bronx,Allerton/Pelham Gardens  Bronx,Allerton/Pelham Gardens   \n",
       "169771  Bronx,Allerton/Pelham Gardens             Bronx,Bedford Park   \n",
       "89522   Bronx,Allerton/Pelham Gardens                Bronx,Bronxdale   \n",
       "11335   Bronx,Allerton/Pelham Gardens               Bronx,Co-Op City   \n",
       "380466  Bronx,Allerton/Pelham Gardens              Bronx,Eastchester   \n",
       "...                               ...                            ...   \n",
       "12428                         unknown               Queens,Sunnyside   \n",
       "572074                        unknown              Queens,Whitestone   \n",
       "386844                        unknown                Queens,Woodside   \n",
       "339890                        unknown        Staten Island,Stapleton   \n",
       "700                           unknown                        unknown   \n",
       "\n",
       "        trip_distance  trip_distance_haversine  total_trip_time_sec  \\\n",
       "29759            0.00                     0.00             1,226.00   \n",
       "169771           3.24                     2.06             1,324.00   \n",
       "89522            7.56                     1.44               428.00   \n",
       "11335            1.28                     1.08               303.00   \n",
       "380466           0.84                     1.87               342.00   \n",
       "...               ...                      ...                  ...   \n",
       "12428            0.00                      NaN                 2.00   \n",
       "572074           0.00                      NaN                 2.00   \n",
       "386844           1.30                      NaN               446.00   \n",
       "339890           0.00                      NaN                 2.00   \n",
       "700              0.00                      NaN                 3.00   \n",
       "\n",
       "        total_amount  tolls_amount  \n",
       "29759          12.00          0.00  \n",
       "169771         16.30          0.00  \n",
       "89522          20.00          0.00  \n",
       "11335           6.80          0.00  \n",
       "380466          6.30          0.00  \n",
       "...              ...           ...  \n",
       "12428          50.00          0.00  \n",
       "572074         17.00          0.00  \n",
       "386844          8.80          0.00  \n",
       "339890         60.00          0.00  \n",
       "700            17.00          0.00  \n",
       "\n",
       "[13952 rows x 7 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
     ]
    },
    {
     "data": {
      "image/png": "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WJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYmgKxiIiIiFiaArGIiIiIWJoCsYiIiIhYWpYE4nHjxuHr64u7uzthYWGpTpOQkEBQUBCNGzemSZMmLF26NCtKExERERGLy5JA3KhRIxYtWkSxYsXSnGb16tWcOXOG9evX8+233zJp0iTCw8OzojwRERERsbAsCcReXl64urred5q1a9fSoUMHbG1tcXFxoXHjxqxbty4ryhMRERERC7PP7gKSREREULRoUfO1q6srFy5cyPRyjhw58jDLyrTq1atn6/pF5PGyd+/e7C5BRETS8dgE4oelUqVK5MiRI7vLEBEB9CVZRORxEBMTc99G08fmLhOurq6cP3/efB0REUGRIkWysSIRERERsYLHJhA3a9aMpUuXkpiYSHR0NBs2bMDPzy+7yxIRERGRJ1yWBOIxY8bQoEEDLly4QI8ePWjZsiUAvXr14vDhwwAEBARQvHhxmjZtSseOHXn99dcpUaJEVpQnIiIiIhZmYxiGkd1FPAxJfUMehz7EXd5blK3rF5HHwzfju2Z3CSIiQvo58bHpMiEiIiIikh0UiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTSFIhFRERExNIUiEVERETE0hSIRURERMTS7LNqRSdPnmTw4MFcvXoVZ2dnxo0bR+nSpZNNc/nyZYYMGUJERARxcXHUrl2bYcOGYW+fZWWKiIiIiMVkWQvxiBEj6NKlCyEhIXTp0oXhw4enmGb69Om4ubmxevVqVq9ezW+//cb69euzqkQRERERsaAsCcSXL1/m6NGj+Pv7A+Dv78/Ro0eJjo5ONp2NjQ03b94kMTGR2NhY4uLiKFy4cFaUKCIiIiIWlSV9ESIiIihcuDB2dnYA2NnZUahQISIiInBxcTGn69evHwMGDKB+/frcvn2brl27Ur169Uyt68iRIw+19szKbL0i8mTbu3dvdpcgIiLpeKw6565btw53d3fmzZvHzZs36dWrF+vWraNZs2YZXkalSpXIkSPHI6xSRCTj9CVZRCT7xcTE3LfRNEu6TLi6uhIZGUlCQgIACQkJREVF4erqmmy6hQsX0rp1a2xtbcmbNy++vr6EhoZmRYkiIiIiYlFZEogLFChAxYoVCQ4OBiA4OJiKFSsm6y4BULx4cX799VcAYmNj2bFjB+XKlcuKEkVERETEorLsLhMjR45k4cKF+Pn5sXDhQoKCggDo1asXhw8fBuCDDz5g7969tGrVijZt2lC6dGk6duyYVSWKiIiIiAVlWR9iNzc3li5dmmL4rFmzzJ9LlizJnDlzsqokERERERE9qU5ERERErE2BWEREREQsTYFYRERERCxNgVhERERELE2BWEREREQsTYFYRERERCxNgVhERERELE2BWEREREQsTYFYRERERCxNgVhERERELE2BWEREREQsTYFYRERERCxNgVhERERELE2BWEREREQsTYFYRERERCxNgVhERERELE2BWEREREQsTYFYRERERCwtw4F4yJAhrFmzJtmw0NBQ5syZ89CLEhERERHJKhkOxMuXL+fQoUPJhm3YsIHx48c/9KJERERERLKKfXoTTJ482fz54MGD5mvDMNi0aRMODg6PrjoRERERkUcsQ4HYxsYGGxsbDh48yMGDB81xhmFQrVq1R1qgiIiIiMijlG4gbtOmDTY2Nixfvhw3Nzc8PDwAsLW1xdXVlQ4dOjzyIkVEREREHpV0A/HYsWPNn+vVq4e/v/8jLUhEREREJCul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nJycAHB3d8cwDK5evZoVJYqIiIiIRWVJC3FERASFCxfGzs4OADs7OwoVKkRERAQuLi6pzrNixQpKlixJkSJFMrWuI0eO/Ot6/43q1atn6/pF5PGyd+/e7C5BRETSkWVdJjJj165dfPXVV3z99deZnrdSpUrkyJHjEVQlIpJ5+pIsIpL9YmJi7ttomiVdJlxdXYmMjCQhIQGAhIQEoqKicHV1TTHt/v37effdd5kyZQplypTJivJERERExMKyJBAXKFCAihUrEhwcDEBwcDAVK1ZM0V3i0KFDvPXWW0ycOJHnnnsuK0oTEREREYvLsvsQjxw5koULF+Ln58fChQsJCgoCoFevXhw+fBiAoKAg7ty5w/DhwwkICCAgIIDjx49nVYkiIiIiYkFZ1ofYzc2NpUuXphg+a9Ys8+cffvghq8oREREREQH0pDoRERERsTgFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbE0BWIRERERsTQFYhERERGxNAViEREREbG0LAvEJ0+epFOnTvj5+dGpUydOnTqVYpqEhASCgoJo3LgxTZo0YenSpVlVnoiIPAKxcQnZXYKIPCYe588D+6xa0YgRI+jSpQsBAQGsXLmS4cOHM3/+/GTTrF69mjNnzrB+/XquXr1KmzZtqFOnDsWLF8+qMkVE5CFydLCjy3uLsrsMEXkMfDO+a3aXkKYsCcSXL1/m6NGjzJkzBwB/f39Gjx5NdHQ0Li4u5nRr166lQ4cO2Nra4uLiQuPGjVm3bh2vvvpquuswDAOA2NjYR7MRmfBULofs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",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def same_or_diff_neighberhood():\n",
    "    different_locations_dups = df[df.duplicated(subset=LOCATION_COLUMNS, keep=False) & (~df[LOCATION_COLUMNS].duplicated(\n",
    "    ))][LOCATION_COLUMNS+['trip_distance', 'trip_distance_haversine', 'total_trip_time_sec', 'total_amount', 'tolls_amount']].sort_values(by=LOCATION_COLUMNS)\n",
    "    same_location_dups = df[df.duplicated(subset=LOCATION_COLUMNS, keep=False) & (df[LOCATION_COLUMNS].duplicated())][LOCATION_COLUMNS+[\n",
    "        'trip_distance', 'trip_distance_haversine', 'total_trip_time_sec', 'total_amount', 'tolls_amount']].sort_values(by=LOCATION_COLUMNS)\n",
    "    # Calculate the total count for each category\n",
    "    total_same_location_count = same_location_dups.shape[0]\n",
    "    total_different_locations_count = different_locations_dups.shape[0]\n",
    "\n",
    "    print(\n",
    "        f'There are {(same_location_dups.shape[0]/len(df))*100}% duplicated trips from-to (are same) in the dataset.')\n",
    "    display(same_location_dups)\n",
    "    print(\n",
    "        f'There are {(different_locations_dups.shape[0]/len(df))*100}% duplicated trips from-to are different in the dataset.')\n",
    "    display(different_locations_dups)\n",
    "\n",
    "    # Create a countplot\n",
    "    plt.figure(figsize=(10, 6))\n",
    "    ax = sns.countplot(x=\"Type of Duplicates\", data=pd.concat([same_location_dups.assign(**{\"Type of Duplicates\": \"Same Location\"}),\n",
    "                                                               different_locations_dups.assign(**{\"Type of Duplicates\": \"Different Locations\"})]))\n",
    "    plt.title(\"Count of Duplicated Trips by Neighberhood\")\n",
    "    plt.xlabel(\"Type of Duplicates\")\n",
    "    plt.ylabel(\"Count\")\n",
    "\n",
    "    # Add the total counts to the legend\n",
    "    ax.legend(\n",
    "        title=f\"Total: Same Neighberhood ({total_same_location_count}), Different Neighberhood ({total_different_locations_count})\")\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "same_or_diff_neighberhood()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- this indicates that most of the trips are within neighborhoods significantly more than between neighborhoods\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4.6 Q6. What is the Top 10 pickup and dropoff location within same or different neighborhoods? <a id=\"pickup-dropoff-location-top10\"></a>\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_top_locations(df, top_n=10, isPickup=True, same_neighborhood=True):\n",
    "    \"\"\"\n",
    "    Plot the top pickup and dropoff locations within the same neighborhood or from different neighborhoods.\n",
    "    \"\"\"\n",
    "    if same_neighborhood:\n",
    "        title = f'Top {top_n} Pickup and Dropoff Locations within the Same Neighborhood'\n",
    "        locations = df[(df['pu_location'] == df['do_location']) & (\n",
    "            df['pu_location'] != 'unknown')].groupby('pu_location').size().nlargest(top_n)\n",
    "    elif not same_neighborhood and isPickup:\n",
    "        title = f'Top {top_n} Pickup Locations from Different Neighborhoods'\n",
    "        locations = df[df['pu_location'] != df['do_location']\n",
    "                       ].groupby('pu_location').size().nlargest(top_n)\n",
    "    elif not same_neighborhood and not isPickup:\n",
    "        title = f'Top {top_n} Dropoff Locations from Different Neighborhoods'\n",
    "        locations = df[df['pu_location'] != df['do_location']\n",
    "                       ].groupby('do_location').size().nlargest(top_n)\n",
    "\n",
    "    plt.figure(figsize=(10, 6))\n",
    "    # if title in SAVED_FIGURES:\n",
    "    #   load_and_display_figure(SAVED_FIGURES[title])\n",
    "    #  return\n",
    "\n",
    "    ax = sns.barplot(x=locations.values, y=locations.index,\n",
    "                     hue=locations.index, palette='viridis', legend=False)\n",
    "\n",
    "    plt.title(title)\n",
    "    plt.xlabel('Frequency')\n",
    "    plt.ylabel('Location')\n",
    "    SAVED_FIGURES[title] = save_figure(title)\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "# Plot top 10 pickup and dropoff locations within the same neighborhood based on trip frequency\n",
    "plot_top_locations(df, top_n=10, same_neighborhood=True)\n",
    "\n",
    "# Plot top 10 pickup locations from different neighborhoods based on trip distance\n",
    "plot_top_locations(df, top_n=10, isPickup=True, same_neighborhood=False)\n",
    "\n",
    "# Plot top 10 dropoff locations from different neighborhoods based on trip distance\n",
    "plot_top_locations(df, top_n=10, isPickup=False, same_neighborhood=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4.7 Why Queens austria is the most same pickup and dropoff location? <a id=\"queens-austria\"></a>\n",
    "\n",
    "- Commuter Patterns: Queens Austria may have a higher number of commuters or residents who travel short distances within the same neighborhood or to nearby locations, resulting in a higher number of trips with the same pickup and dropoff locations.\n",
    "\n",
    "#### 4.8 Why Manhattan East Harlem North is the most different pickup and dropoff location? <a id=\"manhatten\"></a>\n",
    "\n",
    "- Manhattan East Harlem North may consist of a mix of residential and commercial areas,where people are traveling to various destinations, leading to a greater diversity of pickup and dropoff locations.\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 'trip_distance_haversine' is computed using the Haversine formula, which accounts for the curvature of the Earth's surface and provides a more accurate measure of geographical distance.\n",
    "- 'trip_distance_google' is computed using the Google Maps API, which provides a more accurate measure of travel distance.**(but it is not free)**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 4 saved.\n",
      "6 fixed columns saved out of 18 total original columns.\n",
      "11 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'trip_distance', 'fare_amount', 'rate_type', 'passenger_count', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_4.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, LOCATION_COLUMNS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.0  Investigating trip distance,time and speed attribute values and distribution (Multivariate Analysis) - **Checkpoint 5** <a id=\"trip-distance-time-speed\"></a>\n",
    "\n",
    "- we will investigate the trip distance,time and mph attributes and their distribution\n",
    "- we will feature engineer the mph attribute\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 4...\n",
      "Failed to convert passenger_count to int64\n",
      "Cannot convert non-finite values (NA or inf) to integer\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(4)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"trip_distance\" does not contain missing values as NaN.\n",
      "Column \"total_trip_time_hr\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "identify_columns_needing_imputation(\n",
    "    df, ['trip_distance', 'total_trip_time_hr'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.1 feature engineered mph new feature <a id=\"feature-engineer-mph\"></a>\n",
    "\n",
    "- mph:\n",
    "  - mph = trip_distance / total_trip_time_sec/3600\n",
    "  - so from the mph we can see that theres is outliers in the trip distance and total_trip_time_sec that we need to investigate because the max mph is 48,960 which is impossible for a taxi to reach that speed so we need to investigate the outliers in the trip distance and total_trip_time_sec\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mph type: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean           14.80\n",
       "std           137.03\n",
       "min             0.00\n",
       "25%             8.90\n",
       "50%            11.28\n",
       "75%            14.37\n",
       "max        48,960.00\n",
       "Name: mph, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def calculate_mph(df: pd.DataFrame, distance_column: str, time_column: str):\n",
    "    \"\"\"\n",
    "    Calculate the speed in miles per hour (mph) and add a new column 'mph'.\n",
    "    \"\"\"\n",
    "    # Calculate the speed in miles per hour, but handle the case where time is zero\n",
    "    df['mph'] = df.apply(lambda row: (row[distance_column] / (row[time_column] / 3600))\n",
    "                         if (not pd.isna(row[time_column]) and row[time_column] != 0) else 10, axis=1)\n",
    "\n",
    "    print(f'mph type: {df[\"mph\"].dtypes}')\n",
    "    display(df['mph'].describe())\n",
    "\n",
    "\n",
    "calculate_mph(df, 'trip_distance', 'total_trip_time_sec')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.2 Detecting and Handling Outliers for Trip Distance, Total Trip Time and Mph <a id=\"trip-distance-outliers\"></a>\n",
    "\n",
    "- according to this [website](https://secretnyc.co/nyc-most-congested-city-us/#:~:text=New%20York%20City%20may%20be,per%20hour%20during%20peak%20times) the average speed in NYC is 12 mph so we can see that the average speed in our dataset is 14.8 mph which is reasonable for a taxi in NYC but in the same time we can see that the max speed is 25 mph in [NYC GOV Website](https://www.nyc.gov/html/dot/downloads/pdf/current-pre-vision-zero-speed-limit-maps.pdf),48,960 mph which is impossible for a taxi to reach that speed so we need to investigate the outliers in the trip distance and total_trip_time_sec\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " trip_distance skew : 14.076895000828959\n",
      " total_trip_time_hr skew : 12.541900946513518\n",
      " mph skew : 138.77441539852853\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_multivariate_analysis(df, ['trip_distance', 'total_trip_time_hr', 'mph'],\n",
    "                           title='Multivariate Analysis for trip distance, total trip time hr, mph - before handling outliers')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we can see that there are high values in the mph that doesn't make sense at all they are considered outliers so we need to investigate them and handle them\n",
    "  - someone might mistakenly enter an unusually large time difference or distance\n",
    "  - the driver might have forgotten to turn off the meter at the end of the trip\n",
    "  - the driver might have forgotten to turn on the meter at the beginning of the trip\n",
    "- Steps to fix :\n",
    "  - make sure that the pickup and dropoff locations an datetime if they are the same then the distance should be 0\n",
    "  - the distance outliers detected by Boxplot with the upper bond is increased to 3 \\* IQR and lower bound are 0 will be fixed by replacing them with their respective mean distance for the same pu_location and do_location\n",
    "  - we will replace these outliers with same trips that had same dropoff and pickup locations\n",
    "  - the mph outliers will be capped at 25 mph since it is the max speed in NYC\n",
    "  - the total_trip_time_sec values will  be recomputed using the new distance and mph values and we will multiply it by 1.10 to make sure we account for the time the driver took to turn on and off the meter and the time the passenger took to get in and out of the vehicle and the time that the driver waits in traffic lights and traffic jams and accounts for any other factor as margin of error\n",
    "  - reset distance, mph, time, and total_trip_deltatime to 0 when pickup and dropoff times and locations are the same\n",
    "  - compute the new dropoff_datetime by adding pickup_datetime and total_trip_deltatime\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23.31542073209376"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# according to trip distance haversine\n",
    "df['trip_distance_haversine'].max()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- I will set an upperbound of 70 miles as a worst case scenario for a trip distance in NYC because it is impossible to have a real trip with a distance more than 70 miles in NYC because it is a small city and the longest distance between two points in NYC is 60 miles so I will set an upperbound of 70 miles for the trip distance according to this [website](https://www.distancesto.com/city/new-york-city/ny/us/distance/history/1000.html#:~:text=The%20calculated%20distance%20(air%20line,New%20York%20City%20is%2060.1%20miles.)\n",
    "- and according to trip_distance_haversine the max distance between two points through coordinates is 23.315 miles "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "replace_outliers(df, 'trip_distance', 0,70)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = detect_and_fix_outliers_by_group(\n",
    "    df, 'trip_distance', ['pu_location', 'do_location'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_time_mph_outliers(df, speed_upperbound=25, speed_lowerbound=10):\n",
    "\n",
    "    # Step 2: Cap mph outliers at 25 mph\n",
    "    df['mph'] = df['mph'].apply(lambda x: max(\n",
    "        min(x, speed_upperbound), speed_lowerbound))\n",
    "\n",
    "    # Step 3: Recompute total_trip_time_sec using the new distance and capped mph values\n",
    "    df['total_trip_time_sec'] = (df['trip_distance'] / df['mph'] * 3600) * 1.10\n",
    "    df['total_trip_time_hr'] =  df['total_trip_time_sec'] / 3600\n",
    "    df['total_trip_deltatime'] = pd.to_timedelta(\n",
    "        df['total_trip_time_sec'], unit='s')\n",
    "\n",
    "\n",
    "fix_time_mph_outliers(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 15474 rows with the same pickup and dropoff times and locations that are kept the same.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>mph</th>\n",
       "      <th>total_trip_time_hr</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_trip_deltatime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     trip_distance  mph  total_trip_time_hr  total_trip_time_sec  \\\n",
       "169           0.00 0.00                0.00                 0.00   \n",
       "307           0.00 0.00                0.00                 0.00   \n",
       "325           0.00 0.00                0.00                 0.00   \n",
       "378           0.00 0.00                0.00                 0.00   \n",
       "471           0.00 0.00                0.00                 0.00   \n",
       "\n",
       "    total_trip_deltatime  \n",
       "169                    0  \n",
       "307                    0  \n",
       "325                    0  \n",
       "378                    0  \n",
       "471                    0  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def same_time_location_fix(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "     Reset distance, mph, time, and total_trip_deltatime to 0 when pickup and dropoff times and locations are the same\n",
    "     returns the masked df\n",
    "    \"\"\"\n",
    "    same_time_location_mask = ((df['lpep_pickup_datetime'] == df['lpep_dropoff_datetime']) & (\n",
    "        df['pu_location'].str.strip().str.lower() == df['do_location'].str.strip().str.lower())) | (df['trip_distance'] == 0)\n",
    "\n",
    "    df.loc[same_time_location_mask, ['trip_distance', 'mph',\n",
    "                                     'total_trip_time_hr', 'total_trip_time_sec', 'total_trip_deltatime']] = 0\n",
    "    print(f'There are {same_time_location_mask.sum()} rows with the same pickup and dropoff times and locations that are kept the same.')\n",
    "\n",
    "    display(df[same_time_location_mask][['trip_distance', 'mph',\n",
    "            'total_trip_time_hr', 'total_trip_time_sec', 'total_trip_deltatime']].head())\n",
    "    return same_time_location_mask\n",
    "\n",
    "\n",
    "same_time_location_mask = same_time_location_fix(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " trip_distance skew : 2.683826243731889\n",
      " total_trip_time_hr skew : 2.176217384513014\n",
      " mph skew : 1.0993200246867862\n"
     ]
    },
    {
     "data": {
      "image/png": "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kgR49qXi4mLmz5/PjTfeSHx8PP369ZMjZ7Nnz2br1q0sX77cIypcUTsuu5+K2hRAeno6M2fOpHv37nTo0IHhw4fzyy+/yN/v27ePV155hU6dOtGzZ0/+9re/cfbs2UrPhwt/f3+3a6NSqfD19ZU/OxwO/vGPf9C1a1cSExOZOHEiqampgLP93XnnnQDcdtttTJgwQXbW9+/fz5QpU+jVqxedOnVi9OjR7Nmzp8p2Xd4m9Xo9Go1G/rx582a6devGtm3bGDFiBAkJCfz2228e18/1ecuWLQwdOpSEhATGjBlTYfSs7H5dLxwhISHyspCQkHLb5q+//kpKSgqJiYnMmTOHI0eOcOTIEcaPH0+HDh0YM2YMR48eddvfvn37uPfee6/6GlZEeffeK2H06NFs3ryZzMxMedm3335Lly5daN68udu6L730Ek8++SRvvPEGPXr0oHPnzjz11FNe70HvvvsuN954I927d2f27NmUlJRc3UF6Ydu2bRQVFfG3v/2NsLAwfvrpJ/m72bNn88QTT+BwOOR+O3HiRNLT03nnnXfkZWfOnAHg1KlTPPTQQ3Tt2pVu3bpx7733cvjwYXl7rjZ2eVv8q1zNPeTpp5/2uIds27aN4cOHk5CQwPDhw9m2bVul+748FWPAgAG89dZb/POf/6R79+707t2buXPnYrfb5XVMJhPPPPMMXbp0oVu3bjz//PP8+9//rjCiaTKZePLJJ+nZsyfz5s2jQ4cOREZG0rdvX7744gusViuffvqpvL63kYL33ntP9l/efvttvv32W37//Xf5OpaXOuRtW5X5EAMGDGDevHk8//zz9OjRg/HjxwNOR/K2224jISGBHj16cOedd1ZLYLTsc7Ls8/Py+9xzzz3HgAEDKCwslJc9+eST3HLLLRQXF3s9XtfnivqhJEm8+eab9OzZk06dOjFr1iw+++yzKmVa9OzZE4PBwPr16+VlO3bsICMjg8GDB7ut6/IjVq1axcCBA0lISODuu+/m9OnTHttdv349t956Kx07dpT7bWVUOad77NixfPvtt3KO2pIlS+jZsyeRkZFV3US5LF++HHAe7G+//SZHHcvi5+fHwIEDWbFihdvyVatWERoayo033gg43/YeeOABli9fzqeffopSqWT69OkeDucbb7zBsGHDWLVqFRMmTPBql06n46WXXmLNmjW8+uqr/P777/zzn/8EnBHTZ599FnBGo3777Te5Eb399tt88sknPPbYY3z//fc89dRTLFq0iHfeeafSc7Fo0SJGjhyJVqtlyJAhLF682GMdV+N76qmnWLZsGYGBgTzyyCNyh3Q4HISGhvLvf/+b77//njlz5rBs2TLmz5/vdZ9+fn4MHz7cY1/ffvstUVFRdO/enaysLB555BGGDh3K6tWrWbRoEZMnT3aLIpdl/fr1fPjhhzz11FOsXbuWTz/91C1aeKVkZWVx77330qRJE5YsWcL7779PWlqaR9rThQsXWLBgAa+++ipr1qy56vb56quvMmXKFL7//vsKI1CvvvoqDz74ICtWrKBDhw7cf//9bg5BVdFoNNxzzz2cOnWqXCfs//7v/zh58iTvvfcea9euZd68eURHRwPOKHHXrl257bbb5PbYqVMnoOJ27KKyNpWVlcW4ceMoLCzkvffeY9WqVTz88MMolc5byNGjR5k4cSJt27bl22+/5fPPP0epVHLvvfdWafSjMhwOBw8++CDHjx9n/vz5LFmyhNDQUO69915yc3OJiIiQH8wLFizgvffekx264uJihg4dypdffsmyZcu46aabeOONN9xexv8qkiTx+uuv849//IMffvih3DQ113rPPfecfAzTp0+ntLS02mxxMW/ePB555BGWLVuGWq3m0Ucf5fnnn2fmzJksW7YMjUbjNsTruoYdO3a8JtfQRVXuveXRvHlzunXrxtKlSwHn+fz2228ZO3as1/V/+ukn8vPzWbBgAW+88QYbNmzgjTfe8FinoKCAL774gjfeeIP169fz8ccfX93BeWHRokUMHz4ctVrNiBEj3O6zTz31FHPmzEGpVMr99u2336Zp06bce++98rKIiAiys7OZMGECISEhfP311yxatIhWrVoxadIkcnNz5W1WtS1eCVdzDzEYDG73kMzMTGbMmEF8fDzLly9n9uzZ/Otf/7oqe7766isaN27M4sWLefrpp/n888/dfIM33niDn3/+mddee41Fixbh7+/PggULKtzmb7/9RnZ2NtOnT/f4zs/PjzvvvJM///yTgoKCKtl47733MmzYMHl01ZU6VBWq6kN8+eWXhIaGsnDhQubOncu+fft47rnnmD59Oj/++CNffPEFI0aMqNI+q4s5c+ZgMBh4+umnAaePtmrVKt588038/PzK/V1l/fDzzz/nyy+/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dOlSdu3axZYtW1i4cCGvv/46n332WaWR5spQq9VX9GzesWMHKpWKjIwMzGZzpVH+iq6p6/+rbS8uUlJSeOqppwgMDKySqkxZLr/W5b1wlH1meuOKdLqjo6NJSEjgzz//5I477vC6TkhICHa7nezsbHmZa7JdebiMr8xYgJEjR5KWlkZqaiqrV692y1c6duwYubm5zJo1i549exIdHU1BQcFVPdR27txJcHCwnKbRqlUrj8kILrvLTuBo06YNOp2O06dPExUV5fGvPOdozZo1qFQqVq5cyYoVK+R/X3/9NUePHr0i2bwdO3YQFxfHPffcQ3x8PC1btqzSZKihQ4diNptZtGgRv/76q0eepEKhIDExkRkzZvD111/TrVu3CjVltVotffv25YknnmDVqlWYTCZ5IsOeI1l8sqrq8ktt2rRh9+7dbsNZhw4doqioqNzhwJqg7HWx2WykpqZWOozpDavVymeffUbLli093vjL4ufnx7Bhw3jxxRf54IMP+P333+UoqUajcWuLULV2XBXat2/Prl27yp1gFh8fz+HDhwkPD/do89WhONK2bVvy8vLcIsIWi4XU1FQ5+u1yYC6/j/zxxx+MHz+egQMHEhsbS6NGjbhw4cJftulqKdtmCgsLOXHixFW1merGdQ1btGhRrdfQapc8PucW/bUc9pSUFHbs2EGHDh0qPHepqalufWL37t1oNJpyX2yrQlBQkNu5Kc+Z2L9/P2fOnOGbb75xu6evWLECm83GunXryt2Ht74cHx/P0aNHvfaxa6nwUV33kDZt2rB3716349q5c2d1mgo4gxYajYY///zTbXllk6ddI+llRzFcFBcX8/XXX9OpUye5L4SGhnrcRy73dbxdx/IwW+2YrXZ0/uEolGqsJbmgC8YnMKxKPoQLlUpFt27dePjhh1m2bBmNGjW6JulrFbFkyRLWr1/Pl19+SWlpKS+//PJf2p6/vz+NGze+4mt6OX369EGr1XLu3DmvaVQucnNz3SZFnjhxgvz8/Gq5T19xcZz//ve/bNu2rdybVmJiIgaDgX//+9+cPHmSTZs28e6771a4zeDgYHx9ffntt9/IysqqcKJCTEwMN9xwA8888wx5eXluJy4yMhKtVsuXX35Jeno6W7du5V//+tdVvR21atWK3NxclixZwunTp1mxYoVHrm6zZs0A2LBhA7m5uRiNRgwGA9OnT+fNN9/kq6++4vjx4xw5coQ1a9a4pcFczqJFixg0aBCxsbHExMTI/7p06ULnzp09pHoqsz0tLY3169eTnp7O559/ztq1ayv9na+vL7fffjuvvvoqERER8jAKwK5du3j33XfZs2cP586dY+vWrRw+fLjcRrhs2TIWL17MoUOHOHv2LN999x1Go1F2kHILTZzOLPL6W2/cddddFBcX8+STT5KWlsaOHTt4/PHH6dKlS7lDuzXBRx99xK+//sqxY8d4/vnnyc7OlmeRl4fdbicrK4usrCyOHz/OmjVrmDBhAkePHmXu3LnlpovMmzeP33//nePHj3Py5ElWrVqFr6+vPJTVrFkz9u/fT3p6Orm5uVit1iq146owYcIEJEnigQceYOfOnZw+fZpffvmFX3/9FXDmwB87dox3332XvXv3cvr0abZt28Y///nPcnPUr4SePXuSmJjIY489xs6dO0lLS+OJJ57AbDbL5zsyMhKlUsnmzZspKCiQ1RVatWrFqlWrOHz4MAcPHuTRRx+t0gv+tUChUPD666/zxx9/cPjwYZ544gl8fHwqfADUFK5r+Pe//71ar6FGpfT4HOL/10akoqKi2LZtW6UTHvPz83nhhRc4duwYGzdu5K233mLs2LE1MpL1888/06VLFzp16uR2T2/Xrh0DBgyo8J7erFkzdu3axblz58jNzUWSJO666y7sdjsPPvggO3bs4MyZM+zYsYN58+Z5qFxVJ9V5D8nNzeWZZ57h2LFjbN269YrVa6qCr68v48aN46233uKXX37hxIkTzJs3j2PHjlXoC/j4+PDKK6+wdetWHn30Ufbu3UtGRgabN29m0qRJ8mR3F71792br1q18//33nDp1ig8//NBD27xZs2ayD5Cbm1th7QCdRoVOo0Kp1hHSZgA5h3+kKH0rxXmZVfIhwClg8Nlnn7Fv3z7OnTvH+vXrOX/+fI2+1B8/fpyXX36ZJ598ki5duvDmm2+ydOnSKqeBlMe9997L559/znfffcfJkyf57LPP+N///ndF/p1SqeS7775j06ZNFaa6+vj48OSTT7Jv3z5SU1OZPXs2MTExbj7R1XLFTrePj0+FQ41BQUG8+eab7N69m9tvv5333nuPxx9/vGIjlEqee+45fvjhB/r37y/nEZfHiBEjOHjwIH369JHTH8AZZX/99ddlSa65c+fyj3/8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",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_multivariate_analysis(df, ['trip_distance', 'total_trip_time_hr', 'mph'],\n",
    "                           title='Multivariate Analysis for trip_distance, total_trip_time_hr, mph - after handling outliers , fixing mph')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see here the relationship between the trip distance and the total trip time is somewhat linear with a range and this range is due to different mph speeds of drivers which is expected behavior\n",
    "- although we still have few points that are considered outliers\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_amount</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>do_location</th>\n",
       "      <th>total_trip_time_hr</th>\n",
       "      <th>mph</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1203980</th>\n",
       "      <td>427.34</td>\n",
       "      <td>70.00</td>\n",
       "      <td>Queens,Saint Albans</td>\n",
       "      <td>unknown</td>\n",
       "      <td>3.08</td>\n",
       "      <td>25.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105038</th>\n",
       "      <td>259.38</td>\n",
       "      <td>61.20</td>\n",
       "      <td>Staten Island,Arrochar/Fort Wadsworth</td>\n",
       "      <td>unknown</td>\n",
       "      <td>2.69</td>\n",
       "      <td>25.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28157</th>\n",
       "      <td>190.80</td>\n",
       "      <td>61.00</td>\n",
       "      <td>Brooklyn,Sunset Park West</td>\n",
       "      <td>Brooklyn,Flatlands</td>\n",
       "      <td>3.53</td>\n",
       "      <td>19.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1149382</th>\n",
       "      <td>58.34</td>\n",
       "      <td>56.80</td>\n",
       "      <td>Manhattan,East Harlem South</td>\n",
       "      <td>Staten Island,Eltingville/Annadale/Prince's Bay</td>\n",
       "      <td>2.50</td>\n",
       "      <td>25.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         total_amount  trip_distance                            pu_location  \\\n",
       "1203980        427.34          70.00                    Queens,Saint Albans   \n",
       "105038         259.38          61.20  Staten Island,Arrochar/Fort Wadsworth   \n",
       "28157          190.80          61.00              Brooklyn,Sunset Park West   \n",
       "1149382         58.34          56.80            Manhattan,East Harlem South   \n",
       "\n",
       "                                             do_location  total_trip_time_hr  \\\n",
       "1203980                                          unknown                3.08   \n",
       "105038                                           unknown                2.69   \n",
       "28157                                 Brooklyn,Flatlands                3.53   \n",
       "1149382  Staten Island,Eltingville/Annadale/Prince's Bay                2.50   \n",
       "\n",
       "          mph  \n",
       "1203980 25.00  \n",
       "105038  25.00  \n",
       "28157   19.00  \n",
       "1149382 25.00  "
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['trip_distance'] > 50)].sort_values(by='trip_distance', ascending=False)[\n",
    "    ['total_amount', 'trip_distance', 'pu_location', 'do_location', 'total_trip_time_hr', 'mph']].head(5)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see that we had 4 outliers distance of trip distance higher than 50\n",
    "\n",
    "  - lets investigate each record\n",
    "  - the 1st and 2nd record their destination are unknown\n",
    "  - 3rd record :\n",
    "    - according to google map it takes 38 min and distance 15.2 miles [google map](https://www.google.com/search?q=Brooklyn%2CSunset+Park+West+to+Brooklyn%2CFlatlands&oq=Brooklyn%2CSunset+Park+West+to+Brooklyn%2CFlatlands&aqs=chrome..69i57.5042j0j1&sourceid=chrome&ie=UTF-8)\n",
    "  - 4th record :\n",
    "    - according to google map it takes 1 hour 4 min and distance 40 miles [google map](https://www.google.com/search?q=Manhattan%2CEast+Harlem+South%09to+Staten+Island%2CEltingville%2FAnnadale%2FPrince%27s+Bay&sca_esv=575768419&sxsrf=AM9HkKmf37qL8hfmYk9bM_3QqYaacEIaMQ%3A1698062896708&ei=MGI2Zf-uKviE9u8P0umF6AY&ved=0ahUKEwj_ho6ekYyCAxV4gv0HHdJ0AW0Q4dUDCBA&uact=5&oq=Manhattan%2CEast+Harlem+South%09to+Staten+Island%2CEltingville%2FAnnadale%2FPrince%27s+Bay&gs_lp=Egxnd3Mtd2l6LXNlcnAiTk1hbmhhdHRhbixFYXN0IEhhcmxlbSBTb3V0aAl0byBTdGF0ZW4gSXNsYW5kLEVsdGluZ3ZpbGxlL0FubmFkYWxlL1ByaW5jZSdzIEJheUgAUABYAHAAeAGQAQCYAQCgAQCqAQC4AQPIAQD4AQL4AQHiAwQYACBB&sclient=gws-wiz-serp)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 5.3 Floor and Ceiling Trip distance Outliers <a id=\"floor-ceiling-trip-distance-outliers\"></a>\n",
    "\n",
    "- so the best solution is to upper cap and lower cap distance based on quantile , why?\n",
    "  - because we don't want to lose the information of the trip distance and we don't want to affect the analysis and the model\n",
    "  - future dataset might have higher trip distance values so we need to be able to handle them too to be able to use the same code on future dataset and dynamically handle the outliers\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Floor: 0.0 , Cap: 39.39178560003638\n"
     ]
    }
   ],
   "source": [
    "# we reached to 0.999992 by trial and error\n",
    "floor, cap = floor_cap_quantile(df, 'trip_distance', 0, 0.999992)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "replace_outliers(df, 'trip_distance', floor, cap)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "# we need to fix the trip distane dependent attributes again\n",
    "fix_time_mph_outliers(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " trip_distance skew : 2.655376575294367\n",
      " total_trip_time_hr skew : 2.1647582491532718\n",
      " mph skew : 1.6100858930242317\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_multivariate_analysis(df, ['trip_distance', 'total_trip_time_hr', 'mph'],\n",
    "                           title='Multivariate Analysis for trip_distance, total_trip_time_hr, mph - after handling exceeding outliers , fixing mph')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as you can see how the data skewness decrease and the data seems more reasonable by capping the outliers and smoothing them "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 4: Compute the new dropoff_datetime by adding pickup_datetime and total_trip_deltatime\n",
    "def update_dropoff_datetime(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Compute the new dropoff_datetime by adding pickup_datetime and total_trip_deltatime\n",
    "    \"\"\"\n",
    "    df['lpep_dropoff_datetime'] = df['lpep_pickup_datetime'] + \\\n",
    "        pd.to_timedelta(df['total_trip_deltatime'], unit='s')\n",
    "\n",
    "\n",
    "update_dropoff_datetime(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total_trip_deltatime type: timedelta64[ns]\n",
      "total_trip_time_sec type: float64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_trip_time_hr</th>\n",
       "      <th>total_trip_deltatime</th>\n",
       "      <th>week_number_yearly</th>\n",
       "      <th>week_number_monthly</th>\n",
       "      <th>date_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2,577.96</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0 days 00:42:57.960000</td>\n",
       "      <td>39</td>\n",
       "      <td>3</td>\n",
       "      <td>2016-10-02 to 2016-10-07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   total_trip_time_sec  total_trip_time_hr   total_trip_deltatime  \\\n",
       "0             2,577.96                0.72 0 days 00:42:57.960000   \n",
       "\n",
       "   week_number_yearly  week_number_monthly                date_range  \n",
       "0                  39                    3  2016-10-02 to 2016-10-07  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1728x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# since the outliers are removed, we can calculate the total time again and recalculate the feature engineered columns that depends on it\n",
    "calculate_total_time(df, 'lpep_pickup_datetime', 'lpep_dropoff_datetime')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"trip_distance\" does not contain missing values as NaN.\n",
      "Column \"total_trip_time_hr\" does not contain missing values as NaN.\n",
      "Column \"mph\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "identify_columns_needing_imputation(\n",
    "    df, ['trip_distance', 'total_trip_time_hr', 'mph'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see here we dont have missing values for the trip distance and total_trip_time_hr but we will make impute function in case there is future missing values in the trip distance and total trip time in future data using linear regression\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No data points to impute for trip_distance after filtering\n",
      "No data points to impute for total_trip_time_hr after filtering\n",
      "No data points to impute for mph after filtering\n"
     ]
    }
   ],
   "source": [
    "impute_missing_values_linear_regression(\n",
    "    df, ['trip_distance', 'total_trip_time_hr', 'mph'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 5.4 Q6. why we have trips that have same pickup and dropoff location and date time ? <a id=\"same-pu-do-datetime\"></a>\n",
    "\n",
    "- this might happen because the driver double click the meter activation button by accident or the meter is broken\n",
    "- Drivers may intentionally create duplicate trip records to inflate their earnings. This could be considered fraudulent behavior.\n",
    "- Passengers might request multiple stops during a single trip, which can result in several trip records with the same starting and ending points\n",
    "- trips that was cancelled on the spot\n",
    "- Passenger might have requested a trip and then cancelled it before the driver arrived, resulting in a trip record with the same starting and ending points\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_type</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>do_location</th>\n",
       "      <th>...</th>\n",
       "      <th>total_trip_time_hr</th>\n",
       "      <th>week_number_yearly</th>\n",
       "      <th>week_number_monthly</th>\n",
       "      <th>date_range</th>\n",
       "      <th>pu_location_latitude</th>\n",
       "      <th>pu_location_longitude</th>\n",
       "      <th>do_location_latitude</th>\n",
       "      <th>do_location_longitude</th>\n",
       "      <th>trip_distance_haversine</th>\n",
       "      <th>mph</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>201630</th>\n",
       "      <td>VeriFone Inc.</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Dispatch</td>\n",
       "      <td>0.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>Brooklyn,Prospect-Lefferts Gardens</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>2016-10-09 to 2016-10-12</td>\n",
       "      <td>40.68</td>\n",
       "      <td>-73.96</td>\n",
       "      <td>40.68</td>\n",
       "      <td>-73.96</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               vendor  total_amount  improvement_surcharge  tolls_amount  \\\n",
       "201630  VeriFone Inc.         12.00                   0.00          0.00   \n",
       "\n",
       "        tip_amount  mta_tax trip_type  trip_distance  fare_amount  \\\n",
       "201630        0.00     0.00  Dispatch           0.00        12.00   \n",
       "\n",
       "                               do_location  ... total_trip_time_hr  \\\n",
       "201630  Brooklyn,Prospect-Lefferts Gardens  ...               0.00   \n",
       "\n",
       "       week_number_yearly week_number_monthly                date_range  \\\n",
       "201630                 40                   0  2016-10-09 to 2016-10-12   \n",
       "\n",
       "       pu_location_latitude  pu_location_longitude do_location_latitude  \\\n",
       "201630                40.68                 -73.96                40.68   \n",
       "\n",
       "        do_location_longitude  trip_distance_haversine   mph  \n",
       "201630                 -73.96                     0.00 10.00  \n",
       "\n",
       "[1 rows x 33 columns]"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "same_time_location_df = df[same_time_location_mask]\n",
    "same_time_location_df.sample(1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15474, 1.2353820311551946)"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(same_time_location_df), (len(same_time_location_df) / len(df))*100\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Since they are less than 2% of the data we will just investigate their occurance only becuase they have their reasons and wont consider them neither noise or outliers\n",
    "- as they can play a crucial role in the Root cause analysis\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rate_type</th>\n",
       "      <th>trip_type</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Group ride</th>\n",
       "      <th>Street-hail</th>\n",
       "      <td>3.38</td>\n",
       "      <td>2.50</td>\n",
       "      <td>2.50</td>\n",
       "      <td>5.50</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">JFK</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>52.00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>45.09</td>\n",
       "      <td>52.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>52.00</td>\n",
       "      <td>587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nassau or Westchester</th>\n",
       "      <th>Street-hail</th>\n",
       "      <td>8.08</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>37.00</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Negotiated fare</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>25.40</td>\n",
       "      <td>15.00</td>\n",
       "      <td>-315.00</td>\n",
       "      <td>499.00</td>\n",
       "      <td>5869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>14.70</td>\n",
       "      <td>10.00</td>\n",
       "      <td>-100.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Newark</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>21.00</td>\n",
       "      <td>21.00</td>\n",
       "      <td>21.00</td>\n",
       "      <td>21.00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>19.15</td>\n",
       "      <td>20.00</td>\n",
       "      <td>-20.50</td>\n",
       "      <td>60.50</td>\n",
       "      <td>189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Standard rate</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>2.89</td>\n",
       "      <td>2.50</td>\n",
       "      <td>-2.50</td>\n",
       "      <td>15.00</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>4.40</td>\n",
       "      <td>2.50</td>\n",
       "      <td>-12.00</td>\n",
       "      <td>425.70</td>\n",
       "      <td>8636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unknown</th>\n",
       "      <th>unknown</th>\n",
       "      <td>5.03</td>\n",
       "      <td>6.80</td>\n",
       "      <td>1.00</td>\n",
       "      <td>7.30</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   mean  median     min    max  count\n",
       "rate_type             trip_type                                      \n",
       "Group ride            Street-hail  3.38    2.50    2.50   5.50      8\n",
       "JFK                   Dispatch     0.00    0.00  -52.00  52.00      2\n",
       "                      Street-hail 45.09   52.00  -52.00  52.00    587\n",
       "Nassau or Westchester Street-hail  8.08    2.50    0.00  37.00      6\n",
       "Negotiated fare       Dispatch    25.40   15.00 -315.00 499.00   5869\n",
       "                      Street-hail 14.70   10.00 -100.00 200.00    155\n",
       "Newark                Dispatch    21.00   21.00   21.00  21.00      1\n",
       "                      Street-hail 19.15   20.00  -20.50  60.50    189\n",
       "Standard rate         Dispatch     2.89    2.50   -2.50  15.00     18\n",
       "                      Street-hail  4.40    2.50  -12.00 425.70   8636\n",
       "unknown               unknown      5.03    6.80    1.00   7.30      3"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rate_type</th>\n",
       "      <th>trip_type</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">JFK</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>-52.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>-42.33</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>-52.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nassau or Westchester</th>\n",
       "      <th>Street-hail</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Negotiated fare</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>-24.84</td>\n",
       "      <td>-10.00</td>\n",
       "      <td>-315.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>-4.62</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-100.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Newark</th>\n",
       "      <th>Street-hail</th>\n",
       "      <td>-17.21</td>\n",
       "      <td>-20.00</td>\n",
       "      <td>-20.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Standard rate</th>\n",
       "      <th>Dispatch</th>\n",
       "      <td>-2.50</td>\n",
       "      <td>-2.50</td>\n",
       "      <td>-2.50</td>\n",
       "      <td>-2.50</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>-0.99</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-12.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>823</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    mean  median     min    max  count\n",
       "rate_type             trip_type                                       \n",
       "JFK                   Dispatch    -52.00  -52.00  -52.00 -52.00      1\n",
       "                      Street-hail -42.33  -52.00  -52.00   0.00     43\n",
       "Nassau or Westchester Street-hail   0.00    0.00    0.00   0.00      2\n",
       "Negotiated fare       Dispatch    -24.84  -10.00 -315.00   0.00    237\n",
       "                      Street-hail  -4.62    0.00 -100.00   0.00     48\n",
       "Newark                Street-hail -17.21  -20.00  -20.50   0.00      7\n",
       "Standard rate         Dispatch     -2.50   -2.50   -2.50  -2.50      2\n",
       "                      Street-hail  -0.99    0.00  -12.00   0.00    823"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def same_location_time_analysis(same_time_location_df):\n",
    "    display(same_time_location_df.groupby(['rate_type', 'trip_type'])[\n",
    "            'fare_amount'].aggregate(['mean', 'median', 'min', 'max', 'count']))\n",
    "    display(same_time_location_df[same_time_location_df['fare_amount'] <= 0].groupby(\n",
    "        ['rate_type', 'trip_type'])['fare_amount'].aggregate(['mean', 'median', 'min', 'max', 'count']))\n",
    "\n",
    "\n",
    "same_location_time_analysis(same_time_location_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 14)"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df[(df['rate_type'] == 'Nassau or Westchester') & (df['trip_type'] == 'Dispatch') & (df['fare_amount'] <= 0)]), len(\n",
    "    df[(df['rate_type'] == 'Nassau or Westchester') & (df['trip_type'] == 'Dispatch') & (df['fare_amount'] > 0)])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- most means are positive this indicates that passengers changed there minds after the driver activated the taximeter so they where fined\n",
    "- glitch in the taximeter that caused it not to track time nor distance and the driver didn't notice that\n",
    "- In JFK:\n",
    "  - the Dispatch count was 2 of the taxi it seems it have more restrictive measures with the passengers so they dont lose money\n",
    "  - street-hail have 541 trips that was cancelled on the spot or the driver double click the meter activation button by accident or the meter is broken\n",
    "- In Nassau or Westchester:\n",
    "  - the Dispatch count was 0 of the taxi it seems it have more restrictive measures with the passengers so they dont lose money at all and their system might get rid of the trip that didnt start yet else the passenger pay a fine\n",
    "  - street-hail unstarted rides are not frequent at all which sounds surprising and it might be due to the fact that the passenger pay a fine if he cancelled the trip before it started or system might get rid of the trip that didnt start yet\n",
    "- In Newark:\n",
    "  - the Dispatch count was 1 of the taxi it seems it have more restrictive measures with the passengers so they dont lose money at all and their system might get rid of the trip that didnt start yet else the passenger pay a fine\n",
    "  - street-hail unstarted rides are not frequent at all around 100 which sounds surprising and it might be due to the fact that the passenger pay a fine if he cancelled the trip before it started or system might get rid of the trip that didnt start yet\n",
    "- Negotiated Fare : seemed to have the most unstarted rides which is expected since it is a negotiated fare so the passenger might have changed his mind or the driver might have changed his mind which caused the trip to be cancelled and loss of money\n",
    "- Standard Rate:\n",
    "  - Street-hail have the most frequent counts which indicates that the driver activated then the passenger changed his mind so he fine him and since the mean is positive this indicates most\n",
    "- unknown:\n",
    "  - matched unknown with a count of 3\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.5 Discretize the Trip Distance Attribute <a id=\"discretize-trip-distance\"></a>\n",
    "\n",
    "- we will discretize the trip distance attribute to be able to draw more helpfult insights from it\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bin boundaries: [0.0, 7.8783571200072755, 15.756714240014551, 23.635071360021826, 31.513428480029102, 39.39178560003638]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>trip_distance_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>250636</th>\n",
       "      <td>0.65</td>\n",
       "      <td>Very Short</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        trip_distance trip_distance_bins\n",
       "250636           0.65         Very Short"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def bin_trip_distance(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Bin the trip distance into 5 categories: Very Short, Short, Medium, Long, Very Long\n",
    "    \"\"\"\n",
    "    create_bins(df, 'trip_distance', 'trip_distance_bins', [\n",
    "                'Very Short', 'Short', 'Medium', 'Long', 'Very Long'])\n",
    "    # check\n",
    "    display(df[['trip_distance', 'trip_distance_bins']].sample(1))\n",
    "\n",
    "\n",
    "bin_trip_distance(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 5.6 Encode trip_distance_bins <a id=\"encode-trip-distance-bins\"></a>\n",
    "\n",
    "- we will use label encoding for the trip_distance_bins:\n",
    "  -  because it is ordinal and categorical\n",
    "  -  will be easier to interpret\n",
    "  -  much space efficient than one hot encoding\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Very Short</td>\n",
       "      <td>None</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Encoded trip_distance_bins from Very Short to ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Short</td>\n",
       "      <td>None</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Encoded trip_distance_bins from Short to 1 by ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Medium</td>\n",
       "      <td>None</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Encoded trip_distance_bins from Medium to 2 by...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Long</td>\n",
       "      <td>None</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Encoded trip_distance_bins from Long to 3 by L...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Very Long</td>\n",
       "      <td>None</td>\n",
       "      <td>4.00</td>\n",
       "      <td>Encoded trip_distance_bins from Very Long to 4...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     original imputed  encoded  \\\n",
       "5  Very Short    None     0.00   \n",
       "6       Short    None     1.00   \n",
       "7      Medium    None     2.00   \n",
       "8        Long    None     3.00   \n",
       "9   Very Long    None     4.00   \n",
       "\n",
       "                                             message  \n",
       "5  Encoded trip_distance_bins from Very Short to ...  \n",
       "6  Encoded trip_distance_bins from Short to 1 by ...  \n",
       "7  Encoded trip_distance_bins from Medium to 2 by...  \n",
       "8  Encoded trip_distance_bins from Long to 3 by L...  \n",
       "9  Encoded trip_distance_bins from Very Long to 4...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "label_encode_column(df, 'trip_distance_bins',map={\n",
    "    'Very Short':0,\n",
    "    'Short':1,\n",
    "    'Medium':2,\n",
    "    'Long':3,\n",
    "    'Very Long':4\n",
    "})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.7 Q7. What is the most frequent trip distance range? <a id=\"most-frequent-trip-distance\"></a>\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Very Short    1192126\n",
       "Short           53794\n",
       "Medium           6136\n",
       "Long              471\n",
       "Very Long          41\n",
       "Name: trip_distance_bins, dtype: int64"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'trip_distance_bins')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we can see that the most frequent trip distance range is 0-8.8 miles which is expected since most of the trips are within neighborhoods\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.8 Discretize the records whether they are in rush hours or not <a id=\"discretize-rush-hours\"></a>\n",
    "\n",
    "- we will discretize based on this threshold formula = max count of trips in a specific hour - min count of trips in a specific hour /2\n",
    "- if it exceed the threshold it will be considered a  1 for rush hour else it will be considered a 0 for normal hour\n",
    "- we will need it later for the extra attribute\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bin boundaries: [13774.0, 49560.0, 85346]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>is_rush_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1108355</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>294848</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>422492</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26701</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753480</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         hour is_rush_hour\n",
       "1108355    21            1\n",
       "294848     12            1\n",
       "422492     18            1\n",
       "26701      15            1\n",
       "753480     11            0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def bin_rush_hour(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Bin rush hour and non-rush hour trips based on the number of trips in each hour.\n",
    "    \"\"\"\n",
    "    count_df = df.groupby(df['lpep_pickup_datetime'].dt.hour).size().reset_index(\n",
    "        name='count')['count'].to_dict()\n",
    "    df['count'] = df['lpep_pickup_datetime'].dt.hour.map(count_df)\n",
    "    # bin whether that row in rush hour or not based on counts relative to this hour\n",
    "    create_bins(df, 'count', 'is_rush_hour', [0, 1])\n",
    "    df.drop(columns=['count'], inplace=True)\n",
    "    df['hour'] = df['lpep_pickup_datetime'].dt.hour\n",
    "    display(df[['hour', 'is_rush_hour']].sample(5))\n",
    "    df.drop(columns=['hour'], inplace=True)\n",
    "\n",
    "\n",
    "bin_rush_hour(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.9 Q8. what is the most hour,day,weekend, and weekday that have the most average ,median trip distance and number of trips? <a id=\"trips-period\"></a>\n",
    "\n",
    "- we will investigate the trips with different periods and central tendency methods to get more insights about the data\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----Distribution Of Trip Distance Per Hour -----\n",
      "\n",
      "Maximum mean value (3.9397549982664968) at Hour: 6.0\n",
      "\n",
      "Maximum median value (2.76) at Hour: 6.0\n",
      "\n",
      "Maximum count value (85346) at Hour: 19.0\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53,030.00</td>\n",
       "      <td>2.89</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.11</td>\n",
       "      <td>2.05</td>\n",
       "      <td>3.80</td>\n",
       "      <td>35.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43,326.00</td>\n",
       "      <td>2.86</td>\n",
       "      <td>2.59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>2.03</td>\n",
       "      <td>3.79</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33,385.00</td>\n",
       "      <td>2.92</td>\n",
       "      <td>2.67</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>2.10</td>\n",
       "      <td>3.90</td>\n",
       "      <td>35.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>26,723.00</td>\n",
       "      <td>3.04</td>\n",
       "      <td>2.82</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.13</td>\n",
       "      <td>2.18</td>\n",
       "      <td>4.05</td>\n",
       "      <td>37.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>21,486.00</td>\n",
       "      <td>3.29</td>\n",
       "      <td>3.11</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.17</td>\n",
       "      <td>2.30</td>\n",
       "      <td>4.37</td>\n",
       "      <td>28.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>13,774.00</td>\n",
       "      <td>3.87</td>\n",
       "      <td>3.64</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.28</td>\n",
       "      <td>2.73</td>\n",
       "      <td>5.40</td>\n",
       "      <td>26.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>17,306.00</td>\n",
       "      <td>3.94</td>\n",
       "      <td>3.73</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.31</td>\n",
       "      <td>2.76</td>\n",
       "      <td>5.40</td>\n",
       "      <td>33.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>33,035.00</td>\n",
       "      <td>3.05</td>\n",
       "      <td>3.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.08</td>\n",
       "      <td>1.97</td>\n",
       "      <td>3.98</td>\n",
       "      <td>28.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>48,697.00</td>\n",
       "      <td>2.78</td>\n",
       "      <td>2.82</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.98</td>\n",
       "      <td>1.77</td>\n",
       "      <td>3.55</td>\n",
       "      <td>33.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>50,957.00</td>\n",
       "      <td>2.75</td>\n",
       "      <td>2.77</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.97</td>\n",
       "      <td>1.78</td>\n",
       "      <td>3.52</td>\n",
       "      <td>35.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>48,634.00</td>\n",
       "      <td>2.73</td>\n",
       "      <td>2.74</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.80</td>\n",
       "      <td>3.50</td>\n",
       "      <td>37.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>49,147.00</td>\n",
       "      <td>2.67</td>\n",
       "      <td>2.66</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.76</td>\n",
       "      <td>3.40</td>\n",
       "      <td>38.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>50,312.00</td>\n",
       "      <td>2.66</td>\n",
       "      <td>2.68</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.76</td>\n",
       "      <td>3.35</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>50,831.00</td>\n",
       "      <td>2.67</td>\n",
       "      <td>2.74</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.76</td>\n",
       "      <td>3.32</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>57,584.00</td>\n",
       "      <td>2.64</td>\n",
       "      <td>2.75</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.72</td>\n",
       "      <td>3.23</td>\n",
       "      <td>31.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>62,918.00</td>\n",
       "      <td>2.61</td>\n",
       "      <td>2.74</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.20</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>68,653.00</td>\n",
       "      <td>2.54</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.10</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>78,405.00</td>\n",
       "      <td>2.42</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.66</td>\n",
       "      <td>2.98</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>84,178.00</td>\n",
       "      <td>2.41</td>\n",
       "      <td>2.35</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.67</td>\n",
       "      <td>3.00</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>85,346.00</td>\n",
       "      <td>2.42</td>\n",
       "      <td>2.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.68</td>\n",
       "      <td>3.01</td>\n",
       "      <td>27.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>76,708.00</td>\n",
       "      <td>2.54</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.02</td>\n",
       "      <td>1.75</td>\n",
       "      <td>3.20</td>\n",
       "      <td>35.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>70,842.00</td>\n",
       "      <td>2.64</td>\n",
       "      <td>2.47</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.04</td>\n",
       "      <td>1.80</td>\n",
       "      <td>3.39</td>\n",
       "      <td>33.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>65,859.00</td>\n",
       "      <td>2.81</td>\n",
       "      <td>2.58</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>1.96</td>\n",
       "      <td>3.69</td>\n",
       "      <td>35.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>61,432.00</td>\n",
       "      <td>2.87</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.78</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         count  mean  std  min  25%  50%  75%   max\n",
       "lpep_pickup_datetime                                               \n",
       "0                    53,030.00  2.89 2.63 0.00 1.11 2.05 3.80 35.80\n",
       "1                    43,326.00  2.86 2.59 0.00 1.10 2.03 3.79 39.39\n",
       "2                    33,385.00  2.92 2.67 0.00 1.10 2.10 3.90 35.50\n",
       "3                    26,723.00  3.04 2.82 0.00 1.13 2.18 4.05 37.60\n",
       "4                    21,486.00  3.29 3.11 0.00 1.17 2.30 4.37 28.30\n",
       "5                    13,774.00  3.87 3.64 0.00 1.28 2.73 5.40 26.60\n",
       "6                    17,306.00  3.94 3.73 0.00 1.31 2.76 5.40 33.90\n",
       "7                    33,035.00  3.05 3.01 0.00 1.08 1.97 3.98 28.10\n",
       "8                    48,697.00  2.78 2.82 0.00 0.98 1.77 3.55 33.10\n",
       "9                    50,957.00  2.75 2.77 0.00 0.97 1.78 3.52 35.10\n",
       "10                   48,634.00  2.73 2.74 0.00 1.00 1.80 3.50 37.20\n",
       "11                   49,147.00  2.67 2.66 0.00 1.00 1.76 3.40 38.40\n",
       "12                   50,312.00  2.66 2.68 0.00 1.00 1.76 3.35 39.39\n",
       "13                   50,831.00  2.67 2.74 0.00 1.00 1.76 3.32 39.39\n",
       "14                   57,584.00  2.64 2.75 0.00 1.00 1.72 3.23 31.30\n",
       "15                   62,918.00  2.61 2.74 0.00 1.00 1.70 3.20 39.39\n",
       "16                   68,653.00  2.54 2.63 0.00 1.00 1.70 3.10 39.39\n",
       "17                   78,405.00  2.42 2.40 0.00 1.00 1.66 2.98 39.39\n",
       "18                   84,178.00  2.41 2.35 0.00 1.00 1.67 3.00 39.39\n",
       "19                   85,346.00  2.42 2.30 0.00 1.00 1.68 3.01 27.80\n",
       "20                   76,708.00  2.54 2.40 0.00 1.02 1.75 3.20 35.20\n",
       "21                   70,842.00  2.64 2.47 0.00 1.04 1.80 3.39 33.10\n",
       "22                   65,859.00  2.81 2.58 0.00 1.10 1.96 3.69 35.10\n",
       "23                   61,432.00  2.87 2.63 0.00 1.10 2.00 3.78 39.39"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 648x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_mean_median_count_by_period(df, 'trip_distance', df['lpep_pickup_datetime'].dt.hour, 'lpep_pickup_datetime', 'Hour')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- the data have the correct range of values too from 0 t0 23 hours\n",
    "- we can conclude that the most hour that have on average the longest trip distance is at 6:00\n",
    "- we can conclude that the most hour that have on most frequent trips is at 19:00\n",
    "- we can conclude that the hour that have on a least frequent trips trip distance is at 6:00\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----Distribution Of Trip Distance Per Day -----\n",
      "\n",
      "Maximum mean value (3.0333284125660493) at Day: 2.0\n",
      "\n",
      "Maximum median value (2.1) at Day: 2.0\n",
      "\n",
      "Maximum count value (53161) at Day: 8.0\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50,876.00</td>\n",
       "      <td>2.90</td>\n",
       "      <td>2.79</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>1.98</td>\n",
       "      <td>3.72</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41,636.00</td>\n",
       "      <td>3.03</td>\n",
       "      <td>2.87</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.16</td>\n",
       "      <td>2.10</td>\n",
       "      <td>3.91</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30,983.00</td>\n",
       "      <td>2.69</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.01</td>\n",
       "      <td>1.80</td>\n",
       "      <td>3.40</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>31,039.00</td>\n",
       "      <td>2.61</td>\n",
       "      <td>2.60</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.73</td>\n",
       "      <td>3.27</td>\n",
       "      <td>27.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>35,949.00</td>\n",
       "      <td>2.63</td>\n",
       "      <td>2.68</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.73</td>\n",
       "      <td>3.29</td>\n",
       "      <td>34.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>38,825.00</td>\n",
       "      <td>2.68</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.79</td>\n",
       "      <td>3.40</td>\n",
       "      <td>34.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>44,613.00</td>\n",
       "      <td>2.66</td>\n",
       "      <td>2.64</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.78</td>\n",
       "      <td>3.35</td>\n",
       "      <td>35.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>53,161.00</td>\n",
       "      <td>2.80</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.08</td>\n",
       "      <td>1.90</td>\n",
       "      <td>3.61</td>\n",
       "      <td>29.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>42,916.00</td>\n",
       "      <td>2.87</td>\n",
       "      <td>2.71</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>1.98</td>\n",
       "      <td>3.71</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>28,695.00</td>\n",
       "      <td>2.75</td>\n",
       "      <td>2.72</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.04</td>\n",
       "      <td>1.84</td>\n",
       "      <td>3.47</td>\n",
       "      <td>29.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>33,229.00</td>\n",
       "      <td>2.59</td>\n",
       "      <td>2.62</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.22</td>\n",
       "      <td>30.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>31,784.00</td>\n",
       "      <td>2.68</td>\n",
       "      <td>2.74</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.01</td>\n",
       "      <td>1.76</td>\n",
       "      <td>3.31</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>38,542.00</td>\n",
       "      <td>2.62</td>\n",
       "      <td>2.61</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.74</td>\n",
       "      <td>3.30</td>\n",
       "      <td>28.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>44,966.00</td>\n",
       "      <td>2.61</td>\n",
       "      <td>2.59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.74</td>\n",
       "      <td>3.28</td>\n",
       "      <td>37.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>51,664.00</td>\n",
       "      <td>2.80</td>\n",
       "      <td>2.62</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>1.95</td>\n",
       "      <td>3.62</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>42,090.00</td>\n",
       "      <td>2.92</td>\n",
       "      <td>2.75</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.15</td>\n",
       "      <td>2.03</td>\n",
       "      <td>3.74</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>31,799.00</td>\n",
       "      <td>2.68</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.78</td>\n",
       "      <td>3.37</td>\n",
       "      <td>28.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>33,411.00</td>\n",
       "      <td>2.64</td>\n",
       "      <td>2.61</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.80</td>\n",
       "      <td>3.30</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>35,911.00</td>\n",
       "      <td>2.63</td>\n",
       "      <td>2.61</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.74</td>\n",
       "      <td>3.30</td>\n",
       "      <td>27.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>39,205.00</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.01</td>\n",
       "      <td>1.78</td>\n",
       "      <td>3.32</td>\n",
       "      <td>33.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>46,276.00</td>\n",
       "      <td>2.57</td>\n",
       "      <td>2.57</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.22</td>\n",
       "      <td>37.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>52,159.00</td>\n",
       "      <td>2.72</td>\n",
       "      <td>2.62</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.03</td>\n",
       "      <td>1.84</td>\n",
       "      <td>3.50</td>\n",
       "      <td>37.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>41,259.00</td>\n",
       "      <td>2.87</td>\n",
       "      <td>2.72</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.71</td>\n",
       "      <td>35.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>32,843.00</td>\n",
       "      <td>2.60</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.24</td>\n",
       "      <td>35.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>35,733.00</td>\n",
       "      <td>2.58</td>\n",
       "      <td>2.61</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.21</td>\n",
       "      <td>35.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>37,347.00</td>\n",
       "      <td>2.53</td>\n",
       "      <td>2.52</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.98</td>\n",
       "      <td>1.68</td>\n",
       "      <td>3.18</td>\n",
       "      <td>31.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>42,928.00</td>\n",
       "      <td>2.43</td>\n",
       "      <td>2.53</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.91</td>\n",
       "      <td>1.59</td>\n",
       "      <td>3.00</td>\n",
       "      <td>31.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>46,910.00</td>\n",
       "      <td>2.55</td>\n",
       "      <td>2.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.98</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.20</td>\n",
       "      <td>35.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>52,386.00</td>\n",
       "      <td>2.83</td>\n",
       "      <td>2.64</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.10</td>\n",
       "      <td>1.96</td>\n",
       "      <td>3.67</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>47,706.00</td>\n",
       "      <td>2.94</td>\n",
       "      <td>2.77</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.11</td>\n",
       "      <td>2.04</td>\n",
       "      <td>3.80</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>35,727.00</td>\n",
       "      <td>2.56</td>\n",
       "      <td>2.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.20</td>\n",
       "      <td>29.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         count  mean  std  min  25%  50%  75%   max\n",
       "lpep_pickup_datetime                                               \n",
       "1                    50,876.00  2.90 2.79 0.00 1.10 1.98 3.72 39.39\n",
       "2                    41,636.00  3.03 2.87 0.00 1.16 2.10 3.91 39.39\n",
       "3                    30,983.00  2.69 2.69 0.00 1.01 1.80 3.40 39.39\n",
       "4                    31,039.00  2.61 2.60 0.00 1.00 1.73 3.27 27.20\n",
       "5                    35,949.00  2.63 2.68 0.00 1.00 1.73 3.29 34.80\n",
       "6                    38,825.00  2.68 2.69 0.00 1.00 1.79 3.40 34.10\n",
       "7                    44,613.00  2.66 2.64 0.00 1.00 1.78 3.35 35.20\n",
       "8                    53,161.00  2.80 2.69 0.00 1.08 1.90 3.61 29.50\n",
       "9                    42,916.00  2.87 2.71 0.00 1.10 1.98 3.71 39.39\n",
       "10                   28,695.00  2.75 2.72 0.00 1.04 1.84 3.47 29.50\n",
       "11                   33,229.00  2.59 2.62 0.00 1.00 1.70 3.22 30.80\n",
       "12                   31,784.00  2.68 2.74 0.00 1.01 1.76 3.31 39.39\n",
       "13                   38,542.00  2.62 2.61 0.00 1.00 1.74 3.30 28.80\n",
       "14                   44,966.00  2.61 2.59 0.00 1.00 1.74 3.28 37.60\n",
       "15                   51,664.00  2.80 2.62 0.00 1.10 1.95 3.62 39.39\n",
       "16                   42,090.00  2.92 2.75 0.00 1.15 2.03 3.74 39.39\n",
       "17                   31,799.00  2.68 2.69 0.00 1.00 1.78 3.37 28.10\n",
       "18                   33,411.00  2.64 2.61 0.00 1.00 1.80 3.30 39.39\n",
       "19                   35,911.00  2.63 2.61 0.00 1.00 1.74 3.30 27.60\n",
       "20                   39,205.00  2.65 2.63 0.00 1.01 1.78 3.32 33.80\n",
       "21                   46,276.00  2.57 2.57 0.00 0.99 1.70 3.22 37.20\n",
       "22                   52,159.00  2.72 2.62 0.00 1.03 1.84 3.50 37.00\n",
       "23                   41,259.00  2.87 2.72 0.00 1.10 2.00 3.71 35.10\n",
       "24                   32,843.00  2.60 2.63 0.00 1.00 1.70 3.24 35.80\n",
       "25                   35,733.00  2.58 2.61 0.00 0.99 1.70 3.21 35.20\n",
       "26                   37,347.00  2.53 2.52 0.00 0.98 1.68 3.18 31.70\n",
       "27                   42,928.00  2.43 2.53 0.00 0.91 1.59 3.00 31.40\n",
       "28                   46,910.00  2.55 2.54 0.00 0.98 1.70 3.20 35.10\n",
       "29                   52,386.00  2.83 2.64 0.00 1.10 1.96 3.67 39.39\n",
       "30                   47,706.00  2.94 2.77 0.00 1.11 2.04 3.80 39.39\n",
       "31                   35,727.00  2.56 2.54 0.00 0.99 1.70 3.20 29.80"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 648x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_mean_median_count_by_period(df, 'trip_distance', df['lpep_pickup_datetime'].dt.day, 'lpep_pickup_datetime', 'Day')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- the data have the correct range of values too from 1 t0 31 days\n",
    "- we can conclude that days through the week have the same trend of trip distance and number of trips ( so we might investigate the weekdays vs the weekends to determine the spikes in the plots nature)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----Distribution Of Trip Distance Per Weekday -----\n",
      "\n",
      "Maximum mean value (2.651425779837173) at Weekday: Monday\n",
      "\n",
      "Maximum median value (1.76) at Weekday: Monday\n",
      "\n",
      "Maximum count value (182765) at Weekday: Friday\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Friday</th>\n",
       "      <td>182,765.00</td>\n",
       "      <td>2.60</td>\n",
       "      <td>2.59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.72</td>\n",
       "      <td>3.27</td>\n",
       "      <td>37.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monday</th>\n",
       "      <td>160,047.00</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.65</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.76</td>\n",
       "      <td>3.32</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thursday</th>\n",
       "      <td>159,500.00</td>\n",
       "      <td>2.59</td>\n",
       "      <td>2.62</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.70</td>\n",
       "      <td>3.25</td>\n",
       "      <td>34.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tuesday</th>\n",
       "      <td>133,416.00</td>\n",
       "      <td>2.60</td>\n",
       "      <td>2.61</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.72</td>\n",
       "      <td>3.26</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wednesday</th>\n",
       "      <td>140,991.00</td>\n",
       "      <td>2.61</td>\n",
       "      <td>2.63</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.72</td>\n",
       "      <td>3.27</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          count  mean  std  min  25%  50%  75%   max\n",
       "lpep_pickup_datetime                                                \n",
       "Friday               182,765.00  2.60 2.59 0.00 1.00 1.72 3.27 37.60\n",
       "Monday               160,047.00  2.65 2.65 0.00 1.00 1.76 3.32 39.39\n",
       "Thursday             159,500.00  2.59 2.62 0.00 0.99 1.70 3.25 34.10\n",
       "Tuesday              133,416.00  2.60 2.61 0.00 1.00 1.72 3.26 39.39\n",
       "Wednesday            140,991.00  2.61 2.63 0.00 1.00 1.72 3.27 39.39"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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hG6bxMRE5b333lM6deqkNGnSROnevbty5MgRRVEUJSUlRfnoo4+Uzp07K35+fsqAAQOUffv2larsL7/8suLl5aW8+uqriqIoSkZGhvL5558rISEhSvPmzZU+ffroPkN3xzxs2DClcePGRb6+kydPVry8vJSPP/5YURRFmTZtmuLr66t07dpVGTBggKIoirJ8+XLFy8tLefrppxVFyf+M/vjjj0r37t2V5s2bKz169FAWLVpUaL+LFy9WevXqpfj5+SmPP/648t133yk5OTmKovz3fih4L23cuFHx9fVVAgIClJMnTyparVaZPn268thjjynt27dXli1bpnu9Cp7z+71mH374oeLl5aXMmTNHF89HH32keHl5Kd99912xz/ujJCMjQwkICFC8vLyU0aNHK3l5ebp18fHxSlZWlqIoJddPd9fLxX32n3nmGeXTTz9VWrZsqQQFBek++8XV13e7deuW4u/vr3h5eSlfffWVbvm2bdt0j4uMjNQd/86/JUuWFPs8bNy48Z46+c6YP/74Y8XPz0+ZMWPGPe/bO+vz2bNnKwEBAUpQUJDy008/FXu8gn307t1btywqKkpp3Lixrp4v6nlMSEhQhg8frrRq1Upp2rSp0rVrV+Wbb74p9P11519CQoKyfPlypUePHoqfn5/SuHFjpWvXrspvv/2mO+6d9fe7776r+Pn5KSEhIcrOnTt121y/fl2ZNGmS7rs2ODhYiYiIUBSl5DpIn7JPnDhR8fLyUsLCwhRFKbluKe47524F31cvvPCCoiiK8ttvvyleXl7KE088oQQGBiqKoij79u1TvLy8lHbt2uked796S1EUZdOmTcpTTz2l+Pv7K506dVKmTp2qy1Hu/n4/dOiQ4ufnpzRr1kzZsWOHLo4OHToobdq0UX788cd78p/7vWazZ8/W1ekFvv/+e8XLy0sZN25csc97gUpxSvduJiYmvPbaawCkpqZy8ODBe7aJj49n6tSppKWl0bdvXwIDA7l06RJXrlwhMDAQT09PoPhm8enTp9OhQ4cSs/oZM2bQsmVLTE1NWbJkCdOnT9erDN26dcPJyQm4/ynH5ORkBg8ezI4dO/Dz86NRo0Zs2bKFIUOGcOPGjULbzpo1C29vb8zNzfnnn3+YO3dukcfetWsXWq0WU1NT+vbtq1ver18/TE1NycvLY/fu3UU+T87OznqV727r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",
      "text/plain": [
       "<Figure size 648x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filter for weekdays (Monday to Friday)\n",
    "weekday_data = df[~df['lpep_pickup_datetime'].dt.weekday.isin(\n",
    "    [5, 6])]['lpep_pickup_datetime'].dt.weekday.map(DAY_NAME_MAPPING)\n",
    "\n",
    "plot_mean_median_count_by_period(\n",
    "    df, 'trip_distance', weekday_data, 'lpep_pickup_datetime', 'Weekday')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- the data have the correct range of values too from 0 t0 4 days which is Monday to Friday\n",
    "- we can conclude that Weekdays have declining trend of number of trips and inclining when it approaches weekends"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----Distribution Of Trip Distance Per Weekend -----\n",
      "\n",
      "Maximum mean value (2.9283359869688836) at Weekend: Sunday\n",
      "\n",
      "Maximum median value (2.02) at Weekend: Sunday\n",
      "\n",
      "Maximum count value (260242) at Weekend: Saturday\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Saturday</th>\n",
       "      <td>260,242.00</td>\n",
       "      <td>2.81</td>\n",
       "      <td>2.67</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.09</td>\n",
       "      <td>1.92</td>\n",
       "      <td>3.62</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sunday</th>\n",
       "      <td>215,607.00</td>\n",
       "      <td>2.93</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.12</td>\n",
       "      <td>2.02</td>\n",
       "      <td>3.79</td>\n",
       "      <td>39.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          count  mean  std  min  25%  50%  75%   max\n",
       "lpep_pickup_datetime                                                \n",
       "Saturday             260,242.00  2.81 2.67 0.00 1.09 1.92 3.62 39.39\n",
       "Sunday               215,607.00  2.93 2.76 0.00 1.12 2.02 3.79 39.39"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 648x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Filter for weekends (Saturday and Sunday)\n",
    "weekend_data = df[df['lpep_pickup_datetime'].dt.weekday.isin(\n",
    "    [5, 6])]['lpep_pickup_datetime'].dt.weekday.map(DAY_NAME_MAPPING)\n",
    "\n",
    "plot_mean_median_count_by_period(\n",
    "    df, 'trip_distance', weekend_data, 'lpep_pickup_datetime', 'Weekend')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- so it appears that the spike of number of trips comes from last day of the week days (friday) and the first day of the weekends (saturday) this means that the most frequent trips are in the weekends\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Encode the do_location and pu_location <a id=\"encode-do-pu-location\"></a>\n",
    "- - we reformat the string to make it more standardized and consistent (we will make it here because earlier the gps coordinates were not extracted yet and title format will be easier to extract the gps coordinates but now i need to unify them more to encode better)\n",
    "- we will use label encoding for this attribute because :\n",
    "  - making it space-efficient compared to one-hot encoding, which creates binary columns for each category.\n",
    "  - we need to ensure that the encoded values in pu_location and do_location are consistent with each other, so we will use the same encoding for both columns.\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "LOCATION_LOOKUP_TABLE = {}\n",
    "\n",
    "\n",
    "def encode_location(df, prefix: str = ENCODED_PREFIX):\n",
    "    \"\"\"\n",
    "    Encode the location columns using a lookup table.\n",
    "    \"\"\"\n",
    "    # unique locations\n",
    "    unique_locations = set()\n",
    "    \n",
    "    # reformat strings if theres duplicates and make it more standardized by regex\n",
    "    for location_col_name in LOCATION_COLUMNS:\n",
    "        df[location_col_name] = df[location_col_name].apply(format_string)\n",
    "        \n",
    "    # get unique locations\n",
    "    for location_col_name in LOCATION_COLUMNS:\n",
    "        unique_locations.update(df[location_col_name].dropna().unique())\n",
    "        \n",
    "    LOCATION_LOOKUP_TABLE['unknown'] = -1\n",
    "    unique_locations.remove('unknown')\n",
    "    # Create a lookup table\n",
    "    for i, location in enumerate(unique_locations):\n",
    "        \n",
    "        LOCATION_LOOKUP_TABLE[location] = i\n",
    "        insert_to_lookup_table(prefix + 'location', location, None,\n",
    "                               i, f\"Encoded {location_col_name} from {location} to {i}\")\n",
    "    # Encode the location columns\n",
    "    for location_col_name in LOCATION_COLUMNS:\n",
    "        df[prefix +\n",
    "            location_col_name] = df[location_col_name].map(LOCATION_LOOKUP_TABLE)\n",
    "\n",
    "\n",
    "encode_location(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>do_location</th>\n",
       "      <th>pu_location</th>\n",
       "      <th>encoded_do_location</th>\n",
       "      <th>encoded_pu_location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>250152</th>\n",
       "      <td>manhattan,morningside heights</td>\n",
       "      <td>manhattan,morningside heights</td>\n",
       "      <td>104</td>\n",
       "      <td>104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1033918</th>\n",
       "      <td>manhattan,morningside heights</td>\n",
       "      <td>manhattan,morningside heights</td>\n",
       "      <td>104</td>\n",
       "      <td>104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199544</th>\n",
       "      <td>queens,jackson heights</td>\n",
       "      <td>queens,jackson heights</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258906</th>\n",
       "      <td>manhattan,east harlem north</td>\n",
       "      <td>manhattan,east harlem north</td>\n",
       "      <td>224</td>\n",
       "      <td>224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414933</th>\n",
       "      <td>queens,jackson heights</td>\n",
       "      <td>queens,jackson heights</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           do_location                    pu_location  \\\n",
       "250152   manhattan,morningside heights  manhattan,morningside heights   \n",
       "1033918  manhattan,morningside heights  manhattan,morningside heights   \n",
       "199544          queens,jackson heights         queens,jackson heights   \n",
       "258906     manhattan,east harlem north    manhattan,east harlem north   \n",
       "414933          queens,jackson heights         queens,jackson heights   \n",
       "\n",
       "         encoded_do_location  encoded_pu_location  \n",
       "250152                   104                  104  \n",
       "1033918                  104                  104  \n",
       "199544                   250                  250  \n",
       "258906                   224                  224  \n",
       "414933                   250                  250  "
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['pu_location'] == df['do_location']][['do_location', 'pu_location',\n",
    "                                            'encoded_do_location', 'encoded_pu_location']].sample(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 5 saved.\n",
      "7 fixed columns saved out of 18 total original columns.\n",
      "19 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'fare_amount', 'rate_type', 'passenger_count', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_5.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(\n",
    "    df, ['trip_distance', 'pu_location', 'do_location', 'lpep_dropoff_datetime'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. Passenger Count Relationship with other columns and Investigating (MCAR) - **Checkpoint 6**<a id=\"passenger-count\"></a>\n",
    "\n",
    "- first we will see if passenger count column have a relationship with another column , possible candidates are :\n",
    "  - trip distance\n",
    "  - rate_type\n",
    "  - trip_type\n",
    "  - payment_type\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 5...\n",
      "Failed to convert passenger_count to int64\n",
      "Cannot convert non-finite values (NA or inf) to integer\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,361.00\n",
       "mean            1.36\n",
       "std             1.22\n",
       "min             1.00\n",
       "25%             1.00\n",
       "50%             1.00\n",
       "75%             1.00\n",
       "max           333.00\n",
       "Name: passenger_count, dtype: float64"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['passenger_count'].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x576 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_columns_relationship(df, 'passenger_count', [(\n",
    "    'trip_type', 'count'), ('rate_type', 'count'), ('payment_type', 'count')])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- the plot is not clear so we need to clean it from the noise first\n",
    "- as we can see the passenger_count contains unrealistic values that we will consider as Noise by taking the first number ex : 534 => 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"passenger_count\"  207 contains missing values as NaN which is 0.016526048885170307%.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column</th>\n",
       "      <th>missing_values_unknown</th>\n",
       "      <th>missing_values_unknown_%</th>\n",
       "      <th>missing_values_nan</th>\n",
       "      <th>missing_values_nan_%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>passenger_count</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>207</td>\n",
       "      <td>0.02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            column  missing_values_unknown  missing_values_unknown_%  \\\n",
       "0  passenger_count                       0                      0.00   \n",
       "\n",
       "   missing_values_nan  missing_values_nan_%  \n",
       "0                 207                  0.02  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df, ['passenger_count'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 6.1 Why passenger_count Missing Completly at Random <a href=\"#MCAR\">MCAR</a> : <a id=\"passenger-count-MCAR\"></a>\n",
    "  - because there is no pattern in the missing values of the passenger count and it is not related to any other attribute\n",
    "  - most probably the driver didn't enter the passenger count or the passenger didn't enter the passenger count\n",
    "\n",
    "#### How we will impute the passenger count ? <a id=\"passenger-count-impute\"></a>\n",
    "- by using the mode which is 1 by insights and common sense\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we saw that the passenger count relationship with other categorical attributes in terms of count is that passenger_count of 1 is the most frequent in all the categorical attributes so we can use it to impute the passenger count\n",
    "- if still value passes the upper bound which is 6 we will upper cap it with upper bound 6\n",
    "- if still value passes the lower bound which is 1 we will lower cap it with lower bound 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean            1.36\n",
       "std             1.02\n",
       "min             1.00\n",
       "25%             1.00\n",
       "50%             1.00\n",
       "75%             1.00\n",
       "max             6.00\n",
       "Name: passenger_count, dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def fix_passenger_count(df: pd.DataFrame, col_name: str, upper_bound=6, lower_bound=1):\n",
    "    \"\"\"\n",
    "    Fix the passenger_count column:\n",
    "      - Extract the first digit.\n",
    "      - Replace values greater than the upper bound with the upper bound.\n",
    "      - Handle NaN, None, and zero values by setting them to the lower_bound.\n",
    "    \"\"\"\n",
    "    def calc_digit(x):\n",
    "        return max(min(int(str(int(x))[0]) if not pd.isna(x) and str(int(x)).isdigit() else lower_bound, upper_bound), lower_bound)\n",
    "\n",
    "    df[col_name] = df[col_name].apply(calc_digit)\n",
    "\n",
    "    # Convert the passenger_count column to an integer data type\n",
    "    df[col_name] = df[col_name].astype('int64')\n",
    "\n",
    "    # Display summary statistics\n",
    "    display(df[col_name].describe())\n",
    "\n",
    "\n",
    "fix_passenger_count(df, 'passenger_count')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x576 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_columns_relationship(df, 'passenger_count', [(\n",
    "    'trip_type', 'count'), ('rate_type', 'count'), ('payment_type', 'count')])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- now the plot is much clearer and we can draw insights from it\n",
    "- we can see that the most frequent passenger count is 1\n",
    "- they are more related with the rate_type being standard rate\n",
    "- they are more related with the trip_type being street-hail\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"passenger_count\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "# re-check for missing values\n",
    "identify_columns_needing_imputation(df, ['passenger_count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 6 saved.\n",
      "8 fixed columns saved out of 18 total original columns.\n",
      "19 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'fare_amount', 'rate_type', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_6.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, ['passenger_count'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Rate Type Analysis- **Checkpoint 7**<a id=\"rate_type\"></a>\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 6...\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"rate_type\" contains 3 missing values as a string which is 0.00023950795485754066%.\n",
      "Column \"rate_type\" does not contain missing values as NaN.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column</th>\n",
       "      <th>missing_values_unknown</th>\n",
       "      <th>missing_values_unknown_%</th>\n",
       "      <th>missing_values_nan</th>\n",
       "      <th>missing_values_nan_%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>rate_type</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      column  missing_values_unknown  missing_values_unknown_%  \\\n",
       "0  rate_type                       3                      0.00   \n",
       "\n",
       "   missing_values_nan  missing_values_nan_%  \n",
       "0                   0                  0.00  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df, ['rate_type'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Standard rate            1222167\n",
       "Negotiated fare            25576\n",
       "JFK                         3089\n",
       "Newark                       951\n",
       "Nassau or Westchester        760\n",
       "Group ride                    22\n",
       "unknown                        3\n",
       "Name: rate_type, dtype: int64"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'rate_type')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 7.1 Why rate_type <a href=\"#MCAR\">MCAR</a> ? <a id=\"rate-type-MCAR\"></a>\n",
    "\n",
    "- I believe that rate_type can't be unknown because a vendor must have setted the categroies of rate_type previously so unknown meaning is NA meaning so (MCAR):\n",
    "  - so most probably it was a glitch in the system\n",
    "- plus I dont want to account for unknown as a column in one-hot encoding\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [],
   "source": [
    "def replace_with(df, col_name: str, method: str, original='unknown', replacement_value=None):\n",
    "    if method == 'mode':\n",
    "        value = df[col_name].mode().iloc[0]  # Get the mode value\n",
    "        if pd.isna(value):\n",
    "            print(f\"No mode for {col_name}\")\n",
    "            return\n",
    "        replacement_value = value\n",
    "    df[col_name] = df[col_name].replace(original, replacement_value)\n",
    "\n",
    "\n",
    "replace_with(df, 'rate_type', 'mode')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Standard rate            1222170\n",
       "Negotiated fare            25576\n",
       "JFK                         3089\n",
       "Newark                       951\n",
       "Nassau or Westchester        760\n",
       "Group ride                    22\n",
       "Name: rate_type, dtype: int64"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'rate_type')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x576 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_columns_relationship(df, 'rate_type', [(\n",
    "    'passenger_count', 'count'), ('payment_type', 'count'), ('vendor', 'count')])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 7.2 Rate type Encoding <a id=\"rate-type-encode\"></a>\n",
    "\n",
    "- One hot encoding will be good but not optimal due to 6 columns will be created:\n",
    "  - No Ordinal Relationship\n",
    "  - Model Compatibility\n",
    "  - Low Cardinality\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>encoded_rate_type_Group ride</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_Group ride</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>encoded_rate_type_JFK</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_JFK</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>encoded_rate_type_Nassau or Westchester</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_Nassau or Westchester</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>encoded_rate_type_Negotiated fare</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_Negotiated fare</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>encoded_rate_type_Newark</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_Newark</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>encoded_rate_type_Standard rate</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_rate_type_Standard rate</td>\n",
       "      <td>One-Hot Encoded rate_type from column rate_typ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  original imputed  \\\n",
       "0             encoded_rate_type_Group ride    None   \n",
       "1                    encoded_rate_type_JFK    None   \n",
       "2  encoded_rate_type_Nassau or Westchester    None   \n",
       "3        encoded_rate_type_Negotiated fare    None   \n",
       "4                 encoded_rate_type_Newark    None   \n",
       "5          encoded_rate_type_Standard rate    None   \n",
       "\n",
       "                                   encoded  \\\n",
       "0             encoded_rate_type_Group ride   \n",
       "1                    encoded_rate_type_JFK   \n",
       "2  encoded_rate_type_Nassau or Westchester   \n",
       "3        encoded_rate_type_Negotiated fare   \n",
       "4                 encoded_rate_type_Newark   \n",
       "5          encoded_rate_type_Standard rate   \n",
       "\n",
       "                                             message  \n",
       "0  One-Hot Encoded rate_type from column rate_typ...  \n",
       "1  One-Hot Encoded rate_type from column rate_typ...  \n",
       "2  One-Hot Encoded rate_type from column rate_typ...  \n",
       "3  One-Hot Encoded rate_type from column rate_typ...  \n",
       "4  One-Hot Encoded rate_type from column rate_typ...  \n",
       "5  One-Hot Encoded rate_type from column rate_typ...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = one_hot_encode_column(df, 'rate_type')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 7.3 Discretize rate types into 3 trip categories <a id=\"rate-type-discretize\"></a>\n",
    "\n",
    "- by binning them to their appropriate categories after research I found the following :\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [],
   "source": [
    "def categorize_trips(row:pd.Series):\n",
    "    \"\"\"\n",
    "    here we categorize the trips into 3 categories based on the rate type\n",
    "    \"\"\"\n",
    "    if row['rate_type'] in ['JFK', 'Newark']:\n",
    "        return 'airport_trips'\n",
    "    elif row['rate_type'] in ['Negotiated fare', 'Nassau or Westchester']:\n",
    "        return 'outside_NYC_trips'\n",
    "    elif row['rate_type'] in ['Group ride', 'Standard rate']:\n",
    "        return 'inside_NYC_trips'\n",
    "    else:\n",
    "        return 'other'\n",
    "\n",
    "\n",
    "df['trip_category'] = df.apply(categorize_trips, axis=1)\n",
    "feature_engineer(\n",
    "    'trip_category', 'trip category is categorized into 3 columns', df['trip_category'].dtype)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 7.4 Trip Category Encoding <a id=\"trip-category-encoding\"></a>\n",
    "- we will use one hot encoding for this attribute because :\n",
    "  - it is a categorical attribute\n",
    "  - it is not ordinal\n",
    "  - it wont cause large memory space becuse it will result with 3 columns\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>encoded_trip_category_airport_trips</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_trip_category_airport_trips</td>\n",
       "      <td>One-Hot Encoded trip_category from column trip...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>encoded_trip_category_inside_NYC_trips</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_trip_category_inside_NYC_trips</td>\n",
       "      <td>One-Hot Encoded trip_category from column trip...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>encoded_trip_category_outside_NYC_trips</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_trip_category_outside_NYC_trips</td>\n",
       "      <td>One-Hot Encoded trip_category from column trip...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  original imputed  \\\n",
       "0      encoded_trip_category_airport_trips    None   \n",
       "1   encoded_trip_category_inside_NYC_trips    None   \n",
       "2  encoded_trip_category_outside_NYC_trips    None   \n",
       "\n",
       "                                   encoded  \\\n",
       "0      encoded_trip_category_airport_trips   \n",
       "1   encoded_trip_category_inside_NYC_trips   \n",
       "2  encoded_trip_category_outside_NYC_trips   \n",
       "\n",
       "                                             message  \n",
       "0  One-Hot Encoded trip_category from column trip...  \n",
       "1  One-Hot Encoded trip_category from column trip...  \n",
       "2  One-Hot Encoded trip_category from column trip...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = one_hot_encode_column(df, 'trip_category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "inside_NYC_trips     1222192\n",
       "outside_NYC_trips      26336\n",
       "airport_trips           4040\n",
       "Name: trip_category, dtype: int64"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'trip_category')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see from the above table  that there was 26336 outside_NYC_trips  \n",
    "  - this tells the unknowns in the pu_location and do_location are outside NYC     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 7 saved.\n",
      "9 fixed columns saved out of 18 total original columns.\n",
      "20 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'trip_type', 'fare_amount', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_7.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, ['rate_type'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8. Trip Type - **Checkpoint 8** <a id=\"trip-type\"></a>\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 7...\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Street-hail    1226972\n",
       "Dispatch         25593\n",
       "unknown              3\n",
       "Name: trip_type, dtype: int64"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'trip_type')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 8.1 Why trip_type <a href=\"MCAR\">(MCAR)</a> ? <a id=\"trip-type-MCAR\"></a>\n",
    "\n",
    "- I believe that rate_type can't be unknown because a vendor must have setted the categroies of trip_type previously so unknown meaning is NA meaning so (MCAR):\n",
    "  - so most probably it was a glitch in the system\n",
    "- plus I dont want to account for unknown as a column in one-hot encoding\n",
    "\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [],
   "source": [
    "replace_with(df, 'trip_type', 'mode')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Street-hail    1226975\n",
       "Dispatch         25593\n",
       "Name: trip_type, dtype: int64"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_value_counts(df, 'trip_type')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Street-hail is Significantlt Dominant 1226975 in any other insight that we wish to draw Street-hail will win so it is un necessary to do so.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 8.2 Trip type Encoding <a id=\"trip-type-encode\"></a>\n",
    "\n",
    "- One hot encoding will be optimal due to 2 columns will be created not memory intensive:\n",
    "  - No Ordinal Relationship\n",
    "  - Model Compatibility\n",
    "  - Low Cardinality\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>original</th>\n",
       "      <th>imputed</th>\n",
       "      <th>encoded</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>encoded_trip_type_Dispatch</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_trip_type_Dispatch</td>\n",
       "      <td>One-Hot Encoded trip_type from column trip_typ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>encoded_trip_type_Street-hail</td>\n",
       "      <td>None</td>\n",
       "      <td>encoded_trip_type_Street-hail</td>\n",
       "      <td>One-Hot Encoded trip_type from column trip_typ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        original imputed                        encoded  \\\n",
       "0     encoded_trip_type_Dispatch    None     encoded_trip_type_Dispatch   \n",
       "1  encoded_trip_type_Street-hail    None  encoded_trip_type_Street-hail   \n",
       "\n",
       "                                             message  \n",
       "0  One-Hot Encoded trip_type from column trip_typ...  \n",
       "1  One-Hot Encoded trip_type from column trip_typ...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = one_hot_encode_column(df, 'trip_type')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checkpoint 8 saved.\n",
      "10 fixed columns saved out of 18 total original columns.\n",
      "20 featured engineered columns saved.\n",
      "Missing columns to investigate are : ['total_amount', 'improvement_surcharge', 'tolls_amount', 'tip_amount', 'mta_tax', 'fare_amount', 'payment_type', 'extra']\n",
      "DataFrame saved to csv file: ./Checkpoints/checkpoint_8.csv\n"
     ]
    }
   ],
   "source": [
    "df = save_checkpoint(df, ['trip_type'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 9. Total Amount Relationship with other numerical columns and Investigating - **Checkpoint 9**<a id=\"total-amount\"></a>\n",
    "\n",
    "- NYC cabs are metered, providing services charged via a taximeter based on the traversed distance and the trip's duration. Explicitly their tariffs are formed as follows: the initial fare is 2.50$/2.50€ based on [NYC Caps website](https://new-york-jfk-airport.com/transportation/nyc-taxis/#:~:text=NYC%20Taxi%20Fares,is%202.50%24%2F2.50%E2%82%AC.).\n",
    "- first we will see if Total Amount column have a relationship with another column , possible candidates are :\n",
    "\n",
    "<p align=\"right\"><a href=\"#table-of-content\">Go To Top</a></p>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading checkpoint 8...\n"
     ]
    }
   ],
   "source": [
    "df = load_checkpoint(8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>extra</th>\n",
       "      <th>encoded_vendor_Creative Mobile Technologies, LLC</th>\n",
       "      <th>...</th>\n",
       "      <th>encoded_rate_type_JFK</th>\n",
       "      <th>encoded_rate_type_Nassau or Westchester</th>\n",
       "      <th>encoded_rate_type_Negotiated fare</th>\n",
       "      <th>encoded_rate_type_Newark</th>\n",
       "      <th>encoded_rate_type_Standard rate</th>\n",
       "      <th>encoded_trip_category_airport_trips</th>\n",
       "      <th>encoded_trip_category_inside_NYC_trips</th>\n",
       "      <th>encoded_trip_category_outside_NYC_trips</th>\n",
       "      <th>encoded_trip_type_Dispatch</th>\n",
       "      <th>encoded_trip_type_Street-hail</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>6.51</td>\n",
       "      <td>15.00</td>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>69.13</td>\n",
       "      <td>0.30</td>\n",
       "      <td>5.54</td>\n",
       "      <td>3.29</td>\n",
       "      <td>0.50</td>\n",
       "      <td>22.30</td>\n",
       "      <td>59.50</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.85</td>\n",
       "      <td>8.50</td>\n",
       "      <td>1</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10.80</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.50</td>\n",
       "      <td>2.47</td>\n",
       "      <td>9.50</td>\n",
       "      <td>1</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17.25</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.45</td>\n",
       "      <td>0.50</td>\n",
       "      <td>3.49</td>\n",
       "      <td>12.50</td>\n",
       "      <td>1</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   total_amount  improvement_surcharge  tolls_amount  tip_amount  mta_tax  \\\n",
       "0         15.30                   0.30          0.00        0.00     0.00   \n",
       "1         69.13                   0.30          5.54        3.29     0.50   \n",
       "2          9.80                   0.30          0.00        0.00     0.50   \n",
       "3         10.80                   0.30          0.00        0.00     0.50   \n",
       "4         17.25                   0.30          0.00        3.45     0.50   \n",
       "\n",
       "   trip_distance  fare_amount  passenger_count  extra  \\\n",
       "0           6.51        15.00                5    NaN   \n",
       "1          22.30        59.50                1    NaN   \n",
       "2           1.85         8.50                1   0.50   \n",
       "3           2.47         9.50                1   0.50   \n",
       "4           3.49        12.50                1   0.50   \n",
       "\n",
       "   encoded_vendor_Creative Mobile Technologies, LLC  ...  \\\n",
       "0                                                 0  ...   \n",
       "1                                                 0  ...   \n",
       "2                                                 0  ...   \n",
       "3                                                 0  ...   \n",
       "4                                                 0  ...   \n",
       "\n",
       "   encoded_rate_type_JFK  encoded_rate_type_Nassau or Westchester  \\\n",
       "0                      0                                        0   \n",
       "1                      0                                        0   \n",
       "2                      0                                        0   \n",
       "3                      0                                        0   \n",
       "4                      0                                        0   \n",
       "\n",
       "  encoded_rate_type_Negotiated fare  encoded_rate_type_Newark  \\\n",
       "0                                 1                         0   \n",
       "1                                 0                         0   \n",
       "2                                 0                         0   \n",
       "3                                 0                         0   \n",
       "4                                 0                         0   \n",
       "\n",
       "   encoded_rate_type_Standard rate  encoded_trip_category_airport_trips  \\\n",
       "0                                0                                    0   \n",
       "1                                1                                    0   \n",
       "2                                1                                    0   \n",
       "3                                1                                    0   \n",
       "4                                1                                    0   \n",
       "\n",
       "   encoded_trip_category_inside_NYC_trips  \\\n",
       "0                                       0   \n",
       "1                                       1   \n",
       "2                                       1   \n",
       "3                                       1   \n",
       "4                                       1   \n",
       "\n",
       "   encoded_trip_category_outside_NYC_trips  encoded_trip_type_Dispatch  \\\n",
       "0                                        1                           0   \n",
       "1                                        0                           0   \n",
       "2                                        0                           0   \n",
       "3                                        0                           0   \n",
       "4                                        0                           0   \n",
       "\n",
       "   encoded_trip_type_Street-hail  \n",
       "0                              1  \n",
       "1                              1  \n",
       "2                              1  \n",
       "3                              1  \n",
       "4                              1  \n",
       "\n",
       "[5 rows x 37 columns]"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numeric_df = df.select_dtypes(include='number')\n",
    "\n",
    "\n",
    "# Create a correlation matrix\n",
    "TOTAL_AMOUNT = ['improvement_surcharge', 'tolls_amount',\n",
    "                'tip_amount', 'mta_tax', 'fare_amount', 'extra']\n",
    "numeric_df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Absoluting the negative values in money attributes\n",
    "\n",
    "- we will absolute the negative values in the money attributes because it is not possible to have negative money values except for :\n",
    "  - fare amount\n",
    "  - tolls amount\n",
    "- because they are possible to be negative values in the real world as if the passenger didn't pay the fare amount so the driver will have a negative amount of fare amount because it was loosing trip the same goes for the tolls amount\n",
    "- so we dont want to lose the information of the negative values in the fare amount and tolls amount because it is possible in the real world and we can draw insights from it\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [],
   "source": [
    "def absolute_negatives(df: pd.DataFrame, numerical_cols: List[str]):\n",
    "    \"\"\"\n",
    "    Convert negative values to absolute values for numerical columns\n",
    "    \"\"\"\n",
    "    for col in numerical_cols:\n",
    "        if (df[col].dtype == 'float64'):\n",
    "            df[col] = df[col].abs()\n",
    "\n",
    "\n",
    "absolute_negatives(df, [col for col in TOTAL_AMOUNT if col not in [\n",
    "                   'fare_amount', 'tolls_amount']])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### For the Toll amount and Fare amount they will only be negative if the passenger didn't pay them so we will keep them as it is <a id=\"fare-tolls-amount\"></a>\n",
    "- this means when payment type is Dispute or No charge the tolls amount and fare amount might be negative otherwise it is supposed to be positive"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_toll_and_fare_amount(df: pd.DataFrame) -> pd.DataFrame:\n",
    "    # Condition to check if the payment type is not 'Dispute' and not 'No charge'\n",
    "    not_no_charge_or_dispute = ~((df['payment_type'] == 'Dispute') | (df['payment_type'] == 'No charge'))\n",
    "    \n",
    "    # Make 'Toll Amount' and 'Fare Amount' positive for rows where the condition is met\n",
    "    df.loc[not_no_charge_or_dispute, 'tolls_amount'] = df['tolls_amount'].abs()\n",
    "    df.loc[not_no_charge_or_dispute, 'fare_amount'] = df['fare_amount'].abs()\n",
    "    \n",
    "    return df\n",
    "\n",
    "df = fix_toll_and_fare_amount(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <td>1.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.97</td>\n",
       "      <td>-0.05</td>\n",
       "      <td>0.21</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-0.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tolls_amount</th>\n",
       "      <td>-0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.16</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tip_amount</th>\n",
       "      <td>0.02</td>\n",
       "      <td>0.16</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.37</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.39</td>\n",
       "      <td>0.38</td>\n",
       "      <td>0.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mta_tax</th>\n",
       "      <td>0.97</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>0.01</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-0.06</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>-0.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fare_amount</th>\n",
       "      <td>-0.05</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.37</td>\n",
       "      <td>-0.06</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>extra</th>\n",
       "      <td>0.21</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.06</td>\n",
       "      <td>1.00</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trip_distance</th>\n",
       "      <td>0.01</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.39</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.74</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_trip_time_sec</th>\n",
       "      <td>0.04</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.38</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.89</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_amount</th>\n",
       "      <td>-0.02</td>\n",
       "      <td>0.31</td>\n",
       "      <td>0.53</td>\n",
       "      <td>-0.04</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.73</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       improvement_surcharge  tolls_amount  tip_amount  \\\n",
       "improvement_surcharge                   1.00         -0.00        0.02   \n",
       "tolls_amount                           -0.00          1.00        0.16   \n",
       "tip_amount                              0.02          0.16        1.00   \n",
       "mta_tax                                 0.97         -0.03        0.01   \n",
       "fare_amount                            -0.05          0.22        0.37   \n",
       "extra                                   0.21          0.03        0.02   \n",
       "trip_distance                           0.01          0.27        0.39   \n",
       "total_trip_time_sec                     0.04          0.20        0.38   \n",
       "total_amount                           -0.02          0.31        0.53   \n",
       "\n",
       "                       mta_tax  fare_amount  extra  trip_distance  \\\n",
       "improvement_surcharge     0.97        -0.05   0.21           0.01   \n",
       "tolls_amount             -0.03         0.22   0.03           0.27   \n",
       "tip_amount                0.01         0.37   0.02           0.39   \n",
       "mta_tax                   1.00        -0.06   0.20           0.00   \n",
       "fare_amount              -0.06         1.00   0.06           0.74   \n",
       "extra                     0.20         0.06   1.00          -0.03   \n",
       "trip_distance             0.00         0.74  -0.03           1.00   \n",
       "total_trip_time_sec       0.03         0.72   0.06           0.89   \n",
       "total_amount             -0.04         0.98   0.09           0.76   \n",
       "\n",
       "                       total_trip_time_sec  total_amount  \n",
       "improvement_surcharge                 0.04         -0.02  \n",
       "tolls_amount                          0.20          0.31  \n",
       "tip_amount                            0.38          0.53  \n",
       "mta_tax                               0.03         -0.04  \n",
       "fare_amount                           0.72          0.98  \n",
       "extra                                 0.06          0.09  \n",
       "trip_distance                         0.89          0.76  \n",
       "total_trip_time_sec                   1.00          0.73  \n",
       "total_amount                          0.73          1.00  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1080x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plot_correlation_Heatmap(numeric_df[TOTAL_AMOUNT+['trip_distance', 'total_trip_time_sec',\n",
    "                         'total_amount']], title='Correlation Matrix for TOTAL_AMOUNT Columns')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Investigate Fare amount <a id=\"investigate-fare-amount\"></a>\n",
    "\n",
    "- we will investigate the fare amount and see if there is any outliers or noise in the data\n",
    "- recompute the fare amount using the new distancce and time values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean           12.11\n",
       "std            10.65\n",
       "min          -315.00\n",
       "25%             6.50\n",
       "50%             9.50\n",
       "75%            15.00\n",
       "max         5,005.50\n",
       "Name: fare_amount, dtype: float64"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['fare_amount'].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_data(df, ['fare_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 5000 is an obvious noise because no way a taxi driver will charge 5000 dollars for a trip in NYC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column: fare_amount - Skewness: 86.31186805458117\n",
      "Column: trip_distance - Skewness: 2.655376575294367\n",
      "Column: total_trip_time_sec - Skewness: 2.164758249153264\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x576 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_kdeplots(df, ['fare_amount', 'trip_distance', 'total_trip_time_sec'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see the x-axis scale is to high due to noise in the data because it is impossible to have 5000 dollars as fare amount "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  we have to account for $3.00 initial charge in the Fare amount. <a id=\"fare-amount-initial-charge\"></a>\n",
    "- we have to account for $3.00 initial charge. [How Do you pay for a taxi in NYC](https://lovethemaldives.com/faq/how-much-do-you-pay-for-a-taxi-in-new-york#:~:text=%243.00%20initial%20charge.,Dutchess%2C%20Orange%20or%20Putnam%20Counties.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_fare_amount(row: pd.Series):\n",
    "    \"\"\"\n",
    "    we are accounting for the initial charge of 3 dollars if the trip started if it wasn't accounted for\n",
    "    \"\"\"\n",
    "    fare = row['fare_amount']\n",
    "    trip_time_sec = row['total_trip_time_sec']\n",
    "\n",
    "    if 0 < fare < 3 and trip_time_sec != 0:\n",
    "        # If fare is between 0 and 3 and trip time is not zero, increase fare by 3\n",
    "        return fare + 3\n",
    "    elif 0 > fare > -3 and trip_time_sec != 0:\n",
    "        # If fare is between -3 and 0 and trip time is not zero, decrease fare by 3\n",
    "        return fare - 3\n",
    "    else:\n",
    "        # Otherwise, keep the fare unchanged\n",
    "        return fare\n",
    "\n",
    "# Apply the enhanced function to the 'fare_amount' column\n",
    "df['fare_amount'] = df.apply(fix_fare_amount, axis=1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### We will build a model to Correct the Fare amount values to map it well <a id=\"impute-fare-amount\"></a>\n",
    "- we will use this columns because they influence the fare amount the trip_distance, total_trip_time_sec and if dispute or no charge to account for negatives\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [],
   "source": [
    "def detect_and_replace_fare_outliers(df:pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Detect and replace fare outliers using a linear regression model based on\n",
    "    trip_distance, total_trip_time_sec, and if dispute or no charge to account for negatives because they are highly correlated with fare_amount in logical sense\n",
    "    \"\"\"\n",
    "    \n",
    "    not_no_charge_or_dispute = ~((df['payment_type'] == 'Dispute') | (df['payment_type'] == 'No charge'))\n",
    "    not_no_charge_or_dispute = not_no_charge_or_dispute.astype(int)\n",
    "    df['not_no_charge_or_dispute'] = not_no_charge_or_dispute\n",
    "    \n",
    "    # Step 1: Detect outliers in the 'fare_amount' column\n",
    "    Q1 = df['fare_amount'].quantile(0.25)\n",
    "    Q3 = df['fare_amount'].quantile(0.75)\n",
    "    IQR = Q3 - Q1\n",
    "    lower_bound = Q1 - 1.5 * IQR\n",
    "    upper_bound = Q3 + 1 * IQR\n",
    "\n",
    "    \n",
    "    # Identify and flag outliers\n",
    "    is_outlier = (df['fare_amount'] < lower_bound) | (\n",
    "        df['fare_amount'] > upper_bound)\n",
    "\n",
    "    \n",
    "    # Step 2: Split the data into non-outlier and outlier subsets\n",
    "    non_outlier_data = df[~is_outlier]\n",
    "    outlier_data = df[is_outlier]\n",
    "    #encoded_payment_type_columns = [col for col in df.columns if col.startswith('encoded_payment_type')]\n",
    "\n",
    "    x = ['trip_distance', 'total_trip_time_sec','not_no_charge_or_dispute']\n",
    "\n",
    "    # Step 3: Train a linear regression model on the non-outlier data\n",
    "    model = LinearRegression()\n",
    "    model.fit(non_outlier_data[x], non_outlier_data['fare_amount'])\n",
    "\n",
    "    # Step 4: Predict fare_amount for the outlier data\n",
    "    predicted_fares = model.predict(outlier_data[x])\n",
    "\n",
    "    # Step 5: Replace outlier values with predicted values\n",
    "    df.loc[is_outlier, 'fare_amount'] = predicted_fares\n",
    "    \n",
    "    df.drop(columns=['not_no_charge_or_dispute'], inplace=True)\n",
    "\n",
    "    return df\n",
    "\n",
    "\n",
    "# Call the function to detect and replace fare outliers\n",
    "df = detect_and_replace_fare_outliers(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean           11.55\n",
       "std             7.73\n",
       "min            -6.00\n",
       "25%             6.50\n",
       "50%             9.00\n",
       "75%            14.50\n",
       "max           154.91\n",
       "Name: fare_amount, dtype: float64"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['fare_amount'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# after fixing the outliers\n",
    "plot_data(df, ['fare_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can notice how the data is more reasonable and the noise is removed and the data is more smooth and the outliers are handled by being smoothed still we have outliers as it appears but we will leave it as it is because it is not a big deal and it is not a big portion of the data and to make the model more robust for data in that sense and not overfitting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column: fare_amount - Skewness: 2.078110831585781\n",
      "Column: trip_distance - Skewness: 2.655376575294367\n",
      "Column: total_trip_time_sec - Skewness: 2.164758249153264\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x576 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_kdeplots(df, ['fare_amount', 'trip_distance', 'total_trip_time_sec'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can conclude from the above plot that the fare amount is fixed because it takes the same distribution as the trip distance an trip time\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Extra amount\n",
    "\n",
    "- based on data description it includes the $0.50 and $1 rush hour and overnight charges.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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/ur4n//5H0KhEFOnTuW3v/0toVCIb3zjG2zZsoVVq1Zx66238tJLL9HS0sJVV13F6aefvt/XO9Rxrr76apYuXUplZSUFBQVMnTr1oPXv2rWr83sDHVPsTjrpJHJycpg9ezY//elPufXWW7Esi9///vdkZ2eTnZ3NunXrWLduHSeddFKXn8Mev/rVr7pMN3z44Yd5/fXXqaysJC8vj9WrV7Nt2zYqKyvJyck5YH0bN25k48aNnZ+fd955FBcXs3PnTnJycjj66KMByM3NZefOnSxdupQTTzyRjz/+mPT09M4pgiNHjqS4uJiXXnqJm266CcMwyMrK4rzzzuPYY49lxIgRGIZx0O/V8ccfz1//+lcALr30UjZu3MjSpUu56qqrOPvss3nrrbd4++23GTduHOvWrSMnJ2ef8+OrVq9ezerVq/e7bcOGDXzyySekpaXx3HPPkZaWxmGHHcbf//53/vnPf/YqUH3961/v0XNERCJBgUpEJIa+9a1vce655/Lhhx/y0UcfMX/+fGpqapg7dy5PPPHEAZ930003sXLlyn0er6urA+ic9nbyySd3bvvqfSR7ps1NnDix200vrrzySlJTUxk6dCgTJ048YAjbMwpxzDHHdL72iBEjqK2tpby8vFuvFcnj7HHuuecyd+7c/W678MILeeCBBygrK2P48OGcf/753T7uqaee2vnx9u3b+c53vkNra+s++9XX1x80UM2YMWOfwPaXv/wF6Ph57R0GAXbu3ElmZiYALS0t+92enp7OnDlzeOyxx/jRj34EwOGHH879999/wCAL//6e7/l448aN7N69G4DLLruMt956i1deeYXGxkZM0+Tb3/42TufB7xy48847OwP+V6e07jlnc3NzO0c999Sw5zz4KtM0D/haPQ1gIiKRokAlIhIjoVCIdevWMX78eCZNmsSkSZM47LDD+O1vf0tLSwsALperc3/TNHE6nTQ2NnaGqXnz5nHaaadx4403smLFCizLAuCII45g69atrFu3jrFjxwIQDoe7jCadcMIJhMNhli1bxn//93/vd+Tlq372s5+RkZFxyP2GDx8OwLZt2zq/1l27dgEwbNgwgM6L74NdFHfnOJHy9NNPU1ZWhs/no6ysjL/97W/84Ac/6FatXq+38+O3336b1tZWRo8ezT//+U+CwSBnnnkmQOfPpyf2fA9OPPFEXnzxRRwOBwCNjY1YlsWOHTsAyM7O5s033+yspb29naamJgC+853vMG3aNKqqqliyZAn33Xcfc+fOPWig2vM93/vjww8/HIBzzjmHoUOH8vbbb+P3+4GO6ZN9ccQRRwAdbfDb2tpITU2lpKSky/cgNTUV+Pd0wb3vI/uqvX8mIiKxpEAlIhIjwWCQq666ilGjRpGfn09qaipvvPEG0DFqBDB48GA8Hg+hUIif/exnDBs2jJ/85CekpaXR2trKY489RkZGRmfDgD1mzJjBr371K37/+9+zdu1aUlJSqKqq4umnn+7cZ8CAAfz+97/niiuuYN68eWRlZXHTTTdF5GubNm0a8+fPZ8GCBQQCAcrLy6mtreW4447rbLSQm5vLrl27eOSRRzrv+cnNze3xcXriq/dQjR49mssvv5wtW7bw0EMPkZmZydNPP821117Lww8/zKRJk8jLy+usa8WKFfz617/mtNNOY8qUKft9jSFDhgAdUyrvu+++LlP4euMb3/gGI0aM4LPPPuP//b//x+jRo6moqODDDz/kz3/+MxMmTGDs2LGsXbuW7373u4wdO5aamhpWr17NnXfeydSpUznzzDM57bTTyM7O7gwhhwrGmzZt4vrrrwc6piKmpqZ2jtq53W4uvfRSnnrqKVavXs0xxxzT546EY8aM6bxX7aqrruLYY4/l1VdfxeFw8P/+3/8DOqZovvPOOzzzzDNUVFQwf/78Pr2miEg0qMufiEiM+Hw+vve97+H1elmxYgULFy4kIyODm2++uXNkxOv1cscdd5CVlcXixYv55z//icfjobCwkGHDhrF+/XoyMjL2ubi/4oorKCwsJC8vjxUrVvDWW2/td32mww8/nD//+c8MGDCAhx56iP/93/+NyNeWn5/PX//6V0455RTeeecdSktL+fa3v81f/vKXzpGDW2+9laOOOopPPvmEefPmUVNT06vj9MSee6j2/HvrrbcIBoP8/Oc/JxgMctddd3HCCSdw1113EQwG+cUvfkEwGOSCCy7grLPOoq2tjWefffaga2ddeOGFXHbZZbjdbt5//31++MMf9rjOvaWlpfHMM89QUFBAeXk5CxYsoKSkhIsvvpijjz4ap9PJ3LlzufLKK2lpaeHll19m48aNnH322Z1TPs8880yKi4t54YUX+PzzzznnnHP45S9/edDXveCCCxgyZAhr1qzhmGOO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XRx11FFdjnHSSSdRUFAAwFFHHcVdd93Frbfe2mWfW2+9lcLCQq666iqgY8QKOu7PCoVCHHfccQwePJjjjz8er9fLqlWrOkfJumP48OGdH9fW1gLw8MMPc8opp5Cenk5eXh4A27Zto7KykqlTp+J2u3nttdcIhUK8+eabAJ1fh4iIRI7b7gJERCTxPP7445x33nlAx/S8GTNmdG4rKysD4Oijj8bhcABwzDHHdNn2VYZh7PfxIUOG7BOA9rbneHtGofa81saNGykvL+/ul3NIJ5xwAgAZGRlAxyjc3q+/bt26fZpK7Ny5s0tdB7P392Xw4MFs376d73znO52vs7f6+nqOP/54zjnnHJYtW8aKFStYvnw5oEAlIhINGqESEZGY2jPasn379s5pbyUlJV22paamAh0tzQG2bt2632N5vd5uvdbeo0F7XmvYsGHdrtnp7Ph1aZrmfre7XK6Dvv73v/99Nm/e3Plv2bJlfPOb3+zWa4fDYR5//HEAMjMzOfXUU3n77bdpbW1l9OjRfPTRR7z//vud++/5nl522WUAzJs3j7Vr15KXl7ffaZEiItI3GqESEZGYOueccxg+fDg7d+5kxowZHHbYYbzxxhukpKR03vuTn5/P559/zkMPPcQHH3zA//zP//TqtS6++GKefPJJVq1axY9+9CNCoRDFxcUMGTKEKVOmdPs4ubm5AHz22WfMmTOHE044gSuuuOKQz5s2bRrz589n3rx57Nq1i8MOO4wvvviCtWvXsmnTpoM+94UXXuDNN9/k448/Zvv27bjdbubMmUNqaipDhgwBYMeOHdx3332dUwz3dvbZZ5OTk8O//vUvQKNTIiLRohEqERGJqbS0NP7+978zZcoUtm3bxvvvv89pp53GM8880zl97yc/+Qljx46ltLSU4uJirr766l69Vk5ODvPmzeOss85i7dq1bNiwgXPOOYd58+aRmZnZ7eNMmDCBgoICnE4nzz//fOc9SYdy/PHH8/TTTzN+/Hg++ugjXn31VVpaWrjxxhsP+dy333678x6oCy+8kOeff54LL7wQgAsvvJDLLrsMt9vN+++/zw9/+MN9nu9yufjOd74DdNxrpkAlIhIdDqu7bYZEREQkrqxbt44rrriC8ePH79NtUUREIkNT/kRERBLQM8880zmSNn36dJurERFJXBqhEhERSUB5eXmkpaUxdepU7r777s6OiiIiElkKVCIiIiIiIr2kphQiIiIiIiK9pEAlIiIiIiLSSwpUIiIiIiIivaRAJSIiIiIi0ksKVCIiIiIiIr2kQCUiIiIiItJL/x/wSsTRd6A7kwAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "def plot_extra_by_hour(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Plot the extra fees by hour of the day using a stack plot.\n",
    "    \"\"\"\n",
    "    df['hour'] = df['lpep_pickup_datetime'].dt.hour\n",
    "    df['hour'] = df['hour'].astype('category')\n",
    "    \n",
    "    # Group by hour and extra, then calculate the count\n",
    "    grouped = df.groupby(['hour', 'extra']).size().unstack(fill_value=0)\n",
    "    \n",
    "    # Create a stack plot\n",
    "    stacked_data = grouped.T.values\n",
    "    hours = grouped.index\n",
    "    labels = grouped.columns\n",
    "    plt.figure(figsize=(12, 6))\n",
    "    plt.stackplot(hours, stacked_data, labels=labels, alpha=0.7)\n",
    "    \n",
    "    plt.title(\"Stack Plot of Extra Fees by Hour\")\n",
    "    plt.xlabel(\"Hour of the Day\")\n",
    "    plt.ylabel(\"Count\")\n",
    "    plt.legend(loc='upper left')\n",
    "    plt.show()\n",
    "    \n",
    "\n",
    "plot_extra_by_hour(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [],
   "source": [
    "def handle_extra_fees(x: pd.Series):\n",
    "\n",
    "    if (not pd.isna(x['extra']) and x['extra'] in [0, 0.5, 1]):\n",
    "        return x['extra']\n",
    "    hour = x['hour']\n",
    "    # we have to check if the hour is rush hour or not by using the is_rush_hour column that we feature engineered before\n",
    "    isRushHour = 'is_rush_hour' in x and x['is_rush_hour'] == 1\n",
    "    # rush hour\n",
    "    if (isRushHour):\n",
    "        return 1\n",
    "    # begining and end of day\n",
    "    elif ((hour >= 20 and hour <= 23) or (hour >= 0 and hour <= 5)):\n",
    "        return 0.5\n",
    "    return 0\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_extra_fees(df: pd.DataFrame):\n",
    "    \"\"\"\n",
    "    Fix extra fees by replacing them with the correct extra fee based on if it is rush hour or not or overnight\n",
    "    \"\"\"\n",
    "    df['hour'] = df['lpep_pickup_datetime'].dt.hour\n",
    "    df['extra'] = df.apply(handle_extra_fees, axis=1)\n",
    "    df.drop(columns=['hour'], inplace=True)\n",
    "\n",
    "\n",
    "fix_extra_fees(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# after fix extra fees\n",
    "plot_extra_by_hour(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.00    595582\n",
       "0.50    461651\n",
       "0.00    195335\n",
       "Name: extra, dtype: int64"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['extra'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see the extra column values are fixed according to the hour of the day and the values seems more reasonable according the data description"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### mta_tax\n",
    "\n",
    "- 50 cents MTA State Surcharge. This surcharge is required for all trips that end in New York City or Nassau, Suffolk, Westchester, Rockland, Dutchess, Orange or Putnam Counties. This surcharge is not required for trips that end in Newark, or in any other New Jersey municipality.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column \"mta_tax\" does not contain missing values as NaN.\n",
      "No columns need imputation.\n"
     ]
    }
   ],
   "source": [
    "identify_columns_needing_imputation(df, ['mta_tax'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.50    1225008\n",
       "0.00      27560\n",
       "Name: mta_tax, dtype: int64"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['mta_tax'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- incase of data integration new data we handle the values that are not in the range of 0 or 0.5\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_mta_tax(row):\n",
    "    \"\"\"\n",
    "    Fix mta tax by replacing them with the correct mta tax\n",
    "    \"\"\"\n",
    "    if pd.isna(row['mta_tax']) or row['mta_tax'] not in [0, 0.5]:\n",
    "        return 0.5\n",
    "    return row['mta_tax']\n",
    "\n",
    "\n",
    "df['mta_tax'] = df.apply(fix_mta_tax, axis=1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### tolls_amount\n",
    "\n",
    "- Total amount of all tolls paid in trip.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# before fixing tolls amount\n",
    "plot_data(df, ['tolls_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see we have outliers in the tolls amount that we need to investigate and handle them specially that data point above 500"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- we will floor the values from -151 in case the driver payed the tolls amount but the passenger didn't pay it so the driver will have a negative tolls amount \n",
    "- we will cap it at 151 because it is the (worst-case)max tolls amount in NYC [NYC Tolls](https://www.uproad.com/blog/how-much-are-tolls-in-new-york)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [],
   "source": [
    "replace_outliers(df, 'tolls_amount', -151, 151)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean            0.11\n",
       "std             0.86\n",
       "min           -12.50\n",
       "25%             0.00\n",
       "50%             0.00\n",
       "75%             0.00\n",
       "max           151.00\n",
       "Name: tolls_amount, dtype: float64"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['tolls_amount'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### why we choose to  replace tolls_amount outlier values by the mean of the group by pu_location and do_location ? <a id=\"replace-outliers-mean\"></a>\n",
    "- because tolls_amount will be the same if we took the same route so we will group by the pu_location and do_location and replace the outliers with the mean of the group by pu_location and do_location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [],
   "source": [
    "# here we are fixing the tolls amount by replacing the outliers with the mean of the tolls amount according to the grouping\n",
    "df = detect_and_fix_outliers_by_group(\n",
    "    df, 'tolls_amount', ['pu_location', 'do_location'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean            0.07\n",
       "std             0.61\n",
       "min             0.00\n",
       "25%             0.00\n",
       "50%             0.00\n",
       "75%             0.00\n",
       "max            34.70\n",
       "Name: tolls_amount, dtype: float64"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['tolls_amount'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# after fixing tolls amount\n",
    "plot_data(df, ['tolls_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- the box plot is reasonable to have outliers because most of the trips didnt pay toll amount because most of th trips are within neighborhood and most of the trips where in locations that dont have tolls"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### improvement_surcharge\n",
    "\n",
    "- 0.30 dollars improvement surcharge assessed trips at the flag drop. The improvement surcharge began being levied in 2015.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.30    1225664\n",
       "0.00      26904\n",
       "Name: improvement_surcharge, dtype: int64"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['improvement_surcharge'].value_counts()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- making sure of validity of the values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trip_type</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Dispatch</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.30</td>\n",
       "      <td>25593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>0.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1226975</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             mean  median  min  max    count\n",
       "trip_type                                   \n",
       "Dispatch     0.00    0.00 0.00 0.30    25593\n",
       "Street-hail  0.30    0.30 0.00 0.30  1226975"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['trip_type'])['improvement_surcharge'].aggregate(\n",
    "    ['mean', 'median', 'min', 'max', 'count'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_improvement_surcharge(df):\n",
    "    if df['trip_type'] == 'Street-hail':\n",
    "        return 0.3\n",
    "    elif df['trip_type'] == 'Dispatch':\n",
    "        return 0\n",
    "    else:\n",
    "        return df['improvement_surcharge']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trip_type</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Dispatch</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.30</td>\n",
       "      <td>25593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Street-hail</th>\n",
       "      <td>0.30</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.30</td>\n",
       "      <td>1226975</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             mean  median  min  max    count\n",
       "trip_type                                   \n",
       "Dispatch     0.00    0.00 0.00 0.30    25593\n",
       "Street-hail  0.30    0.30 0.00 0.30  1226975"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['trip_type'])['improvement_surcharge'].aggregate(\n",
    "    ['mean', 'median', 'min', 'max', 'count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_improvement_surcharge(row: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Fix the improvement surcharge for trips based on the conditions provided.\n",
    "    \"\"\"\n",
    "    # Filter trips that began in or after 2015\n",
    "    has_surcharge = (df['lpep_pickup_datetime'].dt.year >=\n",
    "                     2015) & (df['trip_type'] == 'Street-hail')\n",
    "\n",
    "    # Set the improvement surcharge to 0.30 dollars for trips with the surcharge\n",
    "    df.loc[has_surcharge, 'improvement_surcharge'] = 0.3\n",
    "\n",
    "    dont_has_surcharge = (df['lpep_pickup_datetime'].dt.year < 2015) | (\n",
    "        df['trip_type'] == 'Dispatch')\n",
    "\n",
    "    # Set the improvement surcharge to 0.3 for 'Street-hail' trips and 0 for 'Dispatch' trips\n",
    "    df.loc[dont_has_surcharge, 'improvement_surcharge'] = 0\n",
    "\n",
    "    return df\n",
    "\n",
    "\n",
    "df = fix_improvement_surcharge(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### tip_amount\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.00     721433\n",
       "1.00      42882\n",
       "2.00      31467\n",
       "3.00      12233\n",
       "1.46       9968\n",
       "          ...  \n",
       "5.12          1\n",
       "26.86         1\n",
       "31.09         1\n",
       "48.10         1\n",
       "81.80         1\n",
       "Name: tip_amount, Length: 1809, dtype: int64"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['tip_amount'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Before fixing the tip amount\n",
    "plot_data(df, ['tip_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- as we can see the tip amount skewness is high and values are not that good"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- here we clip the tip amount to be between 0 and min(tip amount , fare amount) because obviously the tip amount can't be more than the fare amount"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [],
   "source": [
    "def clip_tip_amount(row: pd.Series):\n",
    "    \"\"\"\n",
    "    Clip tip_amount \n",
    "    \"\"\"\n",
    "    if pd.isna(row['tip_amount']) or row['tip_amount'] < 0:\n",
    "        return 0\n",
    "    if (row['fare_amount'] > 0):\n",
    "        return min(row['tip_amount'], row['fare_amount'])\n",
    "    return row['tip_amount']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['tip_amount'] = df.apply(clip_tip_amount, axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### why we choose to replace tip_amount outlier  values by the mean of the group by pu_location and do_location ? <a id=\"replace-outliers-mean\"></a>\n",
    "- because tip_amount can be influenced by the standard of the place you are going from and to\n",
    "  - if a person took ride from a place that is considered a high standard place to a place that is considered a High standard place he might tip more than usual\n",
    "  - if a person took ride from a place that is considered a high standard place to a place that is considered a low standard place he might tip normal\n",
    "  - if a person took ride from a place that is considered a low standard place to a place that is considered a low standard place he might tip less than usual"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from nice place to nice place\n",
    "df = detect_and_fix_outliers_by_group(df, 'tip_amount', ['pu_location', 'do_location'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2160x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# after fixing the tip amount\n",
    "plot_data(df, ['tip_amount'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- tip amount makes sense that most of the trips because passengers rarely tip the driver so the outliers are reasonable and we will keep it as it is because it is not a big deal and it is not a big portion of the data and to make the model more robust for data in that sense and not overfitting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### total_amount <a id=\"total-amount\"></a>\n",
    "\n",
    "- The Total amount is the sum of the following fields: fare_amount + extra + mta_tax + tip_amount + tolls_amount + improvement_surcharge\n",
    "- so we will re-sum the total amount to make sure that it is correct\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   1,252,568.00\n",
       "mean           14.61\n",
       "std            11.97\n",
       "min          -315.00\n",
       "25%             7.88\n",
       "50%            11.30\n",
       "75%            17.34\n",
       "max         5,006.30\n",
       "Name: total_amount, dtype: float64"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['total_amount'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "